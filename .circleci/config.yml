version: 2
jobs:
  build:
    working_directory: ~/project
    docker: 
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            
  android: 
    working_directory: ~/android
    docker:
      - image: circleci/android:api-29
    environment:
        JVM_OPTS: -Xmx3200m

    steps:
      - checkout:
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Install fastlane
          command: bundle install
      - run:
          name: Assemble the builds
          command: bundle exec fastlane assemble_build
      - store_artifacts:
          path: android/app/build/reports
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }} 

  ios:
    macos:
      xcode: "11.1.0"
    working_directory: ~/ios
    environment:
      FL_OUTPUT_DIR: ~/ios/output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: fastlane
          command: fastlane gym
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

workflows:
  version: 2
  node-android-ios:
    jobs:
      - build
      - android:
          requires:
            - build
      - ios:
          requires:
            - build