diff --git a/node_modules/expo-av/android/src/main/java/expo/modules/av/player/datasource/SharedCookiesDataSourceFactory.java b/node_modules/expo-av/android/src/main/java/expo/modules/av/player/datasource/SharedCookiesDataSourceFactory.java
index 729ba7f..b430131 100644
--- a/node_modules/expo-av/android/src/main/java/expo/modules/av/player/datasource/SharedCookiesDataSourceFactory.java
+++ b/node_modules/expo-av/android/src/main/java/expo/modules/av/player/datasource/SharedCookiesDataSourceFactory.java
@@ -15,11 +15,25 @@ import okhttp3.OkHttpClient;
 public class SharedCookiesDataSourceFactory implements DataSource.Factory {
   private final DataSource.Factory mDataSourceFactory;
   
+  // Add static client field to be used across instances
+  private static OkHttpClient client;
+  
+  // Add method to set custom OkHttpClient from outside
+  public static void setOkHttpClient(OkHttpClient okHttpClient) {
+    client = okHttpClient;
+  }
+
   public SharedCookiesDataSourceFactory(Context reactApplicationContext, String userAgent, Map<String, Object> requestHeaders, TransferListener transferListener) {
-    OkHttpClient.Builder builder = new OkHttpClient.Builder();
-    builder.cookieJar(new JavaNetCookieJar(new ForwardingCookieHandler()));
-    OkHttpClient client = builder.build();
-    mDataSourceFactory = new DefaultDataSourceFactory(reactApplicationContext, transferListener, new CustomHeadersOkHttpDataSourceFactory(client, userAgent, requestHeaders));
+    // Use the static client if available, otherwise create a new one
+    OkHttpClient localClient;
+    if (client != null) {
+      localClient = client;
+    } else {
+      OkHttpClient.Builder builder = new OkHttpClient.Builder();
+      builder.cookieJar(new JavaNetCookieJar(new ForwardingCookieHandler()));
+      localClient = builder.build();
+    }
+    mDataSourceFactory = new DefaultDataSourceFactory(reactApplicationContext, transferListener, new CustomHeadersOkHttpDataSourceFactory(localClient, userAgent, requestHeaders));
   }
 
   @Override
