diff --git a/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm b/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm
index 8667fb9..676867d 100644
--- a/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm
+++ b/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm
@@ -140,12 +140,12 @@ -(void)URLSession:(NSURLSession *)session didReceiveChallenge:(NSURLAuthenticati
 
   // https://github.com/ammarahm-ed/react-native-mmkv-storage/blob/master/src/loader.js#L31
   NSString *key = [secureStorage getSecureKey:[self stringToHex:@"com.MMKV.default"]];
+  NSURLCredential *credential = [NSURLCredential credentialForTrust:challenge.protectionSpace.serverTrust];
 
   if (key == NULL) {
-    return;
+    return completionHandler(NSURLSessionAuthChallengePerformDefaultHandling, credential);
   }
 
-  NSURLCredential *credential = [NSURLCredential credentialForTrust:challenge.protectionSpace.serverTrust];
   NSData *cryptKey = [key dataUsingEncoding:NSUTF8StringEncoding];
   MMKV *mmkv = [MMKV mmkvWithID:@"default" cryptKey:cryptKey mode:MMKVMultiProcess];
   clientSSL = [mmkv getStringForKey:host];
diff --git a/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.m b/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.m
index b60b519..fbaae31 100644
--- a/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.m
+++ b/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.m
@@ -557,19 +557,17 @@ - (void)_initializeStreams
     // https://github.com/ammarahm-ed/react-native-mmkv-storage/blob/master/src/loader.js#L31
     NSString *key = [secureStorage getSecureKey:[self stringToHex:@"com.MMKV.default"]];
 
-    if (key == NULL) {
-      return;
-    }
-
-    NSData *cryptKey = [key dataUsingEncoding:NSUTF8StringEncoding];
-    MMKV *mmkv = [MMKV mmkvWithID:@"default" cryptKey:cryptKey mode:MMKVMultiProcess];
-    clientSSL = [mmkv getStringForKey:host];
-    if (clientSSL) {
-        NSData *data = [clientSSL dataUsingEncoding:NSUTF8StringEncoding];
-        id dict = [NSJSONSerialization JSONObjectWithData:data options:0 error:nil];
-        NSString *path = [dict objectForKey:@"path"];
-        NSString *password = [dict objectForKey:@"password"];
-        [self setClientSSL:path password:password options:SSLOptions];
+    if (key != NULL) {
+        NSData *cryptKey = [key dataUsingEncoding:NSUTF8StringEncoding];
+        MMKV *mmkv = [MMKV mmkvWithID:@"default" cryptKey:cryptKey mode:MMKVMultiProcess];
+        clientSSL = [mmkv getStringForKey:host];
+        if (clientSSL) {
+            NSData *data = [clientSSL dataUsingEncoding:NSUTF8StringEncoding];
+            id dict = [NSJSONSerialization JSONObjectWithData:data options:0 error:nil];
+            NSString *path = [dict objectForKey:@"path"];
+            NSString *password = [dict objectForKey:@"password"];
+            [self setClientSSL:path password:password options:SSLOptions];
+        }
     }
 
     [_outputStream setProperty:SSLOptions
