diff --git a/node_modules/@react-navigation/elements/package.json b/node_modules/@react-navigation/elements/package.json
index bed0995..5822c5c 100644
--- a/node_modules/@react-navigation/elements/package.json
+++ b/node_modules/@react-navigation/elements/package.json
@@ -20,10 +20,12 @@
   "homepage": "https://reactnavigation.org",
   "source": "./src/index.tsx",
   "main": "./lib/commonjs/index.js",
+  "react-native": "./src/index.tsx",
   "module": "./lib/module/index.js",
   "types": "./lib/typescript/commonjs/src/index.d.ts",
   "exports": {
     ".": {
+      "react-native": "./src/index.tsx",
       "import": {
         "types": "./lib/typescript/module/src/index.d.ts",
         "default": "./lib/module/index.js"
diff --git a/node_modules/@react-navigation/elements/src/Header/HeaderIcon.tsx b/node_modules/@react-navigation/elements/src/Header/HeaderIcon.tsx
index bd30826..f31a032 100644
--- a/node_modules/@react-navigation/elements/src/Header/HeaderIcon.tsx
+++ b/node_modules/@react-navigation/elements/src/Header/HeaderIcon.tsx
@@ -1,9 +1,11 @@
 import { useLocale, useTheme } from '@react-navigation/native';
-import { Image, type ImageProps, Platform, StyleSheet } from 'react-native';
+import { Image, type ImageProps, Platform, StyleSheet, useWindowDimensions } from 'react-native';
 
 export function HeaderIcon({ source, style, ...rest }: ImageProps) {
   const { colors } = useTheme();
   const { direction } = useLocale();
+  const { fontScale } = useWindowDimensions();
+  const size = ICON_SIZE * fontScale;
 
   return (
     <Image
@@ -11,13 +13,13 @@ export function HeaderIcon({ source, style, ...rest }: ImageProps) {
       resizeMode="contain"
       fadeDuration={0}
       tintColor={colors.text}
-      style={[styles.icon, direction === 'rtl' && styles.flip, style]}
+      style={[styles.icon, direction === 'rtl' && styles.flip, style, { width: size, height: size }]}
       {...rest}
     />
   );
 }
 
-export const ICON_SIZE = Platform.OS === 'ios' ? 21 : 24;
+export const ICON_SIZE = Platform.OS === 'ios' ? 19 : 24;
 export const ICON_MARGIN = Platform.OS === 'ios' ? 8 : 3;
 
 const styles = StyleSheet.create({
@@ -25,6 +27,7 @@ const styles = StyleSheet.create({
     width: ICON_SIZE,
     height: ICON_SIZE,
     margin: ICON_MARGIN,
+    // marginLeft: 1
   },
   flip: {
     transform: 'scaleX(-1)',
diff --git a/node_modules/@react-navigation/elements/src/PlatformPressable.tsx b/node_modules/@react-navigation/elements/src/PlatformPressable.tsx
index e95e14f..ac3f5a8 100644
--- a/node_modules/@react-navigation/elements/src/PlatformPressable.tsx
+++ b/node_modules/@react-navigation/elements/src/PlatformPressable.tsx
@@ -5,12 +5,18 @@ import {
   Easing,
   type GestureResponderEvent,
   Platform,
-  Pressable,
   type PressableProps,
   type StyleProp,
   type ViewStyle,
 } from 'react-native';
 
+let Pressable
+if (Platform.OS === 'android') {
+  Pressable = require('react-native-gesture-handler').BorderlessButton
+} else {
+  Pressable = require('react-native').Pressable
+}
+
 type HoverEffectProps = {
   color?: string;
   hoverOpacity?: number;
