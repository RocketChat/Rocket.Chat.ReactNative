// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Story Snapshots Avatar AvatarExternalProviderUrl should match snapshot 1`] = `
<View
  accessibilityLabel="Avatar's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://hips.hearstapps.com/hmg-prod/images/dog-puppy-on-garden-royalty-free-image-1586966191.jpg?crop=0.752xw:1.00xh;0.175xw,0&resize=1200:*&format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar AvatarPath should match snapshot 1`] = `
<View
  accessibilityLabel="[missing {{username}} value]'s avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar AvatarRoomId should match snapshot 1`] = `
<View
  accessibilityLabel="[missing {{username}} value]'s avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/room/devWBbYr7inwupPqK?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar AvatarText should match snapshot 1`] = `
<View
  accessibilityLabel="Avatar's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/Avatar?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar AvatarUrl should match snapshot 1`] = `
<View
  accessibilityLabel="[missing {{username}} value]'s avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://user-images.githubusercontent.com/29778115/89444446-14738480-d728-11ea-9412-75fd978d95fb.jpg",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar Channel should match snapshot 1`] = `
<View
  accessibilityLabel="general's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/@general?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar Children should match snapshot 1`] = `
<View
  accessibilityLabel="Avatar's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/Avatar?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar CustomBorderRadius should match snapshot 1`] = `
<View
  accessibilityLabel="Avatar's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 28,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={28}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/Avatar?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 28,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar CustomStyle should match snapshot 1`] = `
<View
  accessibilityLabel="Avatar's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      {
        "padding": 16,
      },
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/Avatar?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar Direct should match snapshot 1`] = `
<View
  accessibilityLabel="diego.mello's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar Emoji should match snapshot 1`] = `
<View
  accessibilityLabel="[missing {{username}} value]'s avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="contain"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    source={
      [
        {
          "uri": "https://open.rocket.chat/emoji-custom/troll.jpg",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar RoomAvatarExternalProviderUrl should match snapshot 1`] = `
<View
  accessibilityLabel="[missing {{username}} value]'s avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://cdn.pensador.com/img/authors/ho/me/homer-simpson-l.jpg?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar Static should match snapshot 1`] = `
<View
  accessibilityLabel="[missing {{username}} value]'s avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://user-images.githubusercontent.com/29778115/89444446-14738480-d728-11ea-9412-75fd978d95fb.jpg",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar Touchable should match snapshot 1`] = `
<View
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <View
    accessibilityLabel="Avatar's avatar"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <ViewManagerAdapter_ExpoImage
      borderRadius={4}
      containerViewRef={"[React.ref]"}
      contentFit="cover"
      contentPosition={
        {
          "left": "50%",
          "top": "50%",
        }
      }
      height={56}
      nativeViewRef={"[React.ref]"}
      onError={[Function]}
      onLoad={[Function]}
      onLoadStart={[Function]}
      onProgress={[Function]}
      placeholder={[]}
      priority="high"
      source={
        [
          {
            "headers": {
              "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
            },
            "uri": "https://open.rocket.chat/avatar/Avatar?format=png&size=112",
          },
        ]
      }
      style={
        {
          "borderRadius": 4,
          "height": 56,
          "width": 56,
        }
      }
      transition={null}
      width={56}
    />
  </View>
</View>
`;

exports[`Story Snapshots Avatar WithETag should match snapshot 1`] = `
<View
  accessibilityLabel="djorkaeff.alexandre's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/djorkaeff.alexandre?format=png&size=112&etag=5ag8KffJcZj9m5rCv",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar WithoutETag should match snapshot 1`] = `
<View
  accessibilityLabel="djorkaeff.alexandre's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://open.rocket.chat/avatar/djorkaeff.alexandre?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots Avatar WrongServer should match snapshot 1`] = `
<View
  accessibilityLabel="Avatar's avatar"
  accessible={true}
  style={
    [
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      },
      undefined,
    ]
  }
  testID="avatar"
>
  <ViewManagerAdapter_ExpoImage
    borderRadius={4}
    containerViewRef={"[React.ref]"}
    contentFit="cover"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={56}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    priority="high"
    source={
      [
        {
          "headers": {
            "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
          },
          "uri": "https://google.com/avatar/Avatar?format=png&size=112",
        },
      ]
    }
    style={
      {
        "borderRadius": 4,
        "height": 56,
        "width": 56,
      }
    }
    transition={null}
    width={56}
  />
</View>
`;

exports[`Story Snapshots BackgroundContainer Basic should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_light",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`Story Snapshots BackgroundContainer BlackThemeLoading should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_black",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
  <ActivityIndicator
    color="#9EA2A8"
    style={
      {
        "backgroundColor": "transparent",
        "fontFamily": "Inter",
        "fontSize": 16,
        "fontWeight": "400",
        "left": 0,
        "paddingHorizontal": 24,
        "position": "absolute",
        "right": 0,
        "textAlign": "center",
        "top": 60,
      }
    }
  />
</View>
`;

exports[`Story Snapshots BackgroundContainer BlackThemeText should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_black",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "left": 0,
          "paddingHorizontal": 24,
          "position": "absolute",
          "right": 0,
          "textAlign": "center",
          "top": 60,
        },
        {
          "color": "#9EA2A8",
        },
      ]
    }
  >
    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
  </Text>
</View>
`;

exports[`Story Snapshots BackgroundContainer DarkThemeLoading should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_dark",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
  <ActivityIndicator
    color="#9EA2A8"
    style={
      {
        "backgroundColor": "transparent",
        "fontFamily": "Inter",
        "fontSize": 16,
        "fontWeight": "400",
        "left": 0,
        "paddingHorizontal": 24,
        "position": "absolute",
        "right": 0,
        "textAlign": "center",
        "top": 60,
      }
    }
  />
</View>
`;

exports[`Story Snapshots BackgroundContainer DarkThemeText should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_dark",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "left": 0,
          "paddingHorizontal": 24,
          "position": "absolute",
          "right": 0,
          "textAlign": "center",
          "top": 60,
        },
        {
          "color": "#9EA2A8",
        },
      ]
    }
  >
    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
  </Text>
</View>
`;

exports[`Story Snapshots BackgroundContainer Loading should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_light",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
  <ActivityIndicator
    color="#6C727A"
    style={
      {
        "backgroundColor": "transparent",
        "fontFamily": "Inter",
        "fontSize": 16,
        "fontWeight": "400",
        "left": 0,
        "paddingHorizontal": 24,
        "position": "absolute",
        "right": 0,
        "textAlign": "center",
        "top": 60,
      }
    }
  />
</View>
`;

exports[`Story Snapshots BackgroundContainer LongText should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_light",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "left": 0,
          "paddingHorizontal": 24,
          "position": "absolute",
          "right": 0,
          "textAlign": "center",
          "top": 60,
        },
        {
          "color": "#6C727A",
        },
      ]
    }
  >
    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
  </Text>
</View>
`;

exports[`Story Snapshots BackgroundContainer Text should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      {
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Image
      source={
        {
          "uri": "message_empty_light",
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "height": "100%",
            "width": "100%",
          },
          undefined,
        ]
      }
    />
  </View>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "left": 0,
          "paddingHorizontal": 24,
          "position": "absolute",
          "right": 0,
          "textAlign": "center",
          "top": 60,
        },
        {
          "color": "#6C727A",
        },
      ]
    }
  >
    Text here
  </Text>
</View>
`;

exports[`Story Snapshots Button CustomButton should match snapshot 1`] = `
<View
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "purple",
      "borderRadius": 4,
      "justifyContent": "center",
      "marginBottom": 12,
      "opacity": 1,
      "padding": 10,
      "paddingHorizontal": 16,
      "paddingVertical": 14,
    }
  }
  testID="testButton"
>
  <Text
    style={
      [
        {
          "color": "yellow",
          "fontSize": 18,
        },
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontWeight": "500",
          "textAlign": "center",
        },
        [
          {
            "textAlign": "left",
          },
        ],
      ]
    }
  >
    Press me!
  </Text>
</View>
`;

exports[`Story Snapshots Button DisabledButton should match snapshot 1`] = `
<View
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#D1EBFE",
      "borderRadius": 4,
      "justifyContent": "center",
      "marginBottom": 12,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 14,
    }
  }
  testID="testButton"
>
  <Text
    style={
      [
        {
          "color": "#FFFFFF",
          "fontSize": 16,
        },
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontWeight": "500",
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Press me!
  </Text>
</View>
`;

exports[`Story Snapshots Button DisabledLoadingButton should match snapshot 1`] = `
<View
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#D1EBFE",
      "borderRadius": 4,
      "justifyContent": "center",
      "marginBottom": 12,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 14,
    }
  }
  testID="testButton"
>
  <ActivityIndicator
    color="#FFFFFF"
    style={
      {
        "padding": 0,
      }
    }
  />
</View>
`;

exports[`Story Snapshots Button LoadingButton should match snapshot 1`] = `
<View
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#D1EBFE",
      "borderRadius": 4,
      "justifyContent": "center",
      "marginBottom": 12,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 14,
    }
  }
  testID="testButton"
>
  <ActivityIndicator
    color="#FFFFFF"
    style={
      {
        "padding": 0,
      }
    }
  />
</View>
`;

exports[`Story Snapshots Button PrimaryButton should match snapshot 1`] = `
<View
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#156FF5",
      "borderRadius": 4,
      "justifyContent": "center",
      "marginBottom": 12,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 14,
    }
  }
  testID="testButton"
>
  <Text
    style={
      [
        {
          "color": "#FFFFFF",
          "fontSize": 16,
        },
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontWeight": "500",
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Press me!
  </Text>
</View>
`;

exports[`Story Snapshots Button SecondaryButton should match snapshot 1`] = `
<View
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#E4E7EA",
      "borderRadius": 4,
      "justifyContent": "center",
      "marginBottom": 12,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 14,
    }
  }
  testID="testButton"
>
  <Text
    style={
      [
        {
          "color": "#2F343D",
          "fontSize": 16,
        },
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontWeight": "500",
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Press me!
  </Text>
</View>
`;

exports[`Story Snapshots Button SmallButton should match snapshot 1`] = `
<View
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "center",
      "backgroundColor": "#156FF5",
      "borderRadius": 4,
      "marginBottom": 12,
      "opacity": 1,
      "paddingHorizontal": 12,
      "paddingVertical": 8,
    }
  }
  testID="testButton"
>
  <Text
    style={
      [
        {
          "color": "#FFFFFF",
          "fontSize": 16,
        },
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 12,
          "fontWeight": "700",
          "lineHeight": 18,
          "textAlign": "left",
        },
        undefined,
      ]
    }
  >
    Press me!
  </Text>
</View>
`;

exports[`Story Snapshots CannedResponseItem Itens should match snapshot 1`] = `
[
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "maxHeight": 141,
        "minHeight": 117,
        "opacity": 1,
        "padding": 16,
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "height": 36,
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "flex": 1,
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontWeight": "500",
                "paddingBottom": 0,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          !
          !FAQ4
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "flex": 1,
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          Private
        </Text>
      </View>
      <View
        accessibilityLabel="Use"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#F7F8FA",
            "borderRadius": 4,
            "height": 28,
            "justifyContent": "center",
            "marginBottom": 12,
            "marginLeft": 8,
            "opacity": 1,
            "paddingHorizontal": 16,
            "paddingVertical": 14,
            "width": 56,
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#1F2329",
                "fontSize": 12,
              },
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontWeight": "500",
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Use
        </Text>
      </View>
    </View>
    <Text
      ellipsizeMode="tail"
      numberOfLines={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 14,
            "fontWeight": "400",
            "marginTop": 8,
            "paddingBottom": 0,
            "paddingTop": 0,
            "textAlign": "left",
          },
          {
            "color": "#6C727A",
          },
        ]
      }
    >
      “
      ZCVXZVXCZVZXVZXCVZXCVXZCVZX
      ”
    </Text>
    <View
      style={
        {
          "flexDirection": "row",
          "overflow": "hidden",
        }
      }
    />
  </View>,
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "maxHeight": 141,
        "minHeight": 117,
        "opacity": 1,
        "padding": 16,
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "height": 36,
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "flex": 1,
                "fontFamily": "Inter",
                "fontSize": 14,
                "fontWeight": "500",
                "paddingBottom": 0,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          !
          test4mobilePrivate
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "flex": 1,
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          Private
        </Text>
      </View>
      <View
        accessibilityLabel="Use"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#F7F8FA",
            "borderRadius": 4,
            "height": 28,
            "justifyContent": "center",
            "marginBottom": 12,
            "marginLeft": 8,
            "opacity": 1,
            "paddingHorizontal": 16,
            "paddingVertical": 14,
            "width": 56,
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#1F2329",
                "fontSize": 12,
              },
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontWeight": "500",
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Use
        </Text>
      </View>
    </View>
    <Text
      ellipsizeMode="tail"
      numberOfLines={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 14,
            "fontWeight": "400",
            "marginTop": 8,
            "paddingBottom": 0,
            "paddingTop": 0,
            "textAlign": "left",
          },
          {
            "color": "#6C727A",
          },
        ]
      }
    >
      “
      test for mobile private
      ”
    </Text>
    <View
      style={
        {
          "flexDirection": "row",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 4,
              "height": 16,
              "marginRight": 4,
              "marginTop": 8,
            },
            {
              "backgroundColor": "#EBECEF",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingHorizontal": 4,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          HQ
        </Text>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 4,
              "height": 16,
              "marginRight": 4,
              "marginTop": 8,
            },
            {
              "backgroundColor": "#EBECEF",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingHorizontal": 4,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          Closed
        </Text>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 4,
              "height": 16,
              "marginRight": 4,
              "marginTop": 8,
            },
            {
              "backgroundColor": "#EBECEF",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingHorizontal": 4,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          HQ
        </Text>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 4,
              "height": 16,
              "marginRight": 4,
              "marginTop": 8,
            },
            {
              "backgroundColor": "#EBECEF",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingHorizontal": 4,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          Problem in Product Y
        </Text>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 4,
              "height": 16,
              "marginRight": 4,
              "marginTop": 8,
            },
            {
              "backgroundColor": "#EBECEF",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingHorizontal": 4,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          HQ
        </Text>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 4,
              "height": 16,
              "marginRight": 4,
              "marginTop": 8,
            },
            {
              "backgroundColor": "#EBECEF",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingHorizontal": 4,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          Closed
        </Text>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 4,
              "height": 16,
              "marginRight": 4,
              "marginTop": 8,
            },
            {
              "backgroundColor": "#EBECEF",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 12,
                "fontWeight": "400",
                "paddingBottom": 0,
                "paddingHorizontal": 4,
                "paddingTop": 0,
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          Problem in Product Y
        </Text>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots Chip ChipText should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "flex-start",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "borderRadius": 4,
          "justifyContent": "center",
          "marginRight": 8,
          "maxWidth": 192,
          "paddingHorizontal": 8,
        },
        {
          "backgroundColor": "#F2F3F5",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityLabel="rocket.cat's avatar"
        accessible={true}
        style={
          [
            {
              "borderRadius": 4,
              "height": 28,
              "width": 28,
            },
            {
              "marginRight": 8,
              "marginVertical": 8,
            },
          ]
        }
        testID="avatar"
      >
        <ViewManagerAdapter_ExpoImage
          borderRadius={4}
          containerViewRef={"[React.ref]"}
          contentFit="cover"
          contentPosition={
            {
              "left": "50%",
              "top": "50%",
            }
          }
          height={28}
          nativeViewRef={"[React.ref]"}
          onError={[Function]}
          onLoad={[Function]}
          onLoadStart={[Function]}
          onProgress={[Function]}
          placeholder={[]}
          priority="high"
          source={
            [
              {
                "headers": {
                  "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                },
                "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=56",
              },
            ]
          }
          style={
            {
              "borderRadius": 4,
              "height": 28,
              "width": 28,
            }
          }
          transition={null}
          width={28}
        />
      </View>
      <View
        style={
          {
            "marginRight": 8,
            "maxWidth": 120,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#2F343D",
              },
            ]
          }
        >
          Rocket.Cat
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots Chip ChipWithShortText should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "flex-start",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "borderRadius": 4,
          "justifyContent": "center",
          "marginRight": 8,
          "maxWidth": 192,
          "paddingHorizontal": 8,
        },
        {
          "backgroundColor": "#F2F3F5",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityLabel="rocket.cat's avatar"
        accessible={true}
        style={
          [
            {
              "borderRadius": 4,
              "height": 28,
              "width": 28,
            },
            {
              "marginRight": 8,
              "marginVertical": 8,
            },
          ]
        }
        testID="avatar"
      >
        <ViewManagerAdapter_ExpoImage
          borderRadius={4}
          containerViewRef={"[React.ref]"}
          contentFit="cover"
          contentPosition={
            {
              "left": "50%",
              "top": "50%",
            }
          }
          height={28}
          nativeViewRef={"[React.ref]"}
          onError={[Function]}
          onLoad={[Function]}
          onLoadStart={[Function]}
          onProgress={[Function]}
          placeholder={[]}
          priority="high"
          source={
            [
              {
                "headers": {
                  "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                },
                "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=56",
              },
            ]
          }
          style={
            {
              "borderRadius": 4,
              "height": 28,
              "width": 28,
            }
          }
          transition={null}
          width={28}
        />
      </View>
      <View
        style={
          {
            "marginRight": 8,
            "maxWidth": 120,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#2F343D",
              },
            ]
          }
        >
          Short
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots Chip ChipWithoutAvatar should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "flex-start",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "borderRadius": 4,
          "justifyContent": "center",
          "marginRight": 8,
          "maxWidth": 192,
          "paddingHorizontal": 8,
        },
        {
          "backgroundColor": "#F2F3F5",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "marginRight": 8,
            "maxWidth": 120,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#2F343D",
              },
            ]
          }
        >
          Without Avatar
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots Chip ChipWithoutAvatarAndIcon should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "flex-start",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "borderRadius": 4,
          "justifyContent": "center",
          "marginRight": 8,
          "maxWidth": 192,
          "paddingHorizontal": 8,
        },
        {
          "backgroundColor": "#F2F3F5",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "marginRight": 8,
            "maxWidth": 120,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#2F343D",
              },
            ]
          }
        >
          Without Avatar and Icon
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots Chip ChipWithoutIcon should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "flex-start",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "borderRadius": 4,
          "justifyContent": "center",
          "marginRight": 8,
          "maxWidth": 192,
          "paddingHorizontal": 8,
        },
        {
          "backgroundColor": "#F2F3F5",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityLabel="rocket.cat's avatar"
        accessible={true}
        style={
          [
            {
              "borderRadius": 4,
              "height": 28,
              "width": 28,
            },
            {
              "marginRight": 8,
              "marginVertical": 8,
            },
          ]
        }
        testID="avatar"
      >
        <ViewManagerAdapter_ExpoImage
          borderRadius={4}
          containerViewRef={"[React.ref]"}
          contentFit="cover"
          contentPosition={
            {
              "left": "50%",
              "top": "50%",
            }
          }
          height={28}
          nativeViewRef={"[React.ref]"}
          onError={[Function]}
          onLoad={[Function]}
          onLoadStart={[Function]}
          onProgress={[Function]}
          placeholder={[]}
          priority="high"
          source={
            [
              {
                "headers": {
                  "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                },
                "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=56",
              },
            ]
          }
          style={
            {
              "borderRadius": 4,
              "height": 28,
              "width": 28,
            }
          }
          transition={null}
          width={28}
        />
      </View>
      <View
        style={
          {
            "marginRight": 8,
            "maxWidth": 120,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#2F343D",
              },
            ]
          }
        >
          Without Icon
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots Collapsible Text Item should match snapshot 1`] = `
<View
  style={
    {
      "padding": 20,
    }
  }
>
  <Text
    accessibilityLabel="Lorem ipsum dolor sit amet"
    onTextLayout={[Function]}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "textAlign": "left",
          "textAlignVertical": "center",
        },
        {
          "color": "#2F343D",
          "height": 0,
        },
      ]
    }
    testID="collapsible-text-Lorem ipsum dolor sit amet"
  >
    Lorem ipsum dolor sit amet
  </Text>
  <Text
    accessibilityLabel="linesToTruncate: 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam vel vestibulum neque. Proin dignissim neque in urna nec."
    onTextLayout={[Function]}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "textAlign": "left",
          "textAlignVertical": "center",
        },
        {
          "color": "#2F343D",
          "height": 0,
        },
      ]
    }
    testID="collapsible-text-linesToTruncate: 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam vel vestibulum neque. Proin dignissim neque in urna nec."
  >
    linesToTruncate: 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam vel vestibulum neque. Proin dignissim neque in urna nec.
  </Text>
  <Text
    accessibilityLabel="linesToTruncate: 2 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam vel vestibulum neque. Proin dignissim neque in urna nec."
    onTextLayout={[Function]}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "textAlign": "left",
          "textAlignVertical": "center",
        },
        {
          "color": "#2F343D",
          "height": 0,
        },
      ]
    }
    testID="collapsible-text-linesToTruncate: 2 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam vel vestibulum neque. Proin dignissim neque in urna nec."
  >
    linesToTruncate: 2 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam vel vestibulum neque. Proin dignissim neque in urna nec.
  </Text>
</View>
`;

exports[`Story Snapshots CollapsibleQuote Item should match snapshot 1`] = `
<View
  style={
    {
      "padding": 10,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={
      {
        "bottom": 4,
        "left": 4,
        "right": 4,
        "top": 4,
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#F7F8FA",
        "borderBottomColor": "#EBECEF",
        "borderLeftColor": "#CBCED1",
        "borderLeftWidth": 2,
        "borderRadius": 4,
        "borderRightColor": "#EBECEF",
        "borderTopColor": "#EBECEF",
        "borderWidth": 1,
        "flexDirection": "row",
        "marginTop": 6,
        "minHeight": 40,
        "opacity": 1,
      }
    }
    testID="collapsibleQuoteTouchable-Engineering (9 today)"
  >
    <View
      style={
        {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "borderRadius": 4,
            "flex": 1,
            "padding": 8,
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Engineering (9 today)
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "height": 20,
            "justifyContent": "center",
            "right": 8,
            "top": 8,
            "width": 20,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Story Snapshots DiscussionsView/Item Content should match snapshot 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="discussions-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="discussions-view-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="discussions-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  +999
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="discussions-view-"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Attachment title"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Attachment title"
            >
              Attachment title
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="discussions-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots DiscussionsView/Item Themes should match snapshot 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="discussions-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#1F2329",
          "opacity": 1,
        }
      }
      testID="discussions-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#F2F3F5",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#9EA2A8",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#E4E7EA",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#000000",
          "opacity": 1,
        }
      }
      testID="discussions-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#F2F3F5",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#9EA2A8",
                  },
                ]
              }
            >
              10:00 AM
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#E4E7EA",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  November 10, 2020
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots HeaderButtons Badge should match snapshot 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    [
      {
        "height": 44,
        "maxHeight": undefined,
        "minHeight": undefined,
        "opacity": undefined,
        "transform": undefined,
      },
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      style={
        [
          {
            "flex": 1,
            "shadowOffset": {
              "height": 0.5,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 0,
          },
          {
            "backgroundColor": "rgb(255, 255, 255)",
            "borderBottomColor": "rgb(216, 216, 216)",
            "shadowColor": "rgba(0, 0, 0, 1)",
          },
          {
            "backgroundColor": undefined,
          },
        ]
      }
    />
  </View>
  <View
    pointerEvents="none"
    style={
      {
        "height": 0,
      }
    }
  />
  <View
    pointerEvents="box-none"
    style={
      [
        {
          "alignItems": "stretch",
          "flex": 1,
          "flexDirection": "row",
        },
        null,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
          {
            "flexBasis": 0,
            "flexGrow": 1,
          },
          {
            "marginStart": 0,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            {
              "marginLeft": -5,
              "marginRight": 0,
            },
            {},
          ]
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={1}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            {
              "bottom": 5,
              "left": 5,
              "right": 5,
              "top": 5,
            }
          }
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          style={
            [
              {
                "opacity": 1,
                "padding": 6,
              },
              {
                "cursor": undefined,
              },
            ]
          }
        >
          <View
            accessible={true}
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  },
                  {
                    "backgroundColor": "#095AD2",
                    "borderRadius": 21,
                    "minWidth": 32,
                  },
                  {
                    "alignItems": "center",
                    "borderRadius": 10,
                    "justifyContent": "center",
                    "padding": 2,
                    "position": "absolute",
                    "right": -4,
                    "top": -4,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 13,
                      "fontWeight": "600",
                      "textAlign": "left",
                    },
                    {
                      "fontSize": 10,
                    },
                    {
                      "color": "#FFFFFF",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={2}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            {
              "bottom": 5,
              "left": 5,
              "right": 5,
              "top": 5,
            }
          }
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          style={
            [
              {
                "opacity": 1,
                "padding": 6,
              },
              {
                "cursor": undefined,
              },
            ]
          }
        >
          <View
            accessible={true}
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  },
                  {
                    "backgroundColor": "#F5455C",
                    "borderRadius": 21,
                    "minWidth": 32,
                  },
                  {
                    "alignItems": "center",
                    "borderRadius": 10,
                    "justifyContent": "center",
                    "padding": 2,
                    "position": "absolute",
                    "right": -4,
                    "top": -4,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 13,
                      "fontWeight": "600",
                      "textAlign": "left",
                    },
                    {
                      "fontSize": 10,
                    },
                    {
                      "color": "#FFFFFF",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={3}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            {
              "bottom": 5,
              "left": 5,
              "right": 5,
              "top": 5,
            }
          }
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          style={
            [
              {
                "opacity": 1,
                "padding": 6,
              },
              {
                "cursor": undefined,
              },
            ]
          }
        >
          <View
            accessible={true}
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  },
                  {
                    "backgroundColor": "#F38C39",
                    "borderRadius": 21,
                    "minWidth": 32,
                  },
                  {
                    "alignItems": "center",
                    "borderRadius": 10,
                    "justifyContent": "center",
                    "padding": 2,
                    "position": "absolute",
                    "right": -4,
                    "top": -4,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 13,
                      "fontWeight": "600",
                      "textAlign": "left",
                    },
                    {
                      "fontSize": 10,
                    },
                    {
                      "color": "#FFFFFF",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={4}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessibilityLabel="Menu"
              accessible={true}
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "borderRadius": 10,
                      "justifyContent": "center",
                      "padding": 2,
                      "position": "absolute",
                      "right": -4,
                      "top": -4,
                    },
                    {
                      "backgroundColor": "red",
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "justifyContent": "center",
          },
          {
            "maxWidth": 230,
          },
          {
            "marginHorizontal": 16,
          },
          undefined,
        ]
      }
    >
      <Text
        accessibilityRole="header"
        aria-level="1"
        collapsable={false}
        numberOfLines={1}
        onLayout={[Function]}
        style={
          [
            {
              "color": "rgb(28, 28, 30)",
            },
            {
              "fontFamily": "System",
              "fontWeight": "600",
            },
            {
              "fontSize": 17,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-end",
          },
          {
            "flexBasis": 0,
            "flexGrow": 1,
          },
          {
            "marginEnd": 0,
          },
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`Story Snapshots HeaderButtons Common should match snapshot 1`] = `
[
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={5}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessibilityLabel="Menu"
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 230,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={6}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessibilityLabel="Close"
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 230,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={7}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 230,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      />
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 326,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={8}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      />
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 326,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={9}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      />
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 326,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={10}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      />
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 326,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={11}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessibilityLabel="More"
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots HeaderButtons Icons should match snapshot 1`] = `
[
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={12}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 198,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={13}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={14}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={15}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 198,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={16}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={17}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots HeaderButtons Themes should match snapshot 1`] = `
[
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          },
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 0,
              },
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "shadowColor": "rgba(0, 0, 0, 1)",
              },
              {
                "backgroundColor": "#E4E7EA",
              },
            ]
          }
        />
      </View>
      <View
        pointerEvents="none"
        style={
          {
            "height": 0,
          }
        }
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "stretch",
              "flex": 1,
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
              {
                "flexBasis": 0,
                "flexGrow": 1,
              },
              {
                "marginStart": 0,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                {
                  "marginLeft": -5,
                  "marginRight": 0,
                },
                {},
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  {
                    "marginLeft": -5,
                    "marginRight": 0,
                  },
                  {},
                ]
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.3}
                borderless={true}
                collapsable={false}
                delayLongPress={600}
                enabled={true}
                handlerTag={18}
                handlerType="NativeViewGestureHandler"
                hitSlop={
                  {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  }
                }
                innerRef={null}
                onActiveStateChange={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  [
                    {
                      "opacity": 1,
                      "padding": 6,
                    },
                    {
                      "cursor": undefined,
                    },
                  ]
                }
              >
                <View
                  accessibilityLabel="Menu"
                  accessible={true}
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "borderRadius": 10,
                          "justifyContent": "center",
                          "padding": 2,
                          "position": "absolute",
                          "right": -4,
                          "top": -4,
                        },
                        {
                          "backgroundColor": "#EC0D2A",
                          "height": 10,
                          "width": 10,
                        },
                      ]
                    }
                  />
                </View>
              </RNGestureHandlerButton>
            </View>
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={19}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              />
            </RNGestureHandlerButton>
          </View>
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "justifyContent": "center",
              },
              {
                "maxWidth": 198,
              },
              {
                "marginHorizontal": 16,
              },
              undefined,
            ]
          }
        >
          <Text
            accessibilityRole="header"
            aria-level="1"
            collapsable={false}
            numberOfLines={1}
            onLayout={[Function]}
            style={
              [
                {
                  "color": "rgb(28, 28, 30)",
                },
                {
                  "fontFamily": "System",
                  "fontWeight": "600",
                },
                {
                  "fontSize": 17,
                },
                undefined,
              ]
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-end",
              },
              {
                "flexBasis": 0,
                "flexGrow": 1,
              },
              {
                "marginEnd": 0,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                {
                  "marginRight": -5,
                },
                {},
              ]
            }
          >
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={20}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 17,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Threads
                </Text>
              </View>
            </RNGestureHandlerButton>
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={21}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {
                        "backgroundColor": "#095AD2",
                        "borderRadius": 21,
                        "minWidth": 32,
                      },
                      {
                        "alignItems": "center",
                        "borderRadius": 10,
                        "justifyContent": "center",
                        "padding": 2,
                        "position": "absolute",
                        "right": -4,
                        "top": -4,
                      },
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "fontSize": 10,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          },
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 0,
              },
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "shadowColor": "rgba(0, 0, 0, 1)",
              },
              {
                "backgroundColor": "#2D3039",
              },
            ]
          }
        />
      </View>
      <View
        pointerEvents="none"
        style={
          {
            "height": 0,
          }
        }
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "stretch",
              "flex": 1,
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
              {
                "flexBasis": 0,
                "flexGrow": 1,
              },
              {
                "marginStart": 0,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                {
                  "marginLeft": -5,
                  "marginRight": 0,
                },
                {},
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  {
                    "marginLeft": -5,
                    "marginRight": 0,
                  },
                  {},
                ]
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.3}
                borderless={true}
                collapsable={false}
                delayLongPress={600}
                enabled={true}
                handlerTag={22}
                handlerType="NativeViewGestureHandler"
                hitSlop={
                  {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  }
                }
                innerRef={null}
                onActiveStateChange={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  [
                    {
                      "opacity": 1,
                      "padding": 6,
                    },
                    {
                      "cursor": undefined,
                    },
                  ]
                }
              >
                <View
                  accessibilityLabel="Menu"
                  accessible={true}
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "borderRadius": 10,
                          "justifyContent": "center",
                          "padding": 2,
                          "position": "absolute",
                          "right": -4,
                          "top": -4,
                        },
                        {
                          "backgroundColor": "#BB3E4E",
                          "height": 10,
                          "width": 10,
                        },
                      ]
                    }
                  />
                </View>
              </RNGestureHandlerButton>
            </View>
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={23}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              />
            </RNGestureHandlerButton>
          </View>
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "justifyContent": "center",
              },
              {
                "maxWidth": 198,
              },
              {
                "marginHorizontal": 16,
              },
              undefined,
            ]
          }
        >
          <Text
            accessibilityRole="header"
            aria-level="1"
            collapsable={false}
            numberOfLines={1}
            onLayout={[Function]}
            style={
              [
                {
                  "color": "rgb(28, 28, 30)",
                },
                {
                  "fontFamily": "System",
                  "fontWeight": "600",
                },
                {
                  "fontSize": 17,
                },
                undefined,
              ]
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-end",
              },
              {
                "flexBasis": 0,
                "flexGrow": 1,
              },
              {
                "marginEnd": 0,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                {
                  "marginRight": -5,
                },
                {},
              ]
            }
          >
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={24}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 17,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#E4E7EA",
                      },
                    ]
                  }
                >
                  Threads
                </Text>
              </View>
            </RNGestureHandlerButton>
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={25}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {
                        "backgroundColor": "#245399",
                        "borderRadius": 21,
                        "minWidth": 32,
                      },
                      {
                        "alignItems": "center",
                        "borderRadius": 10,
                        "justifyContent": "center",
                        "padding": 2,
                        "position": "absolute",
                        "right": -4,
                        "top": -4,
                      },
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "fontSize": 10,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          },
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 0,
              },
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "shadowColor": "rgba(0, 0, 0, 1)",
              },
              {
                "backgroundColor": "#16181a",
              },
            ]
          }
        />
      </View>
      <View
        pointerEvents="none"
        style={
          {
            "height": 0,
          }
        }
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "stretch",
              "flex": 1,
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
              {
                "flexBasis": 0,
                "flexGrow": 1,
              },
              {
                "marginStart": 0,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                {
                  "marginLeft": -5,
                  "marginRight": 0,
                },
                {},
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  {
                    "marginLeft": -5,
                    "marginRight": 0,
                  },
                  {},
                ]
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.3}
                borderless={true}
                collapsable={false}
                delayLongPress={600}
                enabled={true}
                handlerTag={26}
                handlerType="NativeViewGestureHandler"
                hitSlop={
                  {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  }
                }
                innerRef={null}
                onActiveStateChange={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  [
                    {
                      "opacity": 1,
                      "padding": 6,
                    },
                    {
                      "cursor": undefined,
                    },
                  ]
                }
              >
                <View
                  accessibilityLabel="Menu"
                  accessible={true}
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "borderRadius": 10,
                          "justifyContent": "center",
                          "padding": 2,
                          "position": "absolute",
                          "right": -4,
                          "top": -4,
                        },
                        {
                          "backgroundColor": "#BB3E4E",
                          "height": 10,
                          "width": 10,
                        },
                      ]
                    }
                  />
                </View>
              </RNGestureHandlerButton>
            </View>
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={27}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              />
            </RNGestureHandlerButton>
          </View>
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "justifyContent": "center",
              },
              {
                "maxWidth": 198,
              },
              {
                "marginHorizontal": 16,
              },
              undefined,
            ]
          }
        >
          <Text
            accessibilityRole="header"
            aria-level="1"
            collapsable={false}
            numberOfLines={1}
            onLayout={[Function]}
            style={
              [
                {
                  "color": "rgb(28, 28, 30)",
                },
                {
                  "fontFamily": "System",
                  "fontWeight": "600",
                },
                {
                  "fontSize": 17,
                },
                undefined,
              ]
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-end",
              },
              {
                "flexBasis": 0,
                "flexGrow": 1,
              },
              {
                "marginEnd": 0,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                {
                  "marginRight": -5,
                },
                {},
              ]
            }
          >
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={28}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 17,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#E4E7EA",
                      },
                    ]
                  }
                >
                  Threads
                </Text>
              </View>
            </RNGestureHandlerButton>
            <RNGestureHandlerButton
              activeOpacity={0.3}
              borderless={true}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={29}
              handlerType="NativeViewGestureHandler"
              hitSlop={
                {
                  "bottom": 5,
                  "left": 5,
                  "right": 5,
                  "top": 5,
                }
              }
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                    "padding": 6,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
            >
              <View
                accessible={true}
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {
                        "backgroundColor": "#245399",
                        "borderRadius": 21,
                        "minWidth": 32,
                      },
                      {
                        "alignItems": "center",
                        "borderRadius": 10,
                        "justifyContent": "center",
                        "padding": 2,
                        "position": "absolute",
                        "right": -4,
                        "top": -4,
                      },
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "fontSize": 10,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots HeaderButtons Title should match snapshot 1`] = `
[
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={30}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                threads
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 198,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={31}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                threads
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "height": 44,
          "maxHeight": undefined,
          "minHeight": undefined,
          "opacity": undefined,
          "transform": undefined,
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "shadowOffset": {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 0,
            },
            {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "shadowColor": "rgba(0, 0, 0, 1)",
            },
            {
              "backgroundColor": undefined,
            },
          ]
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "height": 0,
        }
      }
    />
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "stretch",
            "flex": 1,
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginStart": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginLeft": -5,
                "marginRight": 0,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={32}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                threads
              </Text>
            </View>
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={33}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                search
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "justifyContent": "center",
            },
            {
              "maxWidth": 198,
            },
            {
              "marginHorizontal": 16,
            },
            undefined,
          ]
        }
      >
        <Text
          accessibilityRole="header"
          aria-level="1"
          collapsable={false}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "color": "rgb(28, 28, 30)",
              },
              {
                "fontFamily": "System",
                "fontWeight": "600",
              },
              {
                "fontSize": 17,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
            {
              "flexBasis": 0,
              "flexGrow": 1,
            },
            {
              "marginEnd": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "marginRight": -5,
              },
              {},
            ]
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={34}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                threads
              </Text>
            </View>
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            handlerTag={35}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              [
                {
                  "opacity": 1,
                  "padding": 6,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
          >
            <View
              accessible={true}
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                search
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots List Alert should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Chats"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Chats
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Chats"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Chats
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "paddingLeft": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "paddingLeft": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List Header should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        {
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        }
      }
    >
      <Text
        accessibilityRole="header"
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#6C727A",
            },
          ]
        }
      >
        Chats
      </Text>
    </View>
    <View
      style={
        {
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        }
      }
    >
      <Text
        accessibilityRole="header"
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#6C727A",
            },
          ]
        }
      >
        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List Icon should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List Pressable should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={36}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#E4E7EA"
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#E4E7EA"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#E4E7EA",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={{}}
      >
        <View
          accessibilityLabel="Press me"
          accessibilityRole="button"
          accessible={true}
          style={
            [
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingHorizontal": 12,
              },
              undefined,
              {
                "height": 92,
              },
            ]
          }
        >
          <View
            style={
              {
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "flexShrink": 1,
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    undefined,
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                Press me
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RNGestureHandlerButton>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={false}
      handlerTag={37}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#E4E7EA"
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#E4E7EA"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#E4E7EA",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={{}}
      >
        <View
          accessibilityLabel="I'm disabled"
          accessibilityRole="button"
          accessible={true}
          style={
            [
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingHorizontal": 12,
              },
              {
                "opacity": 0.3,
              },
              {
                "height": 92,
              },
            ]
          }
        >
          <View
            style={
              {
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "flexShrink": 1,
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    undefined,
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                I'm disabled
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RNGestureHandlerButton>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List SectionAndInfo should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "off",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#F2F3F5",
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingVertical": 16,
      }
    }
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="handled"
    scrollIndicatorInsets={
      {
        "right": 1,
      }
    }
  >
    <View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="Section Item"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  Section Item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`Story Snapshots List Separator should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List TitleAndSubtitle should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Chats"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Chats
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Chats All"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Chats
            </Text>
          </View>
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            All
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
        testID="test-id"
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
            </Text>
          </View>
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List WithBiggerFont should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "off",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#F2F3F5",
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingVertical": 16,
      }
    }
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="handled"
    scrollIndicatorInsets={
      {
        "right": 1,
      }
    }
  >
    <View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={38}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 69,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={39}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 69,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={40}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 69,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={41}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 69,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`Story Snapshots List WithBlackTheme should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "off",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#080808",
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingVertical": 16,
      }
    }
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="handled"
    scrollIndicatorInsets={
      {
        "right": 1,
      }
    }
  >
    <View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#1f2329",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={42}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#16181a"
          style={
            [
              {
                "backgroundColor": "#000000",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#16181a"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#16181a",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#1f2329",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={43}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#16181a"
          style={
            [
              {
                "backgroundColor": "#000000",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#16181a"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#16181a",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#1f2329",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#1f2329",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={44}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#16181a"
          style={
            [
              {
                "backgroundColor": "#000000",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#16181a"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#16181a",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#1f2329",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={45}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#16181a"
          style={
            [
              {
                "backgroundColor": "#000000",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#16181a"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#16181a",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#1f2329",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`Story Snapshots List WithCustomColors should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Chats"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "red",
                  },
                ]
              }
            >
              Chats
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={46}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#E4E7EA"
      style={
        [
          {
            "backgroundColor": "red",
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="green"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "green",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={{}}
      >
        <View
          accessibilityLabel="Press me!"
          accessibilityRole="button"
          accessible={true}
          style={
            [
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingHorizontal": 12,
              },
              undefined,
              {
                "height": 92,
              },
            ]
          }
        >
          <View
            style={
              {
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "flexShrink": 1,
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    undefined,
                    {
                      "color": "white",
                    },
                  ]
                }
              >
                Press me!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RNGestureHandlerButton>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List WithDarkTheme should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "off",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#1A1E23",
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingVertical": 16,
      }
    }
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="handled"
    scrollIndicatorInsets={
      {
        "right": 1,
      }
    }
  >
    <View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#333842",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={47}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#2D3039"
          style={
            [
              {
                "backgroundColor": "#1F2329",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#2D3039"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#2D3039",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#333842",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={48}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#2D3039"
          style={
            [
              {
                "backgroundColor": "#1F2329",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#2D3039"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#2D3039",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#333842",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#333842",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={49}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#2D3039"
          style={
            [
              {
                "backgroundColor": "#1F2329",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#2D3039"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#2D3039",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#333842",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={50}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#2D3039"
          style={
            [
              {
                "backgroundColor": "#1F2329",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#2D3039"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#2D3039",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 92,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#E4E7EA",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#333842",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`Story Snapshots List WithFlatList should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "off",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#F2F3F5",
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    ItemSeparatorComponent={
      {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      }
    }
    ListFooterComponent={
      {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      }
    }
    ListHeaderComponent={
      {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      }
    }
    contentContainerStyle={
      {
        "paddingVertical": 16,
      }
    }
    data={
      [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        collapsable={false}
        onLayout={[Function]}
      >
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="0"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  0
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="1"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="2"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="3"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  3
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="4"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  4
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="5"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  5
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="6"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  6
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="7"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  7
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="8"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  8
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessibilityLabel="9"
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
                undefined,
                {
                  "height": 92,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#2F343D",
                      },
                    ]
                  }
                >
                  9
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
      <View
        style={
          {
            "height": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
      >
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`Story Snapshots List WithIcon should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingVertical": 16,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps="handled"
  scrollIndicatorInsets={
    {
      "right": 1,
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Icon Left"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "paddingRight": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Icon Left
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Icon Right"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Icon Right
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "paddingLeft": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "paddingRight": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
            </Text>
          </View>
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
          </Text>
        </View>
        <View
          style={
            {
              "paddingLeft": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        accessibilityLabel="Show Action Indicator"
        accessibilityRole="button"
        accessible={true}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 12,
            },
            undefined,
            {
              "height": 92,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Show Action Indicator
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "paddingLeft": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                {},
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots List WithSmallFont should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "off",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#F2F3F5",
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingVertical": 16,
      }
    }
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="handled"
    scrollIndicatorInsets={
      {
        "right": 1,
      }
    }
  >
    <View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={51}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 36.800000000000004,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={52}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 36.800000000000004,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "marginBottom": 16,
          }
        }
      >
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            accessibilityRole="header"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={true}
          handlerTag={53}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  undefined,
                  {
                    "height": 36.800000000000004,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          enabled={false}
          handlerTag={54}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Chats All"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                  },
                  {
                    "opacity": 0.3,
                  },
                  {
                    "height": 36.800000000000004,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flexShrink": 1,
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    Chats
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
              <View
                style={
                  {
                    "paddingLeft": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "height": 0.5,
              },
              undefined,
              {
                "backgroundColor": "#CBCED1",
              },
            ]
          }
        />
        <View
          style={
            {
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                },
              ]
            }
          >
            Chats
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`Story Snapshots Login Services Separators should match snapshot 1`] = `
[
  <View
    accessibilityLabel="More options"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#E4E7EA",
        "borderRadius": 4,
        "justifyContent": "center",
        "marginBottom": 0,
        "opacity": 1,
        "paddingHorizontal": 16,
        "paddingVertical": 14,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#6C727A",
            "fontSize": 16,
          },
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontWeight": "500",
            "textAlign": "center",
          },
          undefined,
        ]
      }
    >
      More options
    </Text>
  </View>,
  <View
    accessible={true}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "marginVertical": 24,
      }
    }
  >
    <View
      style={
        [
          {
            "flex": 1,
            "height": 1,
          },
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <Text
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 16,
            "fontWeight": "500",
            "marginHorizontal": 12,
            "textAlign": "left",
          },
          {
            "color": "#6C727A",
          },
        ]
      }
    >
      OR
    </Text>
    <View
      style={
        [
          {
            "flex": 1,
            "height": 1,
          },
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>,
  <View
    accessibilityLabel="Less options"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#E4E7EA",
        "borderRadius": 4,
        "justifyContent": "center",
        "marginBottom": 0,
        "opacity": 1,
        "paddingHorizontal": 16,
        "paddingVertical": 14,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#6C727A",
            "fontSize": 16,
          },
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontWeight": "500",
            "textAlign": "center",
          },
          undefined,
        ]
      }
    >
      Less options
    </Text>
  </View>,
  <View
    accessible={true}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "marginVertical": 24,
      }
    }
  >
    <View
      style={
        [
          {
            "flex": 1,
            "height": 1,
          },
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <Text
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 16,
            "fontWeight": "500",
            "marginHorizontal": 12,
            "textAlign": "left",
          },
          {
            "color": "#6C727A",
          },
        ]
      }
    >
      OR
    </Text>
    <View
      style={
        [
          {
            "flex": 1,
            "height": 1,
          },
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>,
]
`;

exports[`Story Snapshots Login Services ServiceList should match snapshot 1`] = `
[
  <RNGestureHandlerButton
    activeOpacity={0.5}
    collapsable={false}
    delayLongPress={600}
    handlerTag={55}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": "#F7F8FA",
          "borderRadius": 4,
          "margin": undefined,
          "marginBottom": 10,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#FFFFFF"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": 4,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      accessible={true}
      style={{}}
    >
      <View
        accessible={false}
        style={
          {
            "alignItems": "center",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingHorizontal": 15,
            "paddingVertical": 14,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={false}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Continue with
           
          <Text
            style={
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontWeight": "600",
                "textAlign": "left",
              }
            }
          >
            github
          </Text>
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>,
  <RNGestureHandlerButton
    activeOpacity={0.5}
    collapsable={false}
    delayLongPress={600}
    handlerTag={56}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": "#F7F8FA",
          "borderRadius": 4,
          "margin": undefined,
          "marginBottom": 10,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#FFFFFF"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": 4,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      accessible={true}
      style={{}}
    >
      <View
        accessible={false}
        style={
          {
            "alignItems": "center",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingHorizontal": 15,
            "paddingVertical": 14,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={false}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Continue with
           
          <Text
            style={
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontWeight": "600",
                "textAlign": "left",
              }
            }
          >
            gitlab
          </Text>
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>,
  <RNGestureHandlerButton
    activeOpacity={0.5}
    collapsable={false}
    delayLongPress={600}
    handlerTag={57}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": "#F7F8FA",
          "borderRadius": 4,
          "margin": undefined,
          "marginBottom": 10,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#FFFFFF"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": 4,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      accessible={true}
      style={{}}
    >
      <View
        accessible={false}
        style={
          {
            "alignItems": "center",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingHorizontal": 15,
            "paddingVertical": 14,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={false}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Continue with
           
          <Text
            style={
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontWeight": "600",
                "textAlign": "left",
              }
            }
          >
            google
          </Text>
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>,
  <RNGestureHandlerButton
    activeOpacity={0.5}
    collapsable={false}
    delayLongPress={600}
    handlerTag={58}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": "#F7F8FA",
          "borderRadius": 4,
          "margin": undefined,
          "marginBottom": 10,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#FFFFFF"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": 4,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      accessible={true}
      style={{}}
    >
      <View
        accessible={false}
        style={
          {
            "alignItems": "center",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingHorizontal": 15,
            "paddingVertical": 14,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={false}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Continue with
           
          <Text
            style={
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontWeight": "600",
                "textAlign": "left",
              }
            }
          >
            apple
          </Text>
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>,
]
`;

exports[`Story Snapshots Markdown BlockQuote should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <View
    style={
      {
        "alignItems": "flex-start",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        [
          {
            "height": "100%",
            "marginRight": 5,
            "width": 2,
          },
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text
          style={
            {
              "flexShrink": 1,
            }
          }
        >
          <Text
            accessibilityLabel="This is block quote"
            style={
              {
                "color": "#2F343D",
              }
            }
          >
            This is block quote
          </Text>
        </Text>
      </Text>
    </View>
  </View>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="this is a normal line"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        this is a normal line
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`Story Snapshots Markdown Code should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="This is "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        This is 
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "fontFamily": "Courier New",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "paddingLeft": 2,
              "paddingTop": 2,
              "textAlign": "left",
            },
            {
              "backgroundColor": "#E4E7EA",
              "borderColor": "#CBCED1",
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text>
          inline code
        </Text>
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="Inline "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        Inline 
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "fontFamily": "Courier New",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "paddingLeft": 2,
              "paddingTop": 2,
              "textAlign": "left",
            },
            {
              "backgroundColor": "#E4E7EA",
              "borderColor": "#CBCED1",
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text>
          code
        </Text>
      </Text>
      <Text
        accessibilityLabel=" has "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         has 
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "fontFamily": "Courier New",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "paddingLeft": 2,
              "paddingTop": 2,
              "textAlign": "left",
            },
            {
              "backgroundColor": "#E4E7EA",
              "borderColor": "#CBCED1",
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text>
          back-ticks around
        </Text>
      </Text>
      <Text
        accessibilityLabel=" it."
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         it.
      </Text>
    </Text>
  </Text>
  <View
    style={
      [
        {
          "borderRadius": 4,
          "borderWidth": 1,
          "padding": 4,
        },
        {
          "backgroundColor": "#E4E7EA",
          "borderColor": "#CBCED1",
        },
      ]
    }
  >
    <Text
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Courier New",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 22,
            "textAlign": "left",
          },
          {
            "color": "#2F343D",
          },
        ]
      }
    >
      Code block
    </Text>
  </View>
</View>
`;

exports[`Story Snapshots Markdown Emoji should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="Unicode: "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        Unicode: 
      </Text>
      <Text
        style={
          [
            {
              "color": "#2F343D",
            },
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
          ]
        }
      >
        😃
      </Text>
      <Text
        style={
          [
            {
              "color": "#2F343D",
            },
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
          ]
        }
      >
        😇
      </Text>
      <Text
        style={
          [
            {
              "color": "#2F343D",
            },
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
          ]
        }
      >
        👍
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="Shortnames: "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        Shortnames: 
      </Text>
      <Text
        style={
          [
            {
              "color": "#2F343D",
            },
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {},
          ]
        }
      >
         
        😂
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          [
            {
              "color": "#2F343D",
            },
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {},
          ]
        }
      >
         
        👍
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="Custom emojis: "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        Custom emojis: 
      </Text>
      <ViewManagerAdapter_ExpoImage
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={30}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={[]}
        source={
          [
            {
              "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
            },
          ]
        }
        style={
          {
            "height": 30,
            "width": 30,
          }
        }
        transition={null}
        width={30}
      />
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <ViewManagerAdapter_ExpoImage
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={30}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={[]}
        source={
          [
            {
              "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
            },
          ]
        }
        style={
          {
            "height": 30,
            "width": 30,
          }
        }
        transition={null}
        width={30}
      />
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <ViewManagerAdapter_ExpoImage
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={30}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={[]}
        source={
          [
            {
              "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
            },
          ]
        }
        style={
          {
            "height": 30,
            "width": 30,
          }
        }
        transition={null}
        width={30}
      />
    </Text>
  </Text>
  <View
    style={
      {
        "flexDirection": "row",
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#2F343D",
          },
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 30,
            "fontWeight": "400",
            "lineHeight": 43,
            "textAlign": "left",
          },
        ]
      }
    >
      😃
    </Text>
    <Text
      style={
        [
          {
            "color": "#2F343D",
          },
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 30,
            "fontWeight": "400",
            "lineHeight": 43,
            "textAlign": "left",
          },
          {},
        ]
      }
    >
      👍
    </Text>
    <ViewManagerAdapter_ExpoImage
      containerViewRef={"[React.ref]"}
      contentFit="contain"
      contentPosition={
        {
          "left": "50%",
          "top": "50%",
        }
      }
      height={60}
      nativeViewRef={"[React.ref]"}
      onError={[Function]}
      onLoad={[Function]}
      onLoadStart={[Function]}
      onProgress={[Function]}
      placeholder={[]}
      source={
        [
          {
            "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
          },
        ]
      }
      style={
        {
          "height": 60,
          "width": 60,
        }
      }
      transition={null}
      width={60}
    />
  </View>
</View>
`;

exports[`Story Snapshots Markdown Hashtag should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        onPress={[Function]}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "600",
              "textAlign": "left",
            },
            {
              "color": "#095AD2",
            },
          ]
        }
      >
        test-channel
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        #unknown
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`Story Snapshots Markdown Headers should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 24,
          "fontWeight": "700",
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    Header 1
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 22,
          "fontWeight": "700",
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    Header 2
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 20,
          "fontWeight": "600",
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    Header 3
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 18,
          "fontWeight": "600",
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    Header 4
  </Text>
</View>
`;

exports[`Story Snapshots Markdown Image should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "height": 300,
              "width": 300,
            },
            {
              "borderColor": "#CBCED1",
            },
          ]
        }
      >
        <ViewManagerAdapter_ExpoImage
          bottom={0}
          containerViewRef={"[React.ref]"}
          contentFit="contain"
          contentPosition={
            {
              "left": "50%",
              "top": "50%",
            }
          }
          left={0}
          nativeViewRef={"[React.ref]"}
          onError={[Function]}
          onLoad={[Function]}
          onLoadEnd={[Function]}
          onLoadStart={[Function]}
          onProgress={[Function]}
          placeholder={[]}
          position="absolute"
          right={0}
          source={
            [
              {
                "uri": "https://play.google.com/intl/en_us/badges/images/badge_new.png",
              },
            ]
          }
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          top={0}
          transition={null}
        />
      </View>
    </Text>
  </Text>
</View>
`;

exports[`Story Snapshots Markdown Links should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        onLongPress={[Function]}
        onPress={[Function]}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#095AD2",
            },
          ]
        }
      >
        Markdown link
      </Text>
      <Text
        accessibilityLabel=": "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        : 
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "fontFamily": "Courier New",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "paddingLeft": 2,
              "paddingTop": 2,
              "textAlign": "left",
            },
            {
              "backgroundColor": "#E4E7EA",
              "borderColor": "#CBCED1",
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text>
          [description](url)
        </Text>
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        onLongPress={[Function]}
        onPress={[Function]}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#095AD2",
            },
          ]
        }
      >
        Formatted Link
      </Text>
      <Text
        accessibilityLabel=": "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        : 
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "fontFamily": "Courier New",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "paddingLeft": 2,
              "paddingTop": 2,
              "textAlign": "left",
            },
            {
              "backgroundColor": "#E4E7EA",
              "borderColor": "#CBCED1",
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text>
          &lt;url|description&gt;
        </Text>
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        onLongPress={[Function]}
        onPress={[Function]}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#095AD2",
            },
          ]
        }
      >
        Markdown link
      </Text>
      <Text
        accessibilityLabel=" and the text with default style"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         and the text with default style
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        onLongPress={[Function]}
        onPress={[Function]}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#095AD2",
            },
          ]
        }
      >
        Markdown link
      </Text>
      <Text
        accessibilityLabel=" and the text with a color specific as fontSecondaryInfo"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         and the text with a color specific as fontSecondaryInfo
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`Story Snapshots Markdown Lists should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <View>
    <View
      style={
        {
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        • 
      </Text>
      <Text
        style={
          [
            {
              "flexShrink": 1,
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text
          style={
            {
              "flexShrink": 1,
            }
          }
        >
          <Text
            accessibilityLabel="Open Source"
            style={
              {
                "color": "#2F343D",
              }
            }
          >
            Open Source
          </Text>
        </Text>
      </Text>
    </View>
    <View
      style={
        {
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        • 
      </Text>
      <Text
        style={
          [
            {
              "flexShrink": 1,
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text
          style={
            {
              "flexShrink": 1,
            }
          }
        >
          <Text
            onLongPress={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
          >
            Rocket.Chat
          </Text>
        </Text>
      </Text>
    </View>
  </View>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="  - nodejs"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
          - nodejs
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="  - ReactNative"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
          - ReactNative
      </Text>
    </Text>
  </Text>
  <View>
    <View
      style={
        {
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "fontVariant": [
                "tabular-nums",
              ],
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        1
        . 
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "flexShrink": 1,
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text
          style={
            {
              "flexShrink": 1,
            }
          }
        >
          <Text
            accessibilityLabel="Open Source"
            style={
              {
                "color": "#2F343D",
              }
            }
          >
            Open Source
          </Text>
        </Text>
      </Text>
    </View>
    <View
      style={
        {
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "fontVariant": [
                "tabular-nums",
              ],
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        2
        . 
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "textAlign": "left",
            },
            {
              "flexShrink": 1,
            },
            {
              "color": "#2F343D",
            },
          ]
        }
      >
        <Text
          style={
            {
              "flexShrink": 1,
            }
          }
        >
          <Text
            onLongPress={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
          >
            Rocket.Chat
          </Text>
        </Text>
      </Text>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots Markdown Mentions should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <View>
    <Text
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 22,
            "textAlign": "left",
          },
          {
            "color": "#2F343D",
          },
        ]
      }
    >
      <Text
        style={
          {
            "flexShrink": 1,
          }
        }
      >
        <Text
          onPress={[Function]}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#9B1325",
              },
            ]
          }
        >
          rocket.cat
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          onPress={[Function]}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#8E6300",
              },
            ]
          }
        >
          name1
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#974809",
              },
            ]
          }
        >
          all
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#974809",
              },
            ]
          }
        >
          here
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#2F343D",
              },
            ]
          }
        >
          @unknown
        </Text>
      </Text>
    </Text>
    <Text
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 22,
            "textAlign": "left",
          },
          {
            "color": "#2F343D",
          },
        ]
      }
    >
      <Text
        style={
          {
            "flexShrink": 1,
          }
        }
      >
        <Text
          onPress={[Function]}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#9B1325",
              },
            ]
          }
        >
          Rocket Cat
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          onPress={[Function]}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#8E6300",
              },
            ]
          }
        >
          Name
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#974809",
              },
            ]
          }
        >
          all
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#974809",
              },
            ]
          }
        >
          here
        </Text>
        <Text
          accessibilityLabel=" "
          style={
            {
              "color": "#2F343D",
            }
          }
        >
           
        </Text>
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#2F343D",
              },
            ]
          }
        >
          @unknown
        </Text>
      </Text>
    </Text>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Markdown Preview should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
          "lineHeight": undefined,
        },
      ]
    }
    testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  >
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
  </Text>
  <Text
    accessibilityLabel="a b c d e"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
          "lineHeight": undefined,
        },
      ]
    }
    testID="markdown-preview-a b c d e"
  >
    a b c d e
  </Text>
  <Text
    accessibilityLabel="a b c"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
          "lineHeight": undefined,
        },
      ]
    }
    testID="markdown-preview-a b c"
  >
    a b c
  </Text>
  <Text
    accessibilityLabel="@rocket.cat @name1 @all @here @unknown #general #unknown"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
          "lineHeight": undefined,
        },
      ]
    }
    testID="markdown-preview-@rocket.cat @name1 @all @here @unknown #general #unknown"
  >
    @rocket.cat @name1 @all @here @unknown #general #unknown
  </Text>
  <Text
    accessibilityLabel="Testing: 😃 👍 :marioparty:"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
          "lineHeight": undefined,
        },
      ]
    }
    testID="markdown-preview-Testing: 😃 👍 :marioparty:"
  >
    Testing: 😃 👍 :marioparty:
  </Text>
  <Text
    accessibilityLabel="Fallback from new md to old"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
          "lineHeight": undefined,
        },
      ]
    }
    testID="markdown-preview-Fallback from new md to old"
  >
    Fallback from new md to old
  </Text>
</View>
`;

exports[`Story Snapshots Markdown Text should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "marginHorizontal": 15,
      "marginVertical": 50,
    }
  }
>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="This is "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        This is 
      </Text>
      <Text
        onLongPress={[Function]}
        onPress={[Function]}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#095AD2",
            },
          ]
        }
      >
        Rocket.Chat
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="a"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        a
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="b"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        b
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="c"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        c
      </Text>
    </Text>
  </Text>
  <View
    style={
      {
        "height": 8,
      }
    }
  />
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="d"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        d
      </Text>
    </Text>
  </Text>
  <View
    style={
      {
        "height": 8,
      }
    }
  />
  <View
    style={
      {
        "height": 8,
      }
    }
  />
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="e"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        e
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="a       b                                                                             c"
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        a       b                                                                             c
      </Text>
    </Text>
  </Text>
  <Text
    style={
      [
        {
          "backgroundColor": "transparent",
          "fontFamily": "Inter",
          "fontSize": 16,
          "fontWeight": "400",
          "lineHeight": 22,
          "textAlign": "left",
        },
        {
          "color": "#2F343D",
        },
      ]
    }
  >
    <Text
      style={
        {
          "flexShrink": 1,
        }
      }
    >
      <Text
        accessibilityLabel="Emphasis: "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
        Emphasis: 
      </Text>
      <Text
        style={
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontWeight": "700",
            "textAlign": "left",
          }
        }
      >
        <Text
          accessibilityLabel="bold"
          style={
            {
              "color": "#2F343D",
            }
          }
        >
          bold
        </Text>
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          {
            "fontStyle": "italic",
          }
        }
      >
        <Text
          accessibilityLabel="italic"
          style={
            {
              "color": "#2F343D",
            }
          }
        >
          italic
        </Text>
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          {
            "textDecorationLine": "line-through",
          }
        }
      >
        <Text
          accessibilityLabel="strikethrough"
          style={
            {
              "color": "#2F343D",
            }
          }
        >
          strikethrough
        </Text>
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontWeight": "700",
            "textAlign": "left",
          }
        }
      >
        <Text
          style={
            {
              "fontStyle": "italic",
            }
          }
        >
          <Text
            accessibilityLabel="bold with italic"
            style={
              {
                "color": "#2F343D",
              }
            }
          >
            bold with italic
          </Text>
        </Text>
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontWeight": "700",
            "textAlign": "left",
          }
        }
      >
        <Text
          style={
            {
              "textDecorationLine": "line-through",
            }
          }
        >
          <Text
            accessibilityLabel="bold with strike"
            style={
              {
                "color": "#2F343D",
              }
            }
          >
            bold with strike
          </Text>
        </Text>
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontWeight": "700",
            "textAlign": "left",
          }
        }
      >
        <Text
          style={
            {
              "fontStyle": "italic",
            }
          }
        >
          <Text
            style={
              {
                "textDecorationLine": "line-through",
              }
            }
          >
            <Text
              accessibilityLabel="bold with italic and strike"
              style={
                {
                  "color": "#2F343D",
                }
              }
            >
              bold with italic and strike
            </Text>
          </Text>
        </Text>
      </Text>
      <Text
        accessibilityLabel=" "
        style={
          {
            "color": "#2F343D",
          }
        }
      >
         
      </Text>
      <Text
        style={
          {
            "fontStyle": "italic",
          }
        }
      >
        <Text
          style={
            {
              "textDecorationLine": "line-through",
            }
          }
        >
          <Text
            accessibilityLabel="italic with strike"
            style={
              {
                "color": "#2F343D",
              }
            }
          >
            italic with strike
          </Text>
        </Text>
      </Text>
    </Text>
  </Text>
</View>
`;

exports[`Story Snapshots Message Archived should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This message is inside an archived room.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This message is inside an archived room"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This message is inside an archived room
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Basic should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message BlockQuote should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM > Testing block quote.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View
                style={
                  {
                    "alignItems": "flex-start",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "height": "100%",
                        "marginRight": 5,
                        "width": 2,
                      },
                      {
                        "backgroundColor": "#CBCED1",
                      },
                    ]
                  }
                />
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Testing block quote"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Testing block quote
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM > Testing block quote
Testing block quote.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View
                style={
                  {
                    "alignItems": "flex-start",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "height": "100%",
                        "marginRight": 5,
                        "width": 2,
                      },
                      {
                        "backgroundColor": "#CBCED1",
                      },
                    ]
                  }
                />
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Testing block quote"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Testing block quote
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Testing block quote"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Testing block quote
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Broadcast should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Broadcasted message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Broadcasted message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Broadcasted message
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#1D74F5",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 8,
                  }
                }
                testID="message-broadcast-reply"
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 12,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#FFFFFF",
                      },
                    ]
                  }
                >
                  Reply
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message ColoredAttachments should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "red",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-undefined-undefined"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  />
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 1
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 1"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 1
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 2
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 2"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 2
                          </Text>
                        </Text>
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "green",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 4,
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-undefined-undefined"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  />
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 1
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 1"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 1
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 2
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 2"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 2
                          </Text>
                        </Text>
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "blue",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 4,
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-undefined-undefined"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  />
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 1
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 1"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 1
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 2
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 2"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 2
                          </Text>
                        </Text>
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message CustomFields should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "#CBCED1",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-rocket.cat-Custom fields"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "flexShrink": 1,
                            "fontFamily": "Inter",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      rocket.cat
                    </Text>
                  </View>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Custom fields"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Custom fields
                      </Text>
                    </Text>
                  </Text>
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 1
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 1"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 1
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 2
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 2"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 2
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 3
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 3"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 3
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 4
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 4"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 4
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 5
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 5"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 5
                          </Text>
                        </Text>
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message CustomStyle should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            [
              {
                "backgroundColor": "#ddd",
              },
            ],
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message DateAndUnreadSeparators should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="rocket.cat 10:00:00 AM Fourth message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="rocket.cat's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-rocket.cat"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  rocket.cat
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Fourth message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Fourth message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 4,
          "marginHorizontal": 14,
          "marginTop": 16,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontWeight": "500",
              "textAlign": "left",
            },
            {
              "color": "#D40C26",
            },
          ]
        }
      >
        unread
      </Text>
      <View
        style={
          [
            {
              "flex": 1,
              "height": 1,
            },
            {
              "backgroundColor": "#EC0D2A",
            },
            {
              "marginHorizontal": 14,
            },
          ]
        }
      />
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontWeight": "500",
              "textAlign": "left",
            },
            {
              "color": "#D40C26",
            },
          ]
        }
      >
        November 10, 2017
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Third message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Third message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Third message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 4,
          "marginHorizontal": 14,
          "marginTop": 16,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontWeight": "500",
              "textAlign": "left",
            },
            {
              "color": "#D40C26",
            },
            {
              "marginRight": 14,
            },
          ]
        }
      >
        unread
      </Text>
      <View
        style={
          [
            {
              "flex": 1,
              "height": 1,
            },
            {
              "backgroundColor": "#EC0D2A",
            },
          ]
        }
      />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="rocket.cat 10:00:00 AM Second message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Second message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Second message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="rocket.cat 10:00:00 AM Second message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="rocket.cat's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-rocket.cat"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  rocket.cat
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Second message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Second message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 4,
          "marginHorizontal": 14,
          "marginTop": 16,
        }
      }
    >
      <View
        style={
          [
            {
              "flex": 1,
              "height": 1,
            },
            {
              "backgroundColor": "#CBCED1",
            },
          ]
        }
      />
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontWeight": "500",
              "textAlign": "left",
            },
            {
              "color": "#6C727A",
            },
            {
              "marginHorizontal": 14,
            },
          ]
        }
      >
        November 10, 2017
      </Text>
      <View
        style={
          [
            {
              "flex": 1,
              "height": 1,
            },
            {
              "backgroundColor": "#CBCED1",
            },
          ]
        }
      />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM First message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="First message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    First message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Discussion should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is a discussion.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "fontWeight": "400",
                    "marginBottom": 6,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              Started a discussion:
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              This is a discussion
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#1D74F5",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 8,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 12,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#FFFFFF",
                      },
                    ]
                  }
                >
                  No messages yet
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 13,
                      "fontWeight": "400",
                      "marginLeft": 8,
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is a discussion.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "fontWeight": "400",
                    "marginBottom": 6,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              Started a discussion:
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              This is a discussion
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#1D74F5",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 8,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 12,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#FFFFFF",
                      },
                    ]
                  }
                >
                  1 message
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 13,
                      "fontWeight": "400",
                      "marginLeft": 8,
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                November 10, 2017
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "fontWeight": "400",
                    "marginBottom": 6,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              Started a discussion:
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#1D74F5",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 8,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 12,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#FFFFFF",
                      },
                    ]
                  }
                >
                  10 messages
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 13,
                      "fontWeight": "400",
                      "marginLeft": 8,
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                November 10, 2017
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is a discussion.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "fontWeight": "400",
                    "marginBottom": 6,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              Started a discussion:
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              This is a discussion
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#1D74F5",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 8,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 12,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#FFFFFF",
                      },
                    ]
                  }
                >
                  +999 messages
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 13,
                      "fontWeight": "400",
                      "marginLeft": 8,
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                November 10, 2017
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Edited should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message header.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    {
                      "paddingLeft": 5,
                    }
                  }
                  testID="undefined-edited"
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message header"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message header
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message without header.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message without header"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message without header
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                {
                  "paddingLeft": 5,
                }
              }
              testID="Message without header-edited"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Editing should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message being edited.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message being edited"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message being edited
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Emojis should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM 👊🤙👏.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "#2F343D",
                      },
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 30,
                        "fontWeight": "400",
                        "lineHeight": 43,
                        "textAlign": "left",
                      },
                    ]
                  }
                >
                  👊
                </Text>
                <Text
                  style={
                    [
                      {
                        "color": "#2F343D",
                      },
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 30,
                        "fontWeight": "400",
                        "lineHeight": 43,
                        "textAlign": "left",
                      },
                    ]
                  }
                >
                  🤙👏
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM 👏.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "#2F343D",
                      },
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 30,
                        "fontWeight": "400",
                        "lineHeight": 43,
                        "textAlign": "left",
                      },
                    ]
                  }
                >
                  👏
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM :react_rocket: :nyan_rocket: :marioparty:.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={60}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 60,
                      "width": 60,
                    }
                  }
                  transition={null}
                  width={60}
                />
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={60}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 60,
                      "width": 60,
                    }
                  }
                  transition={null}
                  width={60}
                />
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={60}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 60,
                      "width": 60,
                    }
                  }
                  transition={null}
                  width={60}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM :react_rocket:.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={60}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 60,
                      "width": 60,
                    }
                  }
                  transition={null}
                  width={60}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM 🤙:react_rocket:.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "#2F343D",
                      },
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 30,
                        "fontWeight": "400",
                        "lineHeight": 43,
                        "textAlign": "left",
                      },
                    ]
                  }
                >
                  🤙
                </Text>
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={60}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 60,
                      "width": 60,
                    }
                  }
                  transition={null}
                  width={60}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM 🤙:react_rocket:🤙🤙.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#2F343D",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                      ]
                    }
                  >
                    🤙
                  </Text>
                  <Text
                    accessibilityLabel=":react_rocket:"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    :react_rocket:
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "color": "#2F343D",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                      ]
                    }
                  >
                    🤙
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "color": "#2F343D",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                      ]
                    }
                  >
                    🤙
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Encrypted should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message Encrypted without Header.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message Encrypted without Header"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message Encrypted without Header
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingLeft": 5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message Encrypted with Reactions.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message Encrypted with Reactions"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message Encrypted with Reactions
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:joy:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    😂
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:marioparty:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <ViewManagerAdapter_ExpoImage
                    containerViewRef={"[React.ref]"}
                    contentFit="contain"
                    contentPosition={
                      {
                        "left": "50%",
                        "top": "50%",
                      }
                    }
                    height={19}
                    marginLeft={7}
                    nativeViewRef={"[React.ref]"}
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    placeholder={[]}
                    source={
                      [
                        {
                          "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                        },
                      ]
                    }
                    style={
                      {
                        "height": 19,
                        "marginLeft": 7,
                        "width": 19,
                      }
                    }
                    transition={null}
                    width={19}
                  />
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:thinking:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    🤔
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-add-reaction"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#CBCED1",
                        "height": 56,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-Thread with emoji :) :joy:"
        >
          <Text
            accessibilityLabel="Thread with emoji :) 😂"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-Thread with emoji :) 😂"
          >
            Thread with emoji :) 😂
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message Thread reply encrypted.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="Thread reply encrypted"
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-Thread reply encrypted"
              >
                Thread reply encrypted
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Temp message encrypted.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                {
                  "opacity": 0.3,
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Temp message encrypted"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Temp message encrypted
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message Edited encrypted.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message Edited encrypted"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message Edited encrypted
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This message has error and is encrypted.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This message has error and is encrypted"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This message has error and is encrypted
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Read Receipt encrypted with Header.  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Read Receipt encrypted with Header"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Read Receipt encrypted with Header
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Read Receipt encrypted without Header.  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Read Receipt encrypted without Header"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Read Receipt encrypted without Header
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingLeft": 5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Error should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View>
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This message has error.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This message has error"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This message has error
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This message has error too.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This message has error too"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This message has error too
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              hitSlop={
                {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingLeft": 5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message FullName should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Diego Mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Diego Mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Diego Mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message GroupedMessages should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM ....  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="..."
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    ...
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 10:00:00 AM Different user.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'s avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Different user"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Different user
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the third message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the third message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This is the third message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the second message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the second message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This is the second message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the first message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the first message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This is the first message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Ignored should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                Message ignored. Tap to display it.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Lists should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM * Dogs
  * cats
  - cats.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View>
                <View
                  style={
                    {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    • 
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "flexShrink": 1,
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Dogs"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Dogs
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="  * cats"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                      * cats
                  </Text>
                </Text>
              </Text>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="  - cats"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                      - cats
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM 1. Dogs 
 2. Cats.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View>
                <View
                  style={
                    {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "fontVariant": [
                            "tabular-nums",
                          ],
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    1
                    . 
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "flexShrink": 1,
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Dogs "
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Dogs 
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel=" 2. Cats"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     2. Cats
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM 1. Dogs.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <View>
                <View
                  style={
                    {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "fontVariant": [
                            "tabular-nums",
                          ],
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    1
                    . 
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "flexShrink": 1,
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Dogs"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Dogs
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM 2. Cats.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <View>
                <View
                  style={
                    {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "fontVariant": [
                            "tabular-nums",
                          ],
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    2
                    . 
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "flexShrink": 1,
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Cats"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Cats
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message LongNameUser should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM this is a normal message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="this is a normal message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    this is a normal message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Edited message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    {
                      "paddingLeft": 5,
                    }
                  }
                  testID="undefined-edited"
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Edited message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Edited message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Translated message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    {
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Translated message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Translated message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Encrypted message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Encrypted message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Encrypted message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Error message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Error message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Error message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Message with read receipt.  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message with read receipt"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message with read receipt
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Message with read receipt.  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message with read receipt"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message with read receipt
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Show all icons .  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Long name user looooong name user's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Long name user looooong name user?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Long name user looooong name user"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Long name user looooong name user
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
                <View
                  style={
                    {
                      "paddingLeft": 5,
                    }
                  }
                  testID="undefined-edited"
                />
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                />
                <View
                  style={
                    {
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Show all icons "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Show all icons 
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingLeft": 5,
                }
              }
            />
            <View
              style={
                {
                  "paddingLeft": 5,
                }
              }
              testID="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.-edited"
            />
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              hitSlop={
                {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingLeft": 5,
                }
              }
            />
            <View
              style={
                {
                  "paddingLeft": 5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityLabel="Long name user looooong name user 10:00:00 AM small message.  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="small message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    small message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingLeft": 5,
                }
              }
            />
            <View
              style={
                {
                  "paddingLeft": 5,
                }
              }
              testID="small message-edited"
            />
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              hitSlop={
                {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingLeft": 5,
                }
              }
            />
            <View
              style={
                {
                  "paddingLeft": 5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Mentions should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM rocket.cat diego.mello all here general.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    onPress={[Function]}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#8E6300",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    accessibilityLabel=" "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     
                  </Text>
                  <Text
                    onPress={[Function]}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#9B1325",
                        },
                      ]
                    }
                  >
                    diego.mello
                  </Text>
                  <Text
                    accessibilityLabel=" "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#974809",
                        },
                      ]
                    }
                  >
                    all
                  </Text>
                  <Text
                    accessibilityLabel=" "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#974809",
                        },
                      ]
                    }
                  >
                    here
                  </Text>
                  <Text
                    accessibilityLabel=" "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     
                  </Text>
                  <Text
                    onPress={[Function]}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#095AD2",
                        },
                      ]
                    }
                  >
                    general
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM rocket.cat Lorem ipsum dolor diego.mello sit amet, all consectetur adipiscing here elit, sed do eiusmod tempor general incididunt ut labore et dolore magna aliqua..  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    onPress={[Function]}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#8E6300",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    accessibilityLabel=" Lorem ipsum dolor "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     Lorem ipsum dolor 
                  </Text>
                  <Text
                    onPress={[Function]}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#9B1325",
                        },
                      ]
                    }
                  >
                    diego.mello
                  </Text>
                  <Text
                    accessibilityLabel=" sit amet, "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     sit amet, 
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#974809",
                        },
                      ]
                    }
                  >
                    all
                  </Text>
                  <Text
                    accessibilityLabel=" consectetur adipiscing "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     consectetur adipiscing 
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#974809",
                        },
                      ]
                    }
                  >
                    here
                  </Text>
                  <Text
                    accessibilityLabel=" elit, sed do eiusmod tempor "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     elit, sed do eiusmod tempor 
                  </Text>
                  <Text
                    onPress={[Function]}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#095AD2",
                        },
                      ]
                    }
                  >
                    general
                  </Text>
                  <Text
                    accessibilityLabel=" incididunt ut labore et dolore magna aliqua."
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                     incididunt ut labore et dolore magna aliqua.
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Message should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message MessageWithReadReceipt should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM I'm fine!.  Message was not read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="I'm fine!"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    I'm fine!
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM I'm fine!.  Message was not read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="I'm fine!"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    I'm fine!
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM I'm fine!.  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="I'm fine!"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    I'm fine!
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM I'm fine!.  Message was read"
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="I'm fine!"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    I'm fine!
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message MessageWithThread should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM How are you?.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="How are you?"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    How are you?
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "borderRadius": 4,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingHorizontal": 12,
                      "paddingVertical": 8,
                    },
                    {
                      "backgroundColor": "#1D74F5",
                    },
                  ]
                }
                testID="message-thread-button-How are you?"
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 12,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#FFFFFF",
                      },
                    ]
                  }
                >
                  View thread
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flex": 1,
                      "flexDirection": "row",
                    },
                    {
                      "flex": 1,
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "marginRight": 8,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 10,
                            "fontWeight": "600",
                            "marginLeft": 2,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                      testID="thread-count-1"
                    >
                      1
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "marginRight": 8,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 10,
                            "fontWeight": "600",
                            "marginLeft": 2,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      0
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "borderRadius": 4,
                          "height": 8,
                          "marginRight": 8,
                          "width": 8,
                        },
                        {
                          "backgroundColor": "#095AD2",
                        },
                      ]
                    }
                  />
                  <View
                    accessibilityLabel="Follow thread"
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-How are you?"
        >
          <Text
            accessibilityLabel="How are you?"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-How are you?"
          >
            How are you?
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message I'm fine!.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="I'm fine!"
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-I'm fine!"
              >
                I'm fine!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-Thread with emoji :) :joy:"
        >
          <Text
            accessibilityLabel="Thread with emoji :) 😂"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-Thread with emoji :) 😂"
          >
            Thread with emoji :) 😂
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message I'm fine!.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="I'm fine!"
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-I'm fine!"
              >
                I'm fine!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        >
          <Text
            accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message I'm fine!.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="I'm fine!"
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-I'm fine!"
              >
                I'm fine!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-How are you?"
        >
          <Text
            accessibilityLabel="How are you?"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-How are you?"
          >
            How are you?
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              >
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        >
          <Text
            accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              >
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-Thread with attachment"
        >
          <Text
            accessibilityLabel="Thread with attachment"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-Thread with attachment"
          >
            Thread with attachment
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message undefined.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Pinned should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message header.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message header"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message header
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message without header.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message without header"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message without header
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Reactions should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Reactions.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Reactions"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Reactions
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:joy:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    😂
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:marioparty:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#CBCED1",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <ViewManagerAdapter_ExpoImage
                    containerViewRef={"[React.ref]"}
                    contentFit="contain"
                    contentPosition={
                      {
                        "left": "50%",
                        "top": "50%",
                      }
                    }
                    height={19}
                    marginLeft={7}
                    nativeViewRef={"[React.ref]"}
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    placeholder={[]}
                    source={
                      [
                        {
                          "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                        },
                      ]
                    }
                    style={
                      {
                        "height": 19,
                        "marginLeft": 7,
                        "width": 19,
                      }
                    }
                    transition={null}
                    width={19}
                  />
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    99
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:thinking:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#CBCED1",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    🤔
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    999
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:thinking:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#CBCED1",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    🤔
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    9999
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-add-reaction"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#CBCED1",
                        "height": 56,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Multiple Reactions.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Multiple Reactions"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Multiple Reactions
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginTop": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:marioparty:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <ViewManagerAdapter_ExpoImage
                    containerViewRef={"[React.ref]"}
                    contentFit="contain"
                    contentPosition={
                      {
                        "left": "50%",
                        "top": "50%",
                      }
                    }
                    height={19}
                    marginLeft={7}
                    nativeViewRef={"[React.ref]"}
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    placeholder={[]}
                    source={
                      [
                        {
                          "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                        },
                      ]
                    }
                    style={
                      {
                        "height": 19,
                        "marginLeft": 7,
                        "width": 19,
                      }
                    }
                    transition={null}
                    width={19}
                  />
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:react_rocket:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <ViewManagerAdapter_ExpoImage
                    containerViewRef={"[React.ref]"}
                    contentFit="contain"
                    contentPosition={
                      {
                        "left": "50%",
                        "top": "50%",
                      }
                    }
                    height={19}
                    marginLeft={7}
                    nativeViewRef={"[React.ref]"}
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    placeholder={[]}
                    source={
                      [
                        {
                          "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                        },
                      ]
                    }
                    style={
                      {
                        "height": 19,
                        "marginLeft": 7,
                        "width": 19,
                      }
                    }
                    transition={null}
                    width={19}
                  />
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:nyan_rocket:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <ViewManagerAdapter_ExpoImage
                    containerViewRef={"[React.ref]"}
                    contentFit="contain"
                    contentPosition={
                      {
                        "left": "50%",
                        "top": "50%",
                      }
                    }
                    height={19}
                    marginLeft={7}
                    nativeViewRef={"[React.ref]"}
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    placeholder={[]}
                    source={
                      [
                        {
                          "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                        },
                      ]
                    }
                    style={
                      {
                        "height": 19,
                        "marginLeft": 7,
                        "width": 19,
                      }
                    }
                    transition={null}
                    width={19}
                  />
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:heart:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    ❤️
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:dog:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    🐶
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:grinning:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    😀
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:grimacing:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    😬
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#E4E7EA",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-reaction-:grin:"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#1D74F5",
                        "height": 56,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#ffffff",
                        "fontSize": 13,
                        "marginLeft": 7,
                      }
                    }
                  >
                    😁
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "600",
                          "marginLeft": 3,
                          "marginRight": 8.5,
                          "textAlign": "left",
                        },
                        {
                          "color": "#1D74F5",
                        },
                      ]
                    }
                  >
                    1
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 4,
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                  }
                }
                testID="message-add-reaction"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "minWidth": 46.3,
                      },
                      {
                        "borderColor": "#CBCED1",
                        "height": 56,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message SequentialThreadMessagesFollowingThreadButton should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM How are you?.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="How are you?"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    How are you?
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "borderRadius": 4,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingHorizontal": 12,
                      "paddingVertical": 8,
                    },
                    {
                      "backgroundColor": "#1D74F5",
                    },
                  ]
                }
                testID="message-thread-button-How are you?"
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 12,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#FFFFFF",
                      },
                    ]
                  }
                >
                  View thread
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flex": 1,
                      "flexDirection": "row",
                    },
                    {
                      "flex": 1,
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "marginRight": 8,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 10,
                            "fontWeight": "600",
                            "marginLeft": 2,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                      testID="thread-count-1"
                    >
                      1
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "marginRight": 8,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 10,
                            "fontWeight": "600",
                            "marginLeft": 2,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      0
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "borderRadius": 4,
                          "height": 8,
                          "marginRight": 8,
                          "width": 8,
                        },
                        {
                          "backgroundColor": "#095AD2",
                        },
                      ]
                    }
                  />
                  <View
                    accessibilityLabel="Follow thread"
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM thread message I'm fine!.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="I'm fine!"
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-I'm fine!"
              >
                I'm fine!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM thread message Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              >
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM thread message undefined.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message SequentialThreadMessagesFollowingThreadReply should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
              "marginTop": 6,
            }
          }
          testID="message-thread-replied-on-How are you?"
        >
          <Text
            accessibilityLabel="How are you?"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#095AD2",
                },
              ]
            }
            testID="markdown-preview-How are you?"
          >
            How are you?
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 4,
                "marginRight": 4,
              }
            }
          />
        </View>
        <View
          accessibilityLabel="diego.mello 10:00:00 AM replying to thread message I'm fine!.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="I'm fine!"
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-I'm fine!"
              >
                I'm fine!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM thread message Cool!.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="Cool!"
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-Cool!"
              >
                Cool!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM thread message Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View>
              <Text
                accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                numberOfLines={1}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                      "lineHeight": undefined,
                    },
                  ]
                }
                testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              >
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM thread message undefined.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message ShowButtonAsAttachment should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              <Text
                style={
                  {
                    "flexShrink": 1,
                  }
                }
              >
                <Text
                  accessibilityLabel="Test Button"
                  style={
                    {
                      "color": "#2F343D",
                    }
                  }
                >
                  Test Button
                </Text>
              </Text>
            </Text>
            <View
              accessibilityLabel="Text button"
              accessibilityRole="button"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "backgroundColor": "#156FF5",
                  "borderRadius": 4,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "opacity": 1,
                  "paddingHorizontal": 16,
                  "paddingVertical": 14,
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                    },
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontWeight": "500",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Text button
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              <Text
                style={
                  {
                    "flexShrink": 1,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "#2F343D",
                      },
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {},
                    ]
                  }
                >
                  🥑
                </Text>
                <Text
                  accessibilityLabel=" "
                  style={
                    {
                      "color": "#2F343D",
                    }
                  }
                >
                   
                </Text>
                <Text
                  style={
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontWeight": "700",
                      "textAlign": "left",
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message with markdown"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message with markdown
                  </Text>
                </Text>
              </Text>
            </Text>
            <View
              style={
                {
                  "height": 8,
                }
              }
            />
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              <Text
                style={
                  {
                    "flexShrink": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "fontStyle": "italic",
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Some text"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Some text
                  </Text>
                </Text>
              </Text>
            </Text>
            <View
              style={
                {
                  "height": 8,
                }
              }
            />
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              <Text
                style={
                  {
                    "flexShrink": 1,
                  }
                }
              >
                <Text
                  accessibilityLabel="This is a test"
                  style={
                    {
                      "color": "#2F343D",
                    }
                  }
                >
                  This is a test
                </Text>
              </Text>
            </Text>
            <View
              accessibilityLabel="Text button"
              accessibilityRole="button"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "backgroundColor": "#156FF5",
                  "borderRadius": 4,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "opacity": 1,
                  "paddingHorizontal": 16,
                  "paddingVertical": 14,
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                    },
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontWeight": "500",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Text button
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message StaticAvatar should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="'s avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://pbs.twimg.com/profile_images/1016397063649660929/14EIApTi_400x400.jpg",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message SystemMessages should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM message removed.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="message removed"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                message removed
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM joined the channel.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="joined the channel"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                joined the channel
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM Pinned a message:.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="Pinned a message:"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                Pinned a message:
              </Text>
            </Text>
            <View
              pointerEvents="none"
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "alignSelf": "flex-start",
                    "borderColor": "#CBCED1",
                    "borderLeftWidth": 2,
                    "flex": 1,
                    "flexDirection": "row",
                    "marginVertical": 4,
                    "opacity": 1,
                  }
                }
                testID="reply-rocket.cat-First message"
              >
                <View
                  style={
                    {
                      "borderRadius": 4,
                      "flex": 1,
                      "flexDirection": "row",
                      "paddingLeft": 8,
                      "paddingVertical": 4,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column",
                        "width": 200,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "marginBottom": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "flexShrink": 1,
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "500",
                              "textAlign": "left",
                            },
                            {
                              "color": "#6C727A",
                            },
                          ]
                        }
                      >
                        rocket.cat
                      </Text>
                    </View>
                    <Text
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 16,
                            "fontWeight": "400",
                            "lineHeight": 22,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          {
                            "flexShrink": 1,
                          }
                        }
                      >
                        <Text
                          accessibilityLabel="First message"
                          style={
                            {
                              "color": "#2F343D",
                            }
                          }
                        >
                          First message
                        </Text>
                      </Text>
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM left the channel.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="left the channel"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                left the channel
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM removed rocket.cat.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="removed rocket.cat"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                removed rocket.cat
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM added rocket.cat.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="added rocket.cat"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                added rocket.cat
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM muted rocket.cat.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="muted rocket.cat"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                muted rocket.cat
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM unmuted rocket.cat.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="unmuted rocket.cat"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                unmuted rocket.cat
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM defined rocket.cat as admin.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="defined rocket.cat as admin"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                defined rocket.cat as admin
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM removed rocket.cat as admin.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="removed rocket.cat as admin"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                removed rocket.cat as admin
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM changed room name to: New name.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="changed room name to: New name"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                changed room name to: New name
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM changed room description to: new description.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="changed room description to: new description"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                changed room description to: new description
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM changed room announcement to: new announcement.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="changed room announcement to: new announcement"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                changed room announcement to: new announcement
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM changed room topic to: new topic.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="changed room topic to: new topic"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                changed room topic to: new topic
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM changed room to public.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="changed room to public"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                changed room to public
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM disabled E2E encryption for this room.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="disabled E2E encryption for this room"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                disabled E2E encryption for this room
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM enabled E2E encryption for this room.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="enabled E2E encryption for this room"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                enabled E2E encryption for this room
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM removed @rocket.cat from this team.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="removed @rocket.cat from this team"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                removed @rocket.cat from this team
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM added @rocket.cat to this team.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="added @rocket.cat to this team"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                added @rocket.cat to this team
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM added #channel-name to this team.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="added #channel-name to this team"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                added #channel-name to this team
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM converted #channel-name to a team.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="converted #channel-name to a team"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                converted #channel-name to a team
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM converted #channel-name to channel.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="converted #channel-name to channel"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                converted #channel-name to channel
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM deleted #channel-name.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="deleted #channel-name"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                deleted #channel-name
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityLabel="diego.mello 10:00:00 AM removed #channel-name from this team.  "
          accessible={true}
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 20,
                  "width": 20,
                },
                {
                  "marginLeft": 16,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=40",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <Text>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "500",
                      "textAlign": "left",
                    },
                    {
                      "color": "#1F2329",
                    },
                  ]
                }
              >
                diego.mello
              </Text>
               
              <Text
                accessibilityLabel="removed #channel-name from this team"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    {
                      "color": "#6C727A",
                    },
                  ]
                }
              >
                removed #channel-name from this team
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Temp should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Temp message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View
              style={
                {
                  "opacity": 0.3,
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Temp message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Temp message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message ThumbnailFromServer should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM this is a thumbnail.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="this is a thumbnail"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    this is a thumbnail
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "#CBCED1",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-undefined-Image text"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  >
                    <Text
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "flex": 1,
                            "fontFamily": "Inter",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "marginBottom": 3,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                        ]
                      }
                    >
                      Title
                    </Text>
                  </View>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Image text"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Image text
                      </Text>
                    </Text>
                  </Text>
                </View>
                <ViewManagerAdapter_ExpoImage
                  borderTopLeftRadius={4}
                  borderTopRightRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={80}
                  marginBottom={1}
                  marginLeft={20}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://images-na.ssl-images-amazon.com/images/I/71jKxPAMFbL._AC_SL1500_.jpg",
                      },
                    ]
                  }
                  style={
                    {
                      "borderTopLeftRadius": 4,
                      "borderTopRightRadius": 4,
                      "height": 80,
                      "marginBottom": 1,
                      "marginLeft": 20,
                      "width": 80,
                    }
                  }
                  transition={null}
                  width={80}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message TimeFormat should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Testing.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10 November 2017
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Testing"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Testing
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message Translated should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message translated.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    {
                      "paddingLeft": 5,
                    }
                  }
                />
              </View>
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message translated"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message translated
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message TwoShortCustomFieldsWithMarkdown should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "#CBCED1",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-rocket.cat-Custom fields"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "flexShrink": 1,
                            "fontFamily": "Inter",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      rocket.cat
                    </Text>
                  </View>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Custom fields"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Custom fields
                      </Text>
                    </Text>
                  </Text>
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 1
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 1"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 1
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 2
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            onLongPress={[Function]}
                            onPress={[Function]}
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "fontFamily": "Inter",
                                  "fontSize": 16,
                                  "fontWeight": "400",
                                  "textAlign": "left",
                                },
                                {
                                  "color": "#095AD2",
                                },
                              ]
                            }
                          >
                            Value 2
                          </Text>
                        </Text>
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "#CBCED1",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 4,
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-rocket.cat-Custom fields 2"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "flexShrink": 1,
                            "fontFamily": "Inter",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      rocket.cat
                    </Text>
                  </View>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="Custom fields 2"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        Custom fields 2
                      </Text>
                    </Text>
                  </Text>
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 1
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            accessibilityLabel="Value 1"
                            style={
                              {
                                "color": "#2F343D",
                              }
                            }
                          >
                            Value 1
                          </Text>
                        </Text>
                      </Text>
                    </View>
                    <View
                      style={
                        [
                          {
                            "flexDirection": "column",
                            "padding": 10,
                          },
                          {
                            "width": "50%",
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 14,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        Field 2
                      </Text>
                      <Text
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "lineHeight": 22,
                              "textAlign": "left",
                            },
                            {
                              "color": "#2F343D",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexShrink": 1,
                            }
                          }
                        >
                          <Text
                            style={
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontWeight": "700",
                                "textAlign": "left",
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Value 2"
                              style={
                                {
                                  "color": "#2F343D",
                                }
                              }
                            >
                              Value 2
                            </Text>
                          </Text>
                        </Text>
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message URL should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message :nyan_rocket:.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message "
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message 
                  </Text>
                  <ViewManagerAdapter_ExpoImage
                    containerViewRef={"[React.ref]"}
                    contentFit="contain"
                    contentPosition={
                      {
                        "left": "50%",
                        "top": "50%",
                      }
                    }
                    height={30}
                    nativeViewRef={"[React.ref]"}
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    placeholder={[]}
                    source={
                      [
                        {
                          "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                        },
                      ]
                    }
                    style={
                      {
                        "height": 30,
                        "width": 30,
                      }
                    }
                    transition={null}
                    width={30}
                  />
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View />
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message URLImagePreview should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message WithAlias should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Diego Mello
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                      ]
                    }
                  >
                     @
                    diego.mello
                  </Text>
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'s avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  Diego Mello
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                      ]
                    }
                  >
                     @
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  </Text>
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message WithFile should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View />
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "#CBCED1",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginBottom": 4,
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-undefined-File.pdf"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="File.pdf"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        File.pdf
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              <Text
                style={
                  {
                    "flexShrink": 1,
                  }
                }
              >
                <Text
                  accessibilityLabel="This is a description "
                  style={
                    {
                      "color": "#2F343D",
                    }
                  }
                >
                  This is a description 
                </Text>
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={30}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 30,
                      "width": 30,
                    }
                  }
                  transition={null}
                  width={30}
                />
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM undefined.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View />
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "borderColor": "#CBCED1",
                  "borderLeftWidth": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "marginBottom": 4,
                  "marginVertical": 4,
                  "opacity": 1,
                }
              }
              testID="reply-undefined-File.pdf"
            >
              <View
                style={
                  {
                    "borderRadius": 4,
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingLeft": 8,
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column",
                      "width": 200,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "marginBottom": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        {
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityLabel="File.pdf"
                        style={
                          {
                            "color": "#2F343D",
                          }
                        }
                      >
                        File.pdf
                      </Text>
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                  },
                ]
              }
            >
              <Text
                style={
                  {
                    "flexShrink": 1,
                  }
                }
              >
                <Text
                  accessibilityLabel="This is a description "
                  style={
                    {
                      "color": "#2F343D",
                    }
                  }
                >
                  This is a description 
                </Text>
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={30}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 30,
                      "width": 30,
                    }
                  }
                  transition={null}
                  width={30}
                />
              </Text>
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots Message WithoutHeader should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots ReactionsList ReactionsListFullName should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
      "paddingVertical": 10,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
      }
    }
    testID="reactionsList"
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "flex": 1,
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={59}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#156FF5",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#156FF5",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={60}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={24}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  transition={null}
                  width={24}
                />
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={61}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={24}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  transition={null}
                  width={24}
                />
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={62}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={24}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  transition={null}
                  width={24}
                />
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={63}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#fff",
                      "fontSize": 20,
                      "height": 24,
                      "textAlign": "center",
                      "width": 24,
                    }
                  }
                >
                  😀
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={64}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#fff",
                      "fontSize": 20,
                      "height": 24,
                      "textAlign": "center",
                      "width": 24,
                    }
                  }
                >
                  🎉
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
      </View>
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "overflow": "hidden",
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                }
              }
              testID="reactionsListAllTab"
            >
              <RCTScrollView
                contentContainerStyle={
                  {
                    "marginHorizontal": 12,
                    "marginVertical": 8,
                    "paddingBottom": 30,
                  }
                }
                data={
                  [
                    {
                      "_id": "marioparty",
                      "emoji": ":marioparty:",
                      "names": [
                        "Rocket Cat",
                        "Diego Mello",
                      ],
                      "usernames": [
                        "rocket.cat",
                        "diego.mello",
                      ],
                    },
                    {
                      "_id": "react_rocket",
                      "emoji": ":react_rocket:",
                      "names": [
                        "Rocket Cat",
                        "Diego Mello",
                      ],
                      "usernames": [
                        "rocket.cat",
                        "diego.mello",
                      ],
                    },
                    {
                      "_id": "nyan_rocket",
                      "emoji": ":nyan_rocket:",
                      "names": [
                        "Rocket Cat",
                      ],
                      "usernames": [
                        "rocket.cat",
                      ],
                    },
                    {
                      "_id": "grinning",
                      "emoji": ":grinning:",
                      "names": [
                        "Diego Mello",
                      ],
                      "usernames": [
                        "diego.mello",
                      ],
                    },
                    {
                      "_id": "tada",
                      "emoji": ":tada:",
                      "names": [
                        "Diego Mello",
                      ],
                      "usernames": [
                        "diego.mello",
                      ],
                    },
                  ]
                }
                getItem={[Function]}
                getItemCount={[Function]}
                keyExtractor={[Function]}
                onContentSizeChange={[Function]}
                onLayout={[Function]}
                onMomentumScrollBegin={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={0.0001}
                stickyHeaderIndices={[]}
                viewabilityConfigCallbackPairs={[]}
              >
                <View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <ViewManagerAdapter_ExpoImage
                        containerViewRef={"[React.ref]"}
                        contentFit="contain"
                        contentPosition={
                          {
                            "left": "50%",
                            "top": "50%",
                          }
                        }
                        height={36}
                        nativeViewRef={"[React.ref]"}
                        onError={[Function]}
                        onLoad={[Function]}
                        onLoadStart={[Function]}
                        onProgress={[Function]}
                        placeholder={[]}
                        source={
                          [
                            {
                              "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                            },
                          ]
                        }
                        style={
                          {
                            "height": 36,
                            "width": 36,
                          }
                        }
                        transition={null}
                        width={36}
                      />
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          2 people reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          you and Diego Mello
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <ViewManagerAdapter_ExpoImage
                        containerViewRef={"[React.ref]"}
                        contentFit="contain"
                        contentPosition={
                          {
                            "left": "50%",
                            "top": "50%",
                          }
                        }
                        height={36}
                        nativeViewRef={"[React.ref]"}
                        onError={[Function]}
                        onLoad={[Function]}
                        onLoadStart={[Function]}
                        onProgress={[Function]}
                        placeholder={[]}
                        source={
                          [
                            {
                              "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                            },
                          ]
                        }
                        style={
                          {
                            "height": 36,
                            "width": 36,
                          }
                        }
                        transition={null}
                        width={36}
                      />
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          2 people reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          you and Diego Mello
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <ViewManagerAdapter_ExpoImage
                        containerViewRef={"[React.ref]"}
                        contentFit="contain"
                        contentPosition={
                          {
                            "left": "50%",
                            "top": "50%",
                          }
                        }
                        height={36}
                        nativeViewRef={"[React.ref]"}
                        onError={[Function]}
                        onLoad={[Function]}
                        onLoadStart={[Function]}
                        onProgress={[Function]}
                        placeholder={[]}
                        source={
                          [
                            {
                              "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                            },
                          ]
                        }
                        style={
                          {
                            "height": 36,
                            "width": 36,
                          }
                        }
                        transition={null}
                        width={36}
                      />
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          1 person reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          you
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#fff",
                            "fontSize": 30,
                            "textAlign": "center",
                            "width": 36,
                          }
                        }
                      >
                        😀
                      </Text>
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          1 person reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          Diego Mello
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#fff",
                            "fontSize": 30,
                            "textAlign": "center",
                            "width": 36,
                          }
                        }
                      >
                        🎉
                      </Text>
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          1 person reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          Diego Mello
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots ReactionsList ReactionsListStory should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
      "paddingVertical": 10,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
      }
    }
    testID="reactionsList"
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "flex": 1,
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={66}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "textAlign": "left",
                      },
                      {
                        "color": "#156FF5",
                      },
                    ]
                  }
                >
                  All
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#156FF5",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={67}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={24}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  transition={null}
                  width={24}
                />
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={68}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={24}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  transition={null}
                  width={24}
                />
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={69}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <ViewManagerAdapter_ExpoImage
                  containerViewRef={"[React.ref]"}
                  contentFit="contain"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={24}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  source={
                    [
                      {
                        "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                      },
                    ]
                  }
                  style={
                    {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  transition={null}
                  width={24}
                />
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={70}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#fff",
                      "fontSize": 20,
                      "height": 24,
                      "textAlign": "center",
                      "width": 24,
                    }
                  }
                >
                  😀
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={71}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            innerRef={null}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            rippleColor="transparent"
            style={
              [
                undefined,
                {
                  "cursor": undefined,
                },
              ]
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "center",
                    "paddingBottom": 4,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#fff",
                      "fontSize": 20,
                      "height": 24,
                      "textAlign": "center",
                      "width": 24,
                    }
                  }
                >
                  🎉
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontWeight": "600",
                        "marginLeft": 4,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              [
                {
                  "height": 2,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#EBECEF",
                },
              ]
            }
          />
        </View>
      </View>
      <View
        collapsable={false}
        style={
          [
            {
              "flex": 1,
              "overflow": "hidden",
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                }
              }
              testID="reactionsListAllTab"
            >
              <RCTScrollView
                contentContainerStyle={
                  {
                    "marginHorizontal": 12,
                    "marginVertical": 8,
                    "paddingBottom": 30,
                  }
                }
                data={
                  [
                    {
                      "_id": "marioparty",
                      "emoji": ":marioparty:",
                      "names": [
                        "Rocket Cat",
                        "Diego Mello",
                      ],
                      "usernames": [
                        "rocket.cat",
                        "diego.mello",
                      ],
                    },
                    {
                      "_id": "react_rocket",
                      "emoji": ":react_rocket:",
                      "names": [
                        "Rocket Cat",
                        "Diego Mello",
                      ],
                      "usernames": [
                        "rocket.cat",
                        "diego.mello",
                      ],
                    },
                    {
                      "_id": "nyan_rocket",
                      "emoji": ":nyan_rocket:",
                      "names": [
                        "Rocket Cat",
                      ],
                      "usernames": [
                        "rocket.cat",
                      ],
                    },
                    {
                      "_id": "grinning",
                      "emoji": ":grinning:",
                      "names": [
                        "Diego Mello",
                      ],
                      "usernames": [
                        "diego.mello",
                      ],
                    },
                    {
                      "_id": "tada",
                      "emoji": ":tada:",
                      "names": [
                        "Diego Mello",
                      ],
                      "usernames": [
                        "diego.mello",
                      ],
                    },
                  ]
                }
                getItem={[Function]}
                getItemCount={[Function]}
                keyExtractor={[Function]}
                onContentSizeChange={[Function]}
                onLayout={[Function]}
                onMomentumScrollBegin={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={0.0001}
                stickyHeaderIndices={[]}
                viewabilityConfigCallbackPairs={[]}
              >
                <View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <ViewManagerAdapter_ExpoImage
                        containerViewRef={"[React.ref]"}
                        contentFit="contain"
                        contentPosition={
                          {
                            "left": "50%",
                            "top": "50%",
                          }
                        }
                        height={36}
                        nativeViewRef={"[React.ref]"}
                        onError={[Function]}
                        onLoad={[Function]}
                        onLoadStart={[Function]}
                        onProgress={[Function]}
                        placeholder={[]}
                        source={
                          [
                            {
                              "uri": "https://open.rocket.chat/emoji-custom/marioparty.gif",
                            },
                          ]
                        }
                        style={
                          {
                            "height": 36,
                            "width": 36,
                          }
                        }
                        transition={null}
                        width={36}
                      />
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          2 people reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          you and diego.mello
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <ViewManagerAdapter_ExpoImage
                        containerViewRef={"[React.ref]"}
                        contentFit="contain"
                        contentPosition={
                          {
                            "left": "50%",
                            "top": "50%",
                          }
                        }
                        height={36}
                        nativeViewRef={"[React.ref]"}
                        onError={[Function]}
                        onLoad={[Function]}
                        onLoadStart={[Function]}
                        onProgress={[Function]}
                        placeholder={[]}
                        source={
                          [
                            {
                              "uri": "https://open.rocket.chat/emoji-custom/react_rocket.png",
                            },
                          ]
                        }
                        style={
                          {
                            "height": 36,
                            "width": 36,
                          }
                        }
                        transition={null}
                        width={36}
                      />
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          2 people reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          you and diego.mello
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <ViewManagerAdapter_ExpoImage
                        containerViewRef={"[React.ref]"}
                        contentFit="contain"
                        contentPosition={
                          {
                            "left": "50%",
                            "top": "50%",
                          }
                        }
                        height={36}
                        nativeViewRef={"[React.ref]"}
                        onError={[Function]}
                        onLoad={[Function]}
                        onLoadStart={[Function]}
                        onProgress={[Function]}
                        placeholder={[]}
                        source={
                          [
                            {
                              "uri": "https://open.rocket.chat/emoji-custom/nyan_rocket.png",
                            },
                          ]
                        }
                        style={
                          {
                            "height": 36,
                            "width": 36,
                          }
                        }
                        transition={null}
                        width={36}
                      />
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          1 person reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          you
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#fff",
                            "fontSize": 30,
                            "textAlign": "center",
                            "width": 36,
                          }
                        }
                      >
                        😀
                      </Text>
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          1 person reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          diego.mello
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    onFocusCapture={[Function]}
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginVertical": 6,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#fff",
                            "fontSize": 30,
                            "textAlign": "center",
                            "width": 36,
                          }
                        }
                      >
                        🎉
                      </Text>
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                            "marginLeft": 8,
                          }
                        }
                      >
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "textAlign": "left",
                              },
                              {
                                "color": "#2F343D",
                              },
                            ]
                          }
                        >
                          1 person reacted
                        </Text>
                        <Text
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "fontFamily": "Inter",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "textAlign": "left",
                              },
                              {
                                "color": "#6C727A",
                              },
                            ]
                          }
                        >
                          diego.mello
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "height": "100%",
                "position": "absolute",
                "width": "100%",
                "zIndex": 0,
              },
              {
                "left": 0,
              },
              undefined,
              {
                "transform": [
                  {
                    "translateX": -0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "height": "100%",
                  "width": "100%",
                },
                {
                  "opacity": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots RoomHeader Icons should match snapshot 1`] = `
[
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel private channel ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={73}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="private channel"
            >
              private channel
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="public channel public channel ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={74}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="public channel"
            >
              public channel
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="Discussion discussion ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={75}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="discussion"
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="discussion"
            >
              discussion
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="Omnichannel omnichannel ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={76}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="omnichannel"
            >
              omnichannel
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private team private team ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={77}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="private team"
            >
              private team
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="Team public team ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={78}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="public team"
            >
              public team
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="Message group dm ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={79}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="group dm"
            >
              group dm
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel online dm ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={80}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="online dm"
            >
              online dm
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel away dm ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={81}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="away dm"
            >
              away dm
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel busy dm ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={82}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="busy dm"
            >
              busy dm
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel loading dm ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={83}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="loading dm"
            >
              loading dm
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel offline dm ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={84}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="offline dm"
            >
              offline dm
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomHeader Themes should match snapshot 1`] = `
[
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title subtitle."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={85}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            accessibilityLabel="subtitle"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                  "fontSize": 12,
                },
              ]
            }
            testID="markdown-preview-subtitle"
          >
            subtitle
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#2D3039",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title subtitle."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={86}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#F2F3F5",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            accessibilityLabel="subtitle"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#E4E7EA",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                  "fontSize": 12,
                },
              ]
            }
            testID="markdown-preview-subtitle"
          >
            subtitle
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#16181a",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title subtitle."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={87}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#F2F3F5",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            accessibilityLabel="subtitle"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#E4E7EA",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#9EA2A8",
                  "fontSize": 12,
                },
              ]
            }
            testID="markdown-preview-subtitle"
          >
            subtitle
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomHeader Thread should match snapshot 1`] = `
[
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title parent title."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={88}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="title"
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="markdown-preview-title"
            >
              title
            </Text>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              parent title
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel markdown
preview
#3
4
5 Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={89}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="markdown preview #3 4 5"
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="markdown
preview
#3
4
5"
            >
              markdown preview #3 4 5
            </Text>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomHeader TitleSubtitle should match snapshot 1`] = `
[
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={90}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="title"
            >
              title
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={91}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title subtitle."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={92}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            accessibilityLabel="subtitle"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                  "fontSize": 12,
                },
              ]
            }
            testID="markdown-preview-subtitle"
          >
            subtitle
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={93}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                  "fontSize": 12,
                },
              ]
            }
            testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={94}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
              testID="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
            </Text>
          </View>
          <Text
            accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 22,
                  "textAlign": "left",
                },
                {
                  "color": "#2F343D",
                  "lineHeight": undefined,
                },
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                  "fontSize": 12,
                },
              ]
            }
            testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomHeader Typing should match snapshot 1`] = `
[
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={95}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                  "fontSize": 12,
                },
              ]
            }
          >
            <Text
              style={
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontWeight": "600",
                  "textAlign": "left",
                }
              }
            >
              user 1
               
            </Text>
            is typing
            ...
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={96}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                  "fontSize": 12,
                },
              ]
            }
          >
            <Text
              style={
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontWeight": "600",
                  "textAlign": "left",
                }
              }
            >
              user 1 and user 2
               
            </Text>
            are typing
            ...
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
  <View
    style={
      {
        "backgroundColor": "#E4E7EA",
        "flex": 1,
        "maxHeight": 48,
      }
    }
  >
    <View
      accessibilityLabel="private channel title ."
      accessibilityRole="header"
      accessible={true}
      style={
        [
          {
            "flex": 1,
            "justifyContent": "center",
          },
          {
            "height": 73.8,
            "opacity": 1,
          },
        ]
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        delayLongPress={600}
        enabled={true}
        exclusive={true}
        handlerTag={97}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        innerRef={null}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        rippleColor="transparent"
        style={
          [
            undefined,
            {
              "cursor": undefined,
            },
          ]
        }
        testID="room-header"
        touchSoundDisabled={false}
      >
        <View
          accessible={true}
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontWeight": "600",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                    "fontSize": 16,
                  },
                ]
              }
            >
              title
            </Text>
          </View>
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "flexShrink": 1,
                  "fontFamily": "Inter",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                {
                  "color": "#6C727A",
                  "fontSize": 12,
                },
              ]
            }
          >
            <Text
              style={
                {
                  "backgroundColor": "transparent",
                  "fontFamily": "Inter",
                  "fontWeight": "600",
                  "textAlign": "left",
                }
              }
            >
              user 1, user 2, user 3, user 4, user 5
               
            </Text>
            are typing
            ...
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem Alerts should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={98}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={99}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={100}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={101}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={102}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={103}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={104}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={105}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={106}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={107}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={108}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={109}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="unread. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#9EA2A8",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={110}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={111}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={112}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={113}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={114}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={115}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="unread. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#9EA2A8",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        +999
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={116}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={117}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={118}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={119}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={120}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={121}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="user mentions. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    user mentions
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F5455C",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={122}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={123}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={124}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={125}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={126}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={127}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="group mentions. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    group mentions
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F38C39",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={128}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={129}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={130}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={131}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={132}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={133}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={134}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={135}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={136}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={137}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={138}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={139}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread user. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread user
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F5455C",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={140}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={141}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={142}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={143}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={144}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={145}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread group. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread group
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F38C39",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={146}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={147}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={148}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={149}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={150}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={151}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="user mentions priority 1. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    user mentions priority 1
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F5455C",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={152}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={153}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={154}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={155}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={156}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={157}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="group mentions priority 2. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    group mentions priority 2
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F38C39",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={158}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={159}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={160}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={161}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={162}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={163}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread priority 3. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread priority 3
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem Basic should match snapshot 1`] = `
<View
  collapsable={false}
  handlerTag={164}
  handlerType="LongPressGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
>
  <View
    collapsable={false}
    enabled={true}
    handlerTag={165}
    handlerType="PanGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "backgroundColor": "#1D74F5",
              "right": "100%",
              "width": 1500,
            },
            {
              "height": undefined,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "height": undefined,
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Mark read"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={166}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "height": undefined,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#8E6300",
              "left": "100%",
              "width": 750,
            },
            {
              "height": undefined,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Favorite"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={167}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#8E6300",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#9EA2A8",
              "left": "100%",
              "width": 1500,
            },
            {
              "height": undefined,
            },
            {
              "transform": [
                {
                  "translateX": 80,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Hide"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={168}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#9EA2A8",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </RNGestureHandlerButton>
      </View>
    </View>
    <View
      style={
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={1}
        collapsable={false}
        delayLongPress={600}
        handlerTag={169}
        handlerType="NativeViewGestureHandler"
        innerRef={null}
        onActiveStateChange={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onPress={[Function]}
        rippleColor="#E4E7EA"
        style={
          [
            {
              "backgroundColor": "#FFFFFF",
              "borderRadius": undefined,
              "margin": undefined,
              "marginBottom": undefined,
              "marginEnd": undefined,
              "marginHorizontal": undefined,
              "marginLeft": undefined,
              "marginRight": undefined,
              "marginStart": undefined,
              "marginTop": undefined,
              "marginVertical": undefined,
            },
            {
              "cursor": undefined,
            },
          ]
        }
        underlayColor="#E4E7EA"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#E4E7EA",
              "borderBottomLeftRadius": undefined,
              "borderBottomRightRadius": undefined,
              "borderRadius": undefined,
              "borderTopLeftRadius": undefined,
              "borderTopRightRadius": undefined,
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={{}}
        >
          <View
            accessibilityLabel="rocket.cat. private channel. undefined. "
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 14,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <View
              accessibilityLabel="rocket.cat's avatar"
              accessible={true}
              style={
                [
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  },
                  {
                    "marginRight": 10,
                  },
                ]
              }
              testID="avatar"
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={48}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  }
                }
                transition={null}
                width={48}
              />
            </View>
            <View
              style={
                [
                  {
                    "borderBottomWidth": 0.5,
                    "flex": 1,
                    "paddingRight": 14,
                    "paddingVertical": 10,
                  },
                  {
                    "borderColor": "#CBCED1",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    },
                    {
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flex": 1,
                        "fontFamily": "Inter",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  rocket.cat
                </Text>
                <View
                  style={
                    {
                      "alignItems": "flex-end",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots RoomItem CondensedRoomItem should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={170}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={171}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={172}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={173}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={174}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={175}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={36}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    }
                  }
                  transition={null}
                  width={36}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={176}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={177}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={178}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={179}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={180}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={181}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="unread. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={36}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    }
                  }
                  transition={null}
                  width={36}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#9EA2A8",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        +999
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={182}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={183}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={184}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={185}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={186}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={187}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. public channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={36}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=72",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    }
                  }
                  transition={null}
                  width={36}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem CondensedRoomItemWithoutAvatar should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={188}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={189}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={190}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={191}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={192}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={193}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 21,
                            "minWidth": 42,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={194}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={195}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={196}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={197}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={198}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={199}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={200}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={201}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={202}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={203}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={204}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={205}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem ExpandedRoomItemWithoutAvatar should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={206}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={207}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={208}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={209}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={210}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={211}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "justifyContent": "center",
                    },
                    {
                      "height": undefined,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#095AD2",
                          "borderRadius": 21,
                          "minWidth": 42,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={212}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={213}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={214}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={215}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={216}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={217}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "justifyContent": "center",
                    },
                    {
                      "height": undefined,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#095AD2",
                          "borderRadius": 21,
                          "minWidth": 42,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={218}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={219}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={220}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={221}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={222}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={223}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "justifyContent": "center",
                    },
                    {
                      "height": undefined,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem LastMessage should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={224}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={225}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={226}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={227}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={228}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={229}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="No message"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-No message"
                  >
                    No message
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={230}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={231}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={232}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={233}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={234}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={235}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. 2"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="2"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-2"
                  >
                    2
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={236}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={237}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={238}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={239}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={240}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={241}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. You: 1"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="You: 1"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-You: 1"
                  >
                    You: 1
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={242}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={243}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={244}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={245}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={246}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={247}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={248}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={249}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={250}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={251}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={252}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={253}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#9EA2A8",
                          "borderRadius": 21,
                          "minWidth": 42,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={254}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={255}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={256}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={257}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={258}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={259}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#9EA2A8",
                          "borderRadius": 21,
                          "minWidth": 42,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      +999
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={260}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={261}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={262}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={263}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={264}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={265}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#095AD2",
                          "borderRadius": 21,
                          "minWidth": 42,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem OmnichannelIcon should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={266}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={267}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={268}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={269}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={270}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={271}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={272}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={273}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={274}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={275}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={276}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={277}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={278}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={279}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={280}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={281}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={282}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={283}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={284}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={285}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={286}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={287}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={288}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={289}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={290}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={291}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={292}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={293}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={294}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={295}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={296}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={297}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={298}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={299}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={300}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={301}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={302}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={303}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={304}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={305}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={306}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={307}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={308}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={309}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={310}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={311}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={312}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={313}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={314}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={315}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={316}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={317}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={318}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={319}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={320}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={321}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={322}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={323}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={324}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={325}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem Tag should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={326}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={327}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={328}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={329}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={330}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={331}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={332}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={333}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={334}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={335}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={336}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={337}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                      testID="auto-join-tag"
                    >
                      Auto-join
                    </Text>
                  </View>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="No message"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-No message"
                  >
                    No message
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={338}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={339}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={340}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={341}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={342}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={343}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={344}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={345}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={346}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={347}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={348}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={349}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                      testID="auto-join-tag"
                    >
                      Auto-join
                    </Text>
                  </View>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="No message"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-No message"
                  >
                    No message
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem Touch should match snapshot 1`] = `
<View
  collapsable={false}
  handlerTag={350}
  handlerType="LongPressGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
>
  <View
    collapsable={false}
    enabled={true}
    handlerTag={351}
    handlerType="PanGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "backgroundColor": "#1D74F5",
              "right": "100%",
              "width": 1500,
            },
            {
              "height": undefined,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "height": undefined,
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Mark read"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={352}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "height": undefined,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#8E6300",
              "left": "100%",
              "width": 750,
            },
            {
              "height": undefined,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Favorite"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={353}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#8E6300",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#9EA2A8",
              "left": "100%",
              "width": 1500,
            },
            {
              "height": undefined,
            },
            {
              "transform": [
                {
                  "translateX": 80,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Hide"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={354}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#9EA2A8",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </RNGestureHandlerButton>
      </View>
    </View>
    <View
      style={
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={1}
        collapsable={false}
        delayLongPress={600}
        handlerTag={355}
        handlerType="NativeViewGestureHandler"
        innerRef={null}
        onActiveStateChange={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onPress={[Function]}
        rippleColor="#E4E7EA"
        style={
          [
            {
              "backgroundColor": "#FFFFFF",
              "borderRadius": undefined,
              "margin": undefined,
              "marginBottom": undefined,
              "marginEnd": undefined,
              "marginHorizontal": undefined,
              "marginLeft": undefined,
              "marginRight": undefined,
              "marginStart": undefined,
              "marginTop": undefined,
              "marginVertical": undefined,
            },
            {
              "cursor": undefined,
            },
          ]
        }
        underlayColor="#E4E7EA"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#E4E7EA",
              "borderBottomLeftRadius": undefined,
              "borderBottomRightRadius": undefined,
              "borderRadius": undefined,
              "borderTopLeftRadius": undefined,
              "borderTopRightRadius": undefined,
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={{}}
        >
          <View
            accessibilityLabel="rocket.cat. private channel. undefined. "
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 14,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <View
              accessibilityLabel="rocket.cat's avatar"
              accessible={true}
              style={
                [
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  },
                  {
                    "marginRight": 10,
                  },
                ]
              }
              testID="avatar"
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={48}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  }
                }
                transition={null}
                width={48}
              />
            </View>
            <View
              style={
                [
                  {
                    "borderBottomWidth": 0.5,
                    "flex": 1,
                    "paddingRight": 14,
                    "paddingVertical": 10,
                  },
                  {
                    "borderColor": "#CBCED1",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    },
                    {
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flex": 1,
                        "fontFamily": "Inter",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  rocket.cat
                </Text>
                <View
                  style={
                    {
                      "alignItems": "flex-end",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots RoomItem Type should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={356}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={357}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={358}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={359}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={360}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={361}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Offline. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={362}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={363}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={364}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={365}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={366}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={367}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. public channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={368}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={369}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={370}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={371}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={372}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={373}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={374}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={375}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={376}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={377}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={378}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={379}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={380}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={381}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={382}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={383}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={384}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={385}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Discussion. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={386}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={387}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={388}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={389}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={390}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={391}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Message. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={392}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={393}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={394}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={395}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={396}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={397}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomItem User should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={398}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={399}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={400}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={401}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={402}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={403}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="diego.mello. Offline. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="diego.mello's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    diego.mello
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={404}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={405}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={406}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": undefined,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={407}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": undefined,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={408}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={409}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. Offline. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": undefined,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots RoomTypeIcon All should match snapshot 1`] = `null`;

exports[`Story Snapshots RoomView/LoadMore Basic should match snapshot 1`] = `
[
  <RNGestureHandlerButton
    activeOpacity={1}
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    handlerTag={410}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#E4E7EA"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#E4E7EA",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": undefined,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingVertical": 16,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "500",
              "textAlign": "left",
            },
            {
              "color": "#1F2329",
            },
          ]
        }
      >
        Load more
      </Text>
    </View>
  </RNGestureHandlerButton>,
  <RNGestureHandlerButton
    activeOpacity={1}
    collapsable={false}
    delayLongPress={600}
    enabled={false}
    handlerTag={411}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#E4E7EA"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#E4E7EA",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": undefined,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingVertical": 16,
        }
      }
    >
      <ActivityIndicator
        color="#6C727A"
      />
    </View>
  </RNGestureHandlerButton>,
  <RNGestureHandlerButton
    activeOpacity={1}
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    handlerTag={412}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#E4E7EA"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#E4E7EA",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": undefined,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingVertical": 16,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "500",
              "textAlign": "left",
            },
            {
              "color": "#1F2329",
            },
          ]
        }
      >
        Load older
      </Text>
    </View>
  </RNGestureHandlerButton>,
  <RNGestureHandlerButton
    activeOpacity={1}
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    handlerTag={413}
    handlerType="NativeViewGestureHandler"
    innerRef={null}
    onActiveStateChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onPress={[Function]}
    rippleColor="#E4E7EA"
    style={
      [
        {
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginEnd": undefined,
          "marginHorizontal": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginStart": undefined,
          "marginTop": undefined,
          "marginVertical": undefined,
        },
        {
          "cursor": undefined,
        },
      ]
    }
    underlayColor="#E4E7EA"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#E4E7EA",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": undefined,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingVertical": 16,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "500",
              "textAlign": "left",
            },
            {
              "color": "#1F2329",
            },
          ]
        }
      >
        Load newer
      </Text>
    </View>
  </RNGestureHandlerButton>,
]
`;

exports[`Story Snapshots RoomView/LoadMore BlackTheme should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#000000",
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={414}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#16181a"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#16181a"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#16181a",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Load older
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Hey!.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#F2F3F5",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Hey!"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Hey!
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Older message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Older message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Older message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={415}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#16181a"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#16181a"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#16181a",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Load newer
        </Text>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={416}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#16181a"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#16181a"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#16181a",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Load more
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#F2F3F5",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the third message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the third message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    This is the third message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the second message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the second message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    This is the second message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the first message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#F2F3F5",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the first message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    This is the first message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots RoomView/LoadMore DarkTheme should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#1F2329",
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={417}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#2D3039"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#2D3039"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#2D3039",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Load older
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Hey!.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#F2F3F5",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Hey!"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Hey!
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Older message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Older message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Older message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={418}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#2D3039"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#2D3039"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#2D3039",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Load newer
        </Text>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={419}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#2D3039"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#2D3039"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#2D3039",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Load more
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#F2F3F5",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the third message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the third message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    This is the third message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the second message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the second message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    This is the second message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the first message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#F2F3F5",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#E4E7EA",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the first message"
                    style={
                      {
                        "color": "#E4E7EA",
                      }
                    }
                  >
                    This is the first message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots RoomView/LoadMore LightTheme should match snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={420}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#E4E7EA"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#E4E7EA"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#E4E7EA",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Load older
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Hey!.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Hey!"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Hey!
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Older message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Older message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Older message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={421}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#E4E7EA"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#E4E7EA"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#E4E7EA",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Load newer
        </Text>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={1}
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      handlerTag={422}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onActiveStateChange={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onPress={[Function]}
      rippleColor="#E4E7EA"
      style={
        [
          {
            "backgroundColor": undefined,
            "borderRadius": undefined,
            "margin": undefined,
            "marginBottom": undefined,
            "marginEnd": undefined,
            "marginHorizontal": undefined,
            "marginLeft": undefined,
            "marginRight": undefined,
            "marginStart": undefined,
            "marginTop": undefined,
            "marginVertical": undefined,
          },
          {
            "cursor": undefined,
          },
        ]
      }
      underlayColor="#E4E7EA"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#E4E7EA",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Load more
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the third message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the third message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This is the third message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the second message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the second message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This is the second message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": undefined,
          "opacity": 1,
        }
      }
    >
      <View
        accessibilityLabel="diego.mello 10:00:00 AM This is the first message.  "
        accessible={true}
        style={
          [
            {
              "flexDirection": "column",
              "paddingHorizontal": 14,
              "paddingVertical": 4,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            style={
              [
                {
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                },
                {
                  "marginTop": 4,
                },
              ]
            }
            testID="avatar"
          >
            <View
              accessibilityLabel="diego.mello's avatar"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={36}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=72",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 36,
                    "width": 36,
                  }
                }
                transition={null}
                width={36}
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "marginLeft": 46,
                },
                {
                  "marginLeft": 10,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "opacity": 1,
                  }
                }
                testID="username-header-diego.mello"
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flexShrink": 1,
                        "fontFamily": "Inter",
                        "fontSize": 16,
                        "fontWeight": "600",
                        "lineHeight": 22,
                        "textAlign": "left",
                      },
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  diego.mello
                </Text>
                <Text
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 13,
                        "fontWeight": "400",
                        "marginLeft": 8,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  10:00 AM
                </Text>
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              />
            </View>
            <View>
              <Text
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "fontFamily": "Inter",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 22,
                      "textAlign": "left",
                    },
                    {
                      "color": "#2F343D",
                    },
                  ]
                }
              >
                <Text
                  style={
                    {
                      "flexShrink": 1,
                    }
                  }
                >
                  <Text
                    accessibilityLabel="This is the first message"
                    style={
                      {
                        "color": "#2F343D",
                      }
                    }
                  >
                    This is the first message
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots SearchBox Basic should match snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
  testID="searchbox"
>
  <View>
    <View>
      <View
        accessibilityLabel="undefined  . Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            {
              "margin": 16,
              "marginBottom": 16,
            },
          ]
        }
      >
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            blurOnSubmit={true}
            keyboardAppearance="light"
            onChangeText={[Function]}
            placeholder="Search"
            placeholderTextColor="#9EA2A8"
            returnKeyType="search"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "paddingRight": 45,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots ServerItem Content should match snapshot 1`] = `
[
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#FFFFFF",
      }
    }
    testID="server-item-https://open.rocket.chat/"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "padding": 12,
        }
      }
    >
      <ViewManagerAdapter_ExpoImage
        borderRadius={4}
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={44}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={
          [
            {
              "uri": "test-file-stub",
            },
          ]
        }
        source={
          [
            {
              "uri": "https://open.rocket.chat/images/logo/android-chrome-512x512.png",
            },
          ]
        }
        style={
          {
            "borderRadius": 4,
            "height": 44,
            "width": 44,
          }
        }
        transition={null}
        width={44}
      />
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": 12,
            "paddingRight": 18,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 18,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Rocket.Chat
        </Text>
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          https://open.rocket.chat/
        </Text>
      </View>
    </View>
  </View>,
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#FFFFFF",
      }
    }
    testID="server-item-https://superlongservername.tologintoasuperlongservername/"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "padding": 12,
        }
      }
    >
      <ViewManagerAdapter_ExpoImage
        borderRadius={4}
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={44}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={
          [
            {
              "uri": "test-file-stub",
            },
          ]
        }
        source={
          [
            {
              "uri": "https://open.rocket.chat/images/logo/android-chrome-512x512.png",
            },
          ]
        }
        style={
          {
            "borderRadius": 4,
            "height": 44,
            "width": 44,
          }
        }
        transition={null}
        width={44}
      />
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": 12,
            "paddingRight": 18,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 18,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Super Long Server Name in Rocket.Chat
        </Text>
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          https://superlongservername.tologintoasuperlongservername/
        </Text>
      </View>
    </View>
  </View>,
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#FFFFFF",
      }
    }
    testID="server-item-https://stable.rocket.chat/"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "padding": 12,
        }
      }
    >
      <ViewManagerAdapter_ExpoImage
        borderRadius={4}
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={44}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={
          [
            {
              "uri": "test-file-stub",
            },
          ]
        }
        source={
          [
            {
              "uri": "https://open.rocket.chat/images/logo/android-chrome-512x512.png",
            },
          ]
        }
        style={
          {
            "borderRadius": 4,
            "height": 44,
            "width": 44,
          }
        }
        transition={null}
        width={44}
      />
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": 12,
            "paddingRight": 18,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 18,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Rocket.Chat
        </Text>
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          https://stable.rocket.chat/
        </Text>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots ServerItem Themes should match snapshot 1`] = `
[
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#FFFFFF",
      }
    }
    testID="server-item-https://open.rocket.chat/"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "padding": 12,
        }
      }
    >
      <ViewManagerAdapter_ExpoImage
        borderRadius={4}
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={44}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={
          [
            {
              "uri": "test-file-stub",
            },
          ]
        }
        source={
          [
            {
              "uri": "https://open.rocket.chat/images/logo/android-chrome-512x512.png",
            },
          ]
        }
        style={
          {
            "borderRadius": 4,
            "height": 44,
            "width": 44,
          }
        }
        transition={null}
        width={44}
      />
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": 12,
            "paddingRight": 18,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 18,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Rocket.Chat
        </Text>
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#6C727A",
              },
            ]
          }
        >
          https://open.rocket.chat/
        </Text>
      </View>
    </View>
  </View>,
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#1F2329",
      }
    }
    testID="server-item-https://open.rocket.chat/"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "padding": 12,
        }
      }
    >
      <ViewManagerAdapter_ExpoImage
        borderRadius={4}
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={44}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={
          [
            {
              "uri": "test-file-stub",
            },
          ]
        }
        source={
          [
            {
              "uri": "https://open.rocket.chat/images/logo/android-chrome-512x512.png",
            },
          ]
        }
        style={
          {
            "borderRadius": 4,
            "height": 44,
            "width": 44,
          }
        }
        transition={null}
        width={44}
      />
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": 12,
            "paddingRight": 18,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 18,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Rocket.Chat
        </Text>
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#9EA2A8",
              },
            ]
          }
        >
          https://open.rocket.chat/
        </Text>
      </View>
    </View>
  </View>,
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#000000",
      }
    }
    testID="server-item-https://open.rocket.chat/"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "padding": 12,
        }
      }
    >
      <ViewManagerAdapter_ExpoImage
        borderRadius={4}
        containerViewRef={"[React.ref]"}
        contentFit="contain"
        contentPosition={
          {
            "left": "50%",
            "top": "50%",
          }
        }
        height={44}
        nativeViewRef={"[React.ref]"}
        onError={[Function]}
        onLoad={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        placeholder={
          [
            {
              "uri": "test-file-stub",
            },
          ]
        }
        source={
          [
            {
              "uri": "https://open.rocket.chat/images/logo/android-chrome-512x512.png",
            },
          ]
        }
        style={
          {
            "borderRadius": 4,
            "height": 44,
            "width": 44,
          }
        }
        transition={null}
        width={44}
      />
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": 12,
            "paddingRight": 18,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 18,
                "fontWeight": "600",
                "textAlign": "left",
              },
              {
                "color": "#F2F3F5",
              },
            ]
          }
        >
          Rocket.Chat
        </Text>
        <Text
          numberOfLines={1}
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "400",
                "textAlign": "left",
              },
              {
                "color": "#9EA2A8",
              },
            ]
          }
        >
          https://open.rocket.chat/
        </Text>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots ServerItem Touchable should match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#FFFFFF",
    }
  }
  testID="server-item-https://open.rocket.chat/"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "padding": 12,
      }
    }
  >
    <ViewManagerAdapter_ExpoImage
      borderRadius={4}
      containerViewRef={"[React.ref]"}
      contentFit="contain"
      contentPosition={
        {
          "left": "50%",
          "top": "50%",
        }
      }
      height={44}
      nativeViewRef={"[React.ref]"}
      onError={[Function]}
      onLoad={[Function]}
      onLoadStart={[Function]}
      onProgress={[Function]}
      placeholder={
        [
          {
            "uri": "test-file-stub",
          },
        ]
      }
      source={
        [
          {
            "uri": "https://open.rocket.chat/images/logo/android-chrome-512x512.png",
          },
        ]
      }
      style={
        {
          "borderRadius": 4,
          "height": 44,
          "width": 44,
        }
      }
      transition={null}
      width={44}
    />
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
          "paddingLeft": 12,
          "paddingRight": 18,
        }
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 18,
              "fontWeight": "600",
              "textAlign": "left",
            },
            {
              "color": "#1F2329",
            },
          ]
        }
      >
        Rocket.Chat
      </Text>
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
            },
            {
              "color": "#6C727A",
            },
          ]
        }
      >
        https://open.rocket.chat/
      </Text>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots Status All should match snapshot 1`] = `null`;

exports[`Story Snapshots SwitchItem Switch should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "flex-start",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "maxHeight": 80,
          "minHeight": 54,
        },
        {
          "backgroundColor": "#FFFFFF",
        },
      ]
    }
  >
    <View
      accessibilityLabel="[missing "en.Onboarding_title" translation], Only channel owners can send new messages"
      accessible={true}
      style={
        {
          "flex": 1,
          "marginRight": 8,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "500",
              "lineHeight": 24,
              "textAlign": "left",
            },
            {
              "color": "#1F2329",
            },
          ]
        }
      >
        [missing "en.Onboarding_title" translation]
      </Text>
      <Text
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 14,
              "fontWeight": "400",
              "lineHeight": 20,
              "textAlign": "left",
            },
            {
              "color": "#6C727A",
            },
          ]
        }
        testID="create-channel-switch-id-hint"
      >
        Only channel owners can send new messages
      </Text>
    </View>
    <RCTSwitch
      accessibilityRole="switch"
      accessible={true}
      disabled={false}
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onTintColor="#0D5940"
      style={
        {
          "height": 31,
          "width": 51,
        }
      }
      testID="create-channel-switch-id"
      tintColor="#BB0B21"
      value={false}
    />
  </View>
</View>
`;

exports[`Story Snapshots TextInput Icons should match snapshot 1`] = `
<View
  style={
    {
      "paddingHorizontal": 14,
    }
  }
>
  <View>
    <View>
      <View
        accessibilityLabel="Right icon  , Rocket.Chat. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Right icon
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "paddingRight": 45,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="Rocket.Chat"
          />
        </View>
      </View>
    </View>
  </View>
  <View>
    <View>
      <View
        accessibilityLabel="Left icon  , https://open.rocket.chat/images/logo/android-chrome-512x512.png. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Left icon
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  {
                    "paddingLeft": 45,
                  },
                  {},
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="https://open.rocket.chat/images/logo/android-chrome-512x512.png"
          />
        </View>
      </View>
    </View>
  </View>
  <View>
    <View>
      <View
        accessibilityLabel="Both icons  , https://open.rocket.chat/images/logo/android-chrome-512x512.png. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Both icons
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  {
                    "paddingLeft": 45,
                  },
                  {
                    "paddingRight": 45,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="https://open.rocket.chat/images/logo/android-chrome-512x512.png"
          />
        </View>
      </View>
    </View>
  </View>
  <View>
    <View>
      <View
        accessibilityLabel="Icon and touchable clear input  , https://open.rocket.chat/images/logo/android-chrome-512x512.png. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Icon and touchable clear input
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "paddingRight": 45,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="https://open.rocket.chat/images/logo/android-chrome-512x512.png"
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
                "position": "absolute",
                "right": 12,
              }
            }
            testID="clear-text-input"
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots TextInput Loading should match snapshot 1`] = `
<View
  style={
    {
      "paddingHorizontal": 14,
    }
  }
>
  <View>
    <View>
      <View
        accessibilityLabel="Loading false  , Rocket.Chat. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Loading false
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {},
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="Rocket.Chat"
          />
        </View>
      </View>
    </View>
  </View>
  <View>
    <View>
      <View
        accessibilityLabel="Loading true  , Rocket.Chat. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Loading true
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {},
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="Rocket.Chat"
          />
          <ActivityIndicator
            color="#2F343D"
            style={
              [
                {
                  "position": "absolute",
                },
                {
                  "right": 12,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots TextInput Multiline should match snapshot 1`] = `
<View
  style={
    {
      "paddingHorizontal": 14,
    }
  }
>
  <View>
    <View>
      <View
        accessibilityLabel="Multiline text  , Rocket.Chat

https://open.rocket.chat/images/logo/android-chrome-512x512.png
. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Multiline text
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            multiline={true}
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {},
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="Rocket.Chat

https://open.rocket.chat/images/logo/android-chrome-512x512.png
"
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots TextInput SecureTextEntry should match snapshot 1`] = `
<View
  style={
    {
      "paddingHorizontal": 14,
    }
  }
>
  <View>
    <View>
      <View
        accessibilityLabel="Secure text disabled  , Rocket.Chat. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Secure text disabled
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {},
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="Rocket.Chat"
          />
        </View>
      </View>
    </View>
  </View>
  <View>
    <View>
      <View
        accessibilityLabel="Secure text enabled  . Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Secure text enabled
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            secureTextEntry={true}
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {
                    "paddingRight": 45,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="Rocket.Chat"
          />
          <View
            style={
              [
                {
                  "position": "absolute",
                },
                {
                  "right": 12,
                },
              ]
            }
          >
            <View
              accessibilityLabel="Show Password"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots TextInput ShortAndLong should match snapshot 1`] = `
<View
  style={
    {
      "paddingHorizontal": 14,
    }
  }
>
  <View>
    <View>
      <View
        accessibilityLabel="Short Text  , Rocket.Chat. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Short Text
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {},
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="Rocket.Chat"
          />
        </View>
      </View>
    </View>
  </View>
  <View>
    <View>
      <View
        accessibilityLabel="Long Text  , https://open.rocket.chat/images/logo/android-chrome-512x512.png. Error: "
        accessible={true}
        style={
          [
            {
              "gap": 4,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            [
              {
                "backgroundColor": "transparent",
                "fontFamily": "Inter",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 22,
                "textAlign": "left",
              },
              {
                "color": "#1F2329",
              },
            ]
          }
        >
          Long Text
           
        </Text>
        <View
          accessible={true}
          style={
            {
              "justifyContent": "center",
              "position": "relative",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoCorrect={false}
            keyboardAppearance="light"
            placeholder="placeholder"
            placeholderTextColor="#9EA2A8"
            style={
              [
                {
                  "color": "#1F2329",
                },
                [
                  {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "paddingHorizontal": 16,
                    "paddingVertical": 14,
                    "textAlign": "left",
                  },
                  undefined,
                  {},
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#9EA2A8",
                    "color": "#1F2329",
                  },
                  {},
                  undefined,
                ],
                {
                  "textAlign": "auto",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value="https://open.rocket.chat/images/logo/android-chrome-512x512.png"
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots ThreadMessagesView/Item Badge should match snapshot 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
            <View
              style={
                [
                  {
                    "alignSelf": "center",
                    "borderRadius": 4,
                    "height": 8,
                    "marginHorizontal": 8,
                    "width": 8,
                  },
                  {
                    "backgroundColor": "#F5455C",
                  },
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
            <View
              style={
                [
                  {
                    "alignSelf": "center",
                    "borderRadius": 4,
                    "height": 8,
                    "marginHorizontal": 8,
                    "width": 8,
                  },
                  {
                    "backgroundColor": "#F38C39",
                  },
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
            <View
              style={
                [
                  {
                    "alignSelf": "center",
                    "borderRadius": 4,
                    "height": 8,
                    "marginHorizontal": 8,
                    "width": 8,
                  },
                  {
                    "backgroundColor": "#095AD2",
                  },
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </Text>
            <View
              style={
                [
                  {
                    "alignSelf": "center",
                    "borderRadius": 4,
                    "height": 8,
                    "marginHorizontal": 8,
                    "width": 8,
                  },
                  {
                    "backgroundColor": "#095AD2",
                  },
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots ThreadMessagesView/Item Content should match snapshot 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-+999"
                >
                  +999
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  +999
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Attachment title"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Attachment title"
            >
              Attachment title
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              Rocket Cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots ThreadMessagesView/Item Themes should match snapshot 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#1F2329",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#6C727A",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#2F343D",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
            <View
              style={
                [
                  {
                    "alignSelf": "center",
                    "borderRadius": 4,
                    "height": 8,
                    "marginHorizontal": 8,
                    "width": 8,
                  },
                  {
                    "backgroundColor": "#F5455C",
                  },
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#6C727A",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#1F2329",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#F2F3F5",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#9EA2A8",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#E4E7EA",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
            <View
              style={
                [
                  {
                    "alignSelf": "center",
                    "borderRadius": 4,
                    "height": 8,
                    "marginHorizontal": 8,
                    "width": 8,
                  },
                  {
                    "backgroundColor": "#B43C4C",
                  },
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#000000",
          "opacity": 1,
        }
      }
      testID="thread-messages-view-Message content"
    >
      <View
        style={
          {
            "flexDirection": "row",
            "padding": 16,
          }
        }
      >
        <View
          accessibilityLabel="rocket.cat's avatar"
          accessible={true}
          style={
            [
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              },
              {
                "marginRight": 8,
              },
            ]
          }
          testID="avatar"
        >
          <ViewManagerAdapter_ExpoImage
            borderRadius={4}
            containerViewRef={"[React.ref]"}
            contentFit="cover"
            contentPosition={
              {
                "left": "50%",
                "top": "50%",
              }
            }
            height={36}
            nativeViewRef={"[React.ref]"}
            onError={[Function]}
            onLoad={[Function]}
            onLoadStart={[Function]}
            onProgress={[Function]}
            placeholder={[]}
            priority="high"
            source={
              [
                {
                  "headers": {
                    "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                  },
                  "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                },
              ]
            }
            style={
              {
                "borderRadius": 4,
                "height": 36,
                "width": 36,
              }
            }
            transition={null}
            width={36}
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 2,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "flexShrink": 1,
                    "fontFamily": "Inter",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "textAlign": "left",
                  },
                  {
                    "color": "#F2F3F5",
                  },
                ]
              }
            >
              rocket.cat
            </Text>
            <Text
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginLeft": 4,
                    "textAlign": "left",
                  },
                  {
                    "color": "#9EA2A8",
                  },
                ]
              }
            >
              November 10, 2020
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessibilityLabel="Message content"
              numberOfLines={2}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 22,
                    "textAlign": "left",
                  },
                  {
                    "color": "#E4E7EA",
                    "lineHeight": undefined,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
              testID="markdown-preview-Message content"
            >
              Message content
            </Text>
            <View
              style={
                [
                  {
                    "alignSelf": "center",
                    "borderRadius": 4,
                    "height": 8,
                    "marginHorizontal": 8,
                    "width": 8,
                  },
                  {
                    "backgroundColor": "#B43C4C",
                  },
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                  testID="thread-count-1"
                >
                  1
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 8,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "fontFamily": "Inter",
                        "fontSize": 10,
                        "fontWeight": "600",
                        "marginLeft": 2,
                        "textAlign": "left",
                      },
                      {
                        "color": "#9EA2A8",
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLabel="Follow thread"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "height": 0.5,
          },
          undefined,
          {
            "backgroundColor": "#CBCED1",
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage ActionButton should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage ActionSelect should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage Context should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage Fields should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage Image should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage Section should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage SectionButton should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage SectionDatePicker should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage SectionImage should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage SectionMarkdownList should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage SectionMultiSelect should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage SectionOverflow should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitMessage SectionSelect should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalActions should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalContextsDividers should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalDatePickerWithError should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalFormInput should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalFormTextArea should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalImages should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalInputWithError should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalMultiSelect should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalMultilneWithError should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalSectionAccessories should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots UIKit/UiKitModal ModalSectionSelects should match snapshot 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="always"
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingHorizontal": 16,
      },
    ]
  }
>
  <View />
</RCTScrollView>
`;

exports[`Story Snapshots Unread Badge All should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "row",
      "justifyContent": "space-evenly",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 32,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          {
            "fontSize": 10,
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      9
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 52,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          {
            "fontSize": 10,
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      +99
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      9
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      +999
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#F5455C",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      9
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#F38C39",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      9
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#095AD2",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      9
    </Text>
  </View>
</View>
`;

exports[`Story Snapshots Unread Badge DifferentMentionTypes should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "row",
      "justifyContent": "space-evenly",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      1
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#F5455C",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      1
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#F38C39",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      1
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#F5455C",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      1
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#095AD2",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      1
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#F5455C",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      1
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#F38C39",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      1
    </Text>
  </View>
</View>
`;

exports[`Story Snapshots Unread Badge Normal should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "row",
      "justifyContent": "space-evenly",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      9
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginLeft": 10,
          "paddingHorizontal": 5,
          "paddingVertical": 3,
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 42,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          undefined,
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      +999
    </Text>
  </View>
</View>
`;

exports[`Story Snapshots Unread Badge Small should match snapshot 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "row",
      "justifyContent": "space-evenly",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 32,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          {
            "fontSize": 10,
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      9
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "backgroundColor": "#9EA2A8",
          "borderRadius": 21,
          "minWidth": 52,
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "transparent",
            "fontFamily": "Inter",
            "fontSize": 13,
            "fontWeight": "600",
            "textAlign": "left",
          },
          {
            "fontSize": 10,
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      +99
    </Text>
  </View>
</View>
`;

exports[`Story Snapshots Unread Badge Themes should match snapshot 1`] = `
[
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-evenly",
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#9EA2A8",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#F5455C",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#F38C39",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#095AD2",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
  </View>,
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-evenly",
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#9EA2A8",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#B43C4C",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#955828",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#245399",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
  </View>,
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-evenly",
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#9EA2A8",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#B43C4C",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#955828",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "marginLeft": 10,
            "paddingHorizontal": 5,
            "paddingVertical": 3,
          },
          {
            "backgroundColor": "#245399",
            "borderRadius": 21,
            "minWidth": 42,
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "backgroundColor": "transparent",
              "fontFamily": "Inter",
              "fontSize": 13,
              "fontWeight": "600",
              "textAlign": "left",
            },
            undefined,
            {
              "color": "#FFFFFF",
            },
          ]
        }
      >
        1
      </Text>
    </View>
  </View>,
]
`;
