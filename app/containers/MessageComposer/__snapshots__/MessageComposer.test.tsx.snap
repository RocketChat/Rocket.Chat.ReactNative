// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Markdown tap bold 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={52}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={53}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={54}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={55}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={56}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={57}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={51}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown tap code 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={130}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={131}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={132}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={133}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={134}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={135}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={129}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown tap code-block 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={156}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={157}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={158}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={159}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={160}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={161}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={155}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown tap italic 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={78}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={79}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={80}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={81}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={82}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={83}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={77}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown tap markdown 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={39}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={40}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={41}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={42}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={43}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={44}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={38}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown tap strike 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={104}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={105}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={106}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={107}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={108}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={109}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={103}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown type test and tap bold 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={65}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={66}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={67}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={68}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={69}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={70}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={64}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown type test and tap code 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={143}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={144}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={145}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={146}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={147}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={148}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={142}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown type test and tap code-block 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={169}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={170}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={171}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={172}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={173}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={174}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={168}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown type test and tap italic 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={91}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={92}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={93}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={94}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={95}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={96}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={90}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Markdown type test and tap strike 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={117}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-close-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={118}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-bold"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={119}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-italic"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={120}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-strike"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={121}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={122}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-code-block"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={116}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Quote Adding/removing quotes 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={191}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={192}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Quote Adding/removing quotes 2`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={191}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={192}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
    <RCTScrollView
      data={
        Array [
          "abc",
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#F7F8FA",
                "borderBottomRightRadius": 4,
                "borderColor": "#EBECEF",
                "borderLeftColor": "#9EA2A8",
                "borderTopRightRadius": 4,
                "borderWidth": 1,
                "height": 64,
                "marginRight": 8,
                "padding": 8,
                "paddingLeft": 16,
                "width": 320,
              }
            }
            testID="composer-quote-abc"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#1F2329",
                      "flexShrink": 1,
                      "fontFamily": "Inter",
                      "fontSize": 14,
                      "fontWeight": "700",
                      "lineHeight": 20,
                      "paddingRight": 4,
                      "textAlign": "left",
                    }
                  }
                >
                  rocket.cat
                </Text>
                <Text
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#9EA2A8",
                      "fontFamily": "Inter",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "lineHeight": 16,
                      "textAlign": "left",
                    }
                  }
                >
                  
                </Text>
              </View>
              <RNGestureHandlerButton
                activeOpacity={0.3}
                borderless={true}
                collapsable={false}
                handlerTag={193}
                handlerType="NativeViewGestureHandler"
                hitSlop={
                  Object {
                    "bottom": 8,
                    "left": 8,
                    "right": 8,
                    "top": 8,
                  }
                }
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 24,
                  }
                }
                testID="composer-quote-remove-abc"
              >
                <View
                  accessibilityLabel="Remove quote message"
                  accessibilityRole="button"
                  accessible={true}
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#2F343D",
                          "fontSize": 24,
                        },
                        Array [
                          Object {
                            "lineHeight": 24,
                          },
                          undefined,
                        ],
                        Object {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text
              accessibilityLabel="quote this"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#2f343d",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#2F343D",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "lineHeight": 20,
                    "textAlign": "left",
                  },
                ]
              }
              testID="markdown-preview-quote this"
            >
              quote this
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`Quote Adding/removing quotes 3`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={191}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={192}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
    <RCTScrollView
      data={
        Array [
          "abc",
          "def",
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#F7F8FA",
                "borderBottomRightRadius": 4,
                "borderColor": "#EBECEF",
                "borderLeftColor": "#9EA2A8",
                "borderTopRightRadius": 4,
                "borderWidth": 1,
                "height": 64,
                "marginRight": 8,
                "padding": 8,
                "paddingLeft": 16,
                "width": 320,
              }
            }
            testID="composer-quote-abc"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#1F2329",
                      "flexShrink": 1,
                      "fontFamily": "Inter",
                      "fontSize": 14,
                      "fontWeight": "700",
                      "lineHeight": 20,
                      "paddingRight": 4,
                      "textAlign": "left",
                    }
                  }
                >
                  rocket.cat
                </Text>
                <Text
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#9EA2A8",
                      "fontFamily": "Inter",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "lineHeight": 16,
                      "textAlign": "left",
                    }
                  }
                >
                  
                </Text>
              </View>
              <RNGestureHandlerButton
                activeOpacity={0.3}
                borderless={true}
                collapsable={false}
                handlerTag={193}
                handlerType="NativeViewGestureHandler"
                hitSlop={
                  Object {
                    "bottom": 8,
                    "left": 8,
                    "right": 8,
                    "top": 8,
                  }
                }
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 24,
                  }
                }
                testID="composer-quote-remove-abc"
              >
                <View
                  accessibilityLabel="Remove quote message"
                  accessibilityRole="button"
                  accessible={true}
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#2F343D",
                          "fontSize": 24,
                        },
                        Array [
                          Object {
                            "lineHeight": 24,
                          },
                          undefined,
                        ],
                        Object {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text
              accessibilityLabel="quote this"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#2f343d",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#2F343D",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "lineHeight": 20,
                    "textAlign": "left",
                  },
                ]
              }
              testID="markdown-preview-quote this"
            >
              quote this
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#F7F8FA",
                "borderBottomRightRadius": 4,
                "borderColor": "#EBECEF",
                "borderLeftColor": "#9EA2A8",
                "borderTopRightRadius": 4,
                "borderWidth": 1,
                "height": 64,
                "marginRight": 8,
                "padding": 8,
                "paddingLeft": 16,
                "width": 320,
              }
            }
            testID="composer-quote-def"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#1F2329",
                      "flexShrink": 1,
                      "fontFamily": "Inter",
                      "fontSize": 14,
                      "fontWeight": "700",
                      "lineHeight": 20,
                      "paddingRight": 4,
                      "textAlign": "left",
                    }
                  }
                >
                  rocket.cat
                </Text>
                <Text
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#9EA2A8",
                      "fontFamily": "Inter",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "lineHeight": 16,
                      "textAlign": "left",
                    }
                  }
                >
                  
                </Text>
              </View>
              <RNGestureHandlerButton
                activeOpacity={0.3}
                borderless={true}
                collapsable={false}
                handlerTag={194}
                handlerType="NativeViewGestureHandler"
                hitSlop={
                  Object {
                    "bottom": 8,
                    "left": 8,
                    "right": 8,
                    "top": 8,
                  }
                }
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 24,
                  }
                }
                testID="composer-quote-remove-def"
              >
                <View
                  accessibilityLabel="Remove quote message"
                  accessibilityRole="button"
                  accessible={true}
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#2F343D",
                          "fontSize": 24,
                        },
                        Array [
                          Object {
                            "lineHeight": 24,
                          },
                          undefined,
                        ],
                        Object {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text
              accessibilityLabel="quote this"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "fontFamily": "Inter",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#2f343d",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#2F343D",
                    "fontFamily": "Inter",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "lineHeight": 20,
                    "textAlign": "left",
                  },
                ]
              }
              testID="markdown-preview-quote this"
            >
              quote this
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "width": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`renders correctly 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={1}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={2}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`renders correctly with audio recorder disabled 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={3}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`renders correctly with audio recorder disabled and without audio upload permissions 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={5}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`renders correctly without audio upload permissions 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={4}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`renders toolbar when focused 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={8}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-actions"
          >
            <View
              accessibilityLabel="Message actions"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={9}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-open-emoji"
          >
            <View
              accessibilityLabel="Open emoji selector"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={10}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-open-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={11}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-mention"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={12}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`send message 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={13}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={14}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`tap actions from toolbar 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={17}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-actions"
          >
            <View
              accessibilityLabel="Message actions"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={18}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-open-emoji"
          >
            <View
              accessibilityLabel="Open emoji selector"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={19}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-open-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={20}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-mention"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={21}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`tap emoji 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={29}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-actions"
      >
        <View
          accessibilityLabel="Message actions"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={30}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-emoji"
      >
        <View
          accessibilityLabel="Close emoji selector"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={31}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`tap mention 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <View
        exitBeforeEnter={true}
      >
        <View
          animate={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          exit={
            Object {
              "opacity": 0,
            }
          }
          from={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 10,
                },
              ],
            }
          }
          style={
            Object {
              "flexDirection": "row",
            }
          }
          transition={
            Object {
              "duration": 100,
              "type": "timing",
            }
          }
        >
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={177}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-actions"
          >
            <View
              accessibilityLabel="Message actions"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={178}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-open-emoji"
          >
            <View
              accessibilityLabel="Open emoji selector"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={179}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-open-markdown"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <RNGestureHandlerButton
            activeOpacity={0.3}
            borderless={true}
            collapsable={false}
            handlerTag={180}
            handlerType="NativeViewGestureHandler"
            hitSlop={
              Object {
                "bottom": 8,
                "left": 8,
                "right": 8,
                "top": 8,
              }
            }
            onActiveStateChange={[Function]}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
            testID="message-composer-mention"
          >
            <View
              accessibilityLabel="[missing \\"en.TBD\\" translation]"
              accessibilityRole="button"
              accessible={true}
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#6C727A",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={181}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;
