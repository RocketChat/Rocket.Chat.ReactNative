// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageComposer Toolbar Markdown tap bold 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={59}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={60}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={61}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={62}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={63}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={64}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={58}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown tap code 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={137}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={138}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={139}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={140}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={141}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={142}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={136}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown tap code-block 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={163}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={164}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={165}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={166}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={167}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={168}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={162}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown tap italic 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={85}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={86}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={87}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={88}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={89}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={90}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={84}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown tap markdown 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={46}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={47}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={48}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={49}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={50}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={51}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={45}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown tap strike 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={111}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={112}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={113}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={114}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={115}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={116}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={110}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown type test and tap bold 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={72}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={73}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={74}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={75}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={76}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={77}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={71}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown type test and tap code 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={150}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={151}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={152}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={153}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={154}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={155}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={149}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown type test and tap code-block 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={176}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={177}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={178}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={179}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={180}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={181}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={175}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown type test and tap italic 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={98}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={99}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={100}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={101}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={102}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={103}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={97}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar Markdown type test and tap strike 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={124}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-markdown"
      >
        <View
          accessibilityLabel="Close"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={125}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-bold"
      >
        <View
          accessibilityLabel="Bold"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={126}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-italic"
      >
        <View
          accessibilityLabel="Italic"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={127}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-strike"
      >
        <View
          accessibilityLabel="Strikethrough"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={128}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code"
      >
        <View
          accessibilityLabel="Inline code"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={129}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-code-block"
      >
        <View
          accessibilityLabel="Code block"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={123}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar tap actions 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={24}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-actions"
      >
        <View
          accessibilityLabel="Message actions"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={25}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-open-emoji"
      >
        <View
          accessibilityLabel="Open emoji selector"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={26}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-open-markdown"
      >
        <View
          accessibilityLabel="Open markdown tools"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={27}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-mention"
      >
        <View
          accessibilityLabel="Open mention autocomplete"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={28}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar tap emoji 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={36}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-actions"
      >
        <View
          accessibilityLabel="Message actions"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={37}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-close-emoji"
      >
        <View
          accessibilityLabel="Close emoji selector"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={38}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer Toolbar tap mention 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={184}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-actions"
      >
        <View
          accessibilityLabel="Message actions"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={185}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-open-emoji"
      >
        <View
          accessibilityLabel="Open emoji selector"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={186}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-open-markdown"
      >
        <View
          accessibilityLabel="Open markdown tools"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={187}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-mention"
      >
        <View
          accessibilityLabel="Open mention autocomplete"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={188}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer renders correctly 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={1}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 16,
              "left": 16,
              "right": 16,
              "top": 16,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={2}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 16,
              "left": 16,
              "right": 16,
              "top": 16,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer renders correctly with audio recorder disabled 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={3}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 16,
              "left": 16,
              "right": 16,
              "top": 16,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer renders correctly with audio recorder disabled and without audio upload permissions 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={5}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 16,
              "left": 16,
              "right": 16,
              "top": 16,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer renders correctly without audio upload permissions 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={4}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 16,
              "left": 16,
              "right": 16,
              "top": 16,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer renders toolbar when focused 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingVertical": 12,
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={8}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-actions"
      >
        <View
          accessibilityLabel="Message actions"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={9}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-open-emoji"
      >
        <View
          accessibilityLabel="Open emoji selector"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={10}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-open-markdown"
      >
        <View
          accessibilityLabel="Open markdown tools"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={11}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-mention"
      >
        <View
          accessibilityLabel="Open mention autocomplete"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <RNGestureHandlerButton
        activeOpacity={0.3}
        borderless={true}
        collapsable={false}
        handlerTag={12}
        handlerType="NativeViewGestureHandler"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "opacity": 1,
            "width": 24,
          }
        }
        testID="message-composer-send-audio"
      >
        <View
          accessibilityLabel="Send audio message"
          accessibilityRole="button"
          accessible={true}
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#6C727A",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "lineHeight": 24,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;

exports[`MessageComposer send message 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "minHeight": 48,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
    testID="message-composer"
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={20}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 16,
              "left": 16,
              "right": 16,
              "top": 16,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder=""
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 200,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          handlerTag={21}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 16,
              "left": 16,
              "right": 16,
              "top": 16,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;
