// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<keyboard-accessory-view-mock>
  <View
    style={
      Array [
        Object {
          "borderTopWidth": 1,
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#CBCED1",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          delayLongPress={600}
          handlerTag={1}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-actions"
        >
          <View
            accessibilityLabel="Message actions"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <TextInput
        blurOnSubmit={false}
        defaultValue=""
        keyboardAppearance="light"
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSelectionChange={[Function]}
        placeholder="Message "
        placeholderTextColor="#9EA2A8"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "fontFamily": "Inter",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 22,
              "maxHeight": 240,
              "minHeight": 48,
              "paddingBottom": 12,
              "paddingTop": 12,
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            Object {
              "color": "#2F343D",
            },
          ]
        }
        testID="message-composer-input"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 48,
            "justifyContent": "center",
            "paddingLeft": 12,
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={0.3}
          borderless={true}
          collapsable={false}
          delayLongPress={600}
          handlerTag={2}
          handlerType="NativeViewGestureHandler"
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID="message-composer-send-audio"
        >
          <View
            accessibilityLabel="Send audio message"
            accessibilityRole="button"
            accessible={true}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#6C727A",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</keyboard-accessory-view-mock>
`;
