// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Story Snapshots: Alerts should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={1}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={2}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={3}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={4}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={5}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={6}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={7}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={8}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={9}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={10}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={11}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={12}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="unread. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#9EA2A8",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={13}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={14}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={15}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={16}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={17}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={18}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="unread. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#9EA2A8",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        +999
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={19}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={20}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={21}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={22}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={23}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={24}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="user mentions. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    user mentions
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F5455C",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={25}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={26}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={27}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={28}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={29}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={30}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="group mentions. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    group mentions
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F38C39",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={31}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={32}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={33}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={34}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={35}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={36}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={37}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={38}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={39}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={40}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={41}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={42}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread user. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread user
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F5455C",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={43}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={44}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={45}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={46}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={47}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={48}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread group. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread group
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F38C39",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={49}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={50}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={51}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={52}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={53}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={54}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="user mentions priority 1. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    user mentions priority 1
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F5455C",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={55}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={56}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={57}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={58}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={59}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={60}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="group mentions priority 2. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    group mentions priority 2
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#F38C39",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={61}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={62}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={63}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={64}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={65}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={66}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="thread unread priority 3. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    thread unread priority 3
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: Basic should match snapshot 1`] = `
<View
  collapsable={false}
  handlerTag={67}
  handlerType="LongPressGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
>
  <View
    collapsable={false}
    enabled={true}
    handlerTag={68}
    handlerType="PanGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "backgroundColor": "#1D74F5",
              "right": "100%",
              "width": 1500,
            },
            {
              "height": 75,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "height": 75,
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Mark read"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={69}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "height": 75,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#8E6300",
              "left": "100%",
              "width": 750,
            },
            {
              "height": 75,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Favorite"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={70}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#8E6300",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontSize": 28,
                },
                [
                  {
                    "lineHeight": 28,
                  },
                  undefined,
                ],
                {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#9EA2A8",
              "left": "100%",
              "width": 1500,
            },
            {
              "height": 75,
            },
            {
              "transform": [
                {
                  "translateX": 80,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Hide"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={71}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#9EA2A8",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontSize": 28,
                },
                [
                  {
                    "lineHeight": 28,
                  },
                  undefined,
                ],
                {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
      </View>
    </View>
    <View
      style={
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={1}
        collapsable={false}
        delayLongPress={600}
        handlerTag={72}
        handlerType="NativeViewGestureHandler"
        innerRef={null}
        onActiveStateChange={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onPress={[Function]}
        rippleColor="#E4E7EA"
        style={
          [
            {
              "backgroundColor": "#FFFFFF",
              "borderRadius": undefined,
              "margin": undefined,
              "marginBottom": undefined,
              "marginEnd": undefined,
              "marginHorizontal": undefined,
              "marginLeft": undefined,
              "marginRight": undefined,
              "marginStart": undefined,
              "marginTop": undefined,
              "marginVertical": undefined,
            },
            {
              "cursor": undefined,
            },
          ]
        }
        underlayColor="#E4E7EA"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#E4E7EA",
              "borderBottomLeftRadius": undefined,
              "borderBottomRightRadius": undefined,
              "borderRadius": undefined,
              "borderTopLeftRadius": undefined,
              "borderTopRightRadius": undefined,
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={{}}
        >
          <View
            accessibilityLabel="rocket.cat. private channel. undefined. "
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 14,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <View
              accessibilityLabel="rocket.cat's avatar"
              accessible={true}
              style={
                [
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  },
                  {
                    "marginRight": 10,
                  },
                ]
              }
              testID="avatar"
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={48}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  }
                }
                transition={null}
                width={48}
              />
            </View>
            <View
              style={
                [
                  {
                    "borderBottomWidth": 0.5,
                    "flex": 1,
                    "paddingRight": 14,
                    "paddingVertical": 10,
                  },
                  {
                    "borderColor": "#CBCED1",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    },
                    {
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#1F2329",
                        "fontSize": 22,
                      },
                      [
                        {
                          "lineHeight": 22,
                        },
                        [
                          {
                            "marginRight": 4,
                          },
                          {
                            "marginRight": 8,
                          },
                        ],
                      ],
                      {
                        "fontFamily": "custom",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
                <Text
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flex": 1,
                        "fontFamily": "Inter",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  rocket.cat
                </Text>
                <View
                  style={
                    {
                      "alignItems": "flex-end",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots: CondensedRoomItem should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={73}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={74}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 60,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={75}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 24,
                    },
                    [
                      {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 60,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={76}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={77}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={78}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 60,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={36}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    }
                  }
                  transition={null}
                  width={36}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={79}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={80}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 60,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={81}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 24,
                    },
                    [
                      {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 60,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={82}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={83}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={84}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="unread. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 60,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={36}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=72",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    }
                  }
                  transition={null}
                  width={36}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    unread
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#9EA2A8",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        +999
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={85}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={86}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 60,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={87}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 24,
                    },
                    [
                      {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 60,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={88}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={89}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={90}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. public channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 60,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={36}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=72",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 36,
                      "width": 36,
                    }
                  }
                  transition={null}
                  width={36}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: CondensedRoomItemWithoutAvatar should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={91}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={92}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 60,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={93}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 24,
                    },
                    [
                      {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 60,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={94}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={95}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={96}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 60,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            {
                              "color": "#1D74F5",
                            },
                          ],
                        ]
                      }
                    >
                      10:00
                    </Text>
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "marginLeft": 10,
                            "paddingHorizontal": 5,
                            "paddingVertical": 3,
                          },
                          {
                            "backgroundColor": "#095AD2",
                            "borderRadius": 10.5,
                            "minWidth": 21,
                          },
                          undefined,
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "fontFamily": "Inter",
                              "fontSize": 13,
                              "fontWeight": "600",
                              "textAlign": "left",
                            },
                            undefined,
                            {
                              "color": "#FFFFFF",
                            },
                          ]
                        }
                      >
                        1
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={97}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={98}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 60,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={99}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 24,
                    },
                    [
                      {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 60,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={100}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={101}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={102}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 60,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={103}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={104}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 60,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={105}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 24,
                    },
                    [
                      {
                        "lineHeight": 24,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 60,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={106}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 60,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={107}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                  },
                  [
                    {
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={108}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 60,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: ExpandedRoomItemWithoutAvatar should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={109}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={110}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={111}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={112}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={113}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={114}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "justifyContent": "center",
                    },
                    {
                      "height": 75,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#1F2329",
                        "fontSize": 24,
                      },
                      [
                        {
                          "lineHeight": 24,
                        },
                        [
                          {
                            "marginRight": 4,
                          },
                          {
                            "marginRight": 12,
                          },
                        ],
                      ],
                      {
                        "fontFamily": "custom",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#095AD2",
                          "borderRadius": 10.5,
                          "minWidth": 21,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={115}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={116}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={117}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={118}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={119}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={120}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "justifyContent": "center",
                    },
                    {
                      "height": 75,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#1F2329",
                        "fontSize": 24,
                      },
                      [
                        {
                          "lineHeight": 24,
                        },
                        [
                          {
                            "marginRight": 4,
                          },
                          {
                            "marginRight": 12,
                          },
                        ],
                      ],
                      {
                        "fontFamily": "custom",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#095AD2",
                          "borderRadius": 10.5,
                          "minWidth": 21,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={121}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={122}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={123}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={124}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={125}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={126}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "justifyContent": "center",
                    },
                    {
                      "height": 75,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#1F2329",
                        "fontSize": 24,
                      },
                      [
                        {
                          "lineHeight": 24,
                        },
                        [
                          {
                            "marginRight": 4,
                          },
                          {
                            "marginRight": 12,
                          },
                        ],
                      ],
                      {
                        "fontFamily": "custom",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: LastMessage should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={127}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={128}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={129}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={130}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={131}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={132}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="No message"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-No message"
                  >
                    No message
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={133}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={134}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={135}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={136}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={137}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={138}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. 2"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="2"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-2"
                  >
                    2
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={139}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={140}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={141}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={142}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={143}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={144}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. You: 1"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="You: 1"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-You: 1"
                  >
                    You: 1
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={145}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={146}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={147}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={148}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={149}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={150}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={151}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={152}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={153}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={154}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={155}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={156}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#9EA2A8",
                          "borderRadius": 10.5,
                          "minWidth": 21,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={157}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={158}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={159}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={160}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={161}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={162}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#9EA2A8",
                          "borderRadius": 10.5,
                          "minWidth": 21,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      +999
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={163}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={164}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={165}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={166}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={167}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={168}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontWeight": "600",
                          "textAlign": "left",
                        },
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          {
                            "color": "#1D74F5",
                          },
                        ],
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "paddingHorizontal": 5,
                          "paddingVertical": 3,
                        },
                        {
                          "backgroundColor": "#095AD2",
                          "borderRadius": 10.5,
                          "minWidth": 21,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "textAlign": "left",
                          },
                          undefined,
                          {
                            "color": "#FFFFFF",
                          },
                        ]
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: OmnichannelIcon should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={169}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={170}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={171}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={172}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={173}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={174}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#158D65",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={175}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={176}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={177}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={178}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={179}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={180}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#AC892F",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={181}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={182}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={183}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={184}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={185}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={186}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#2F343D",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={187}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={188}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={189}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={190}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={191}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={192}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={193}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={194}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={195}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={196}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={197}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={198}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#158D65",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={199}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={200}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={201}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={202}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={203}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={204}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={205}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={206}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={207}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={208}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={209}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={210}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#158D65",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={211}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={212}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={213}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={214}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={215}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={216}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={217}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={218}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={219}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={220}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={221}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={222}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#158D65",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={223}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={224}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={225}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={226}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={227}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={228}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: Tag should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={229}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={230}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={231}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={232}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={233}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={234}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={235}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={236}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={237}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={238}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={239}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={240}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                      testID="auto-join-tag"
                    >
                      Auto-join
                    </Text>
                  </View>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="No message"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-No message"
                  >
                    No message
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={241}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={242}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={243}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={244}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={245}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={246}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                    >
                      Auto-join
                    </Text>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={247}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={248}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={249}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={250}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={251}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={252}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. private channel. undefined. No message"
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 16,
                        },
                        [
                          {
                            "lineHeight": 16,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            undefined,
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "borderRadius": 4,
                          "marginHorizontal": 4,
                        },
                        {
                          "backgroundColor": "#CBCED1",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "600",
                            "paddingHorizontal": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#6C727A",
                          },
                        ]
                      }
                      testID="auto-join-tag"
                    >
                      Auto-join
                    </Text>
                  </View>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID="room-item-last-message-container"
                >
                  <Text
                    accessibilityLabel="No message"
                    numberOfLines={2}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 22,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                          "lineHeight": undefined,
                        },
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 14,
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        {
                          "color": "#6C727A",
                        },
                        {},
                      ]
                    }
                    testID="markdown-preview-No message"
                  >
                    No message
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: Touch should match snapshot 1`] = `
<View
  collapsable={false}
  handlerTag={253}
  handlerType="LongPressGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
>
  <View
    collapsable={false}
    enabled={true}
    handlerTag={254}
    handlerType="PanGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "backgroundColor": "#1D74F5",
              "right": "100%",
              "width": 1500,
            },
            {
              "height": 75,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "height": 75,
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Mark read"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={255}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "flexDirection": "row",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          {
            "height": 75,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#8E6300",
              "left": "100%",
              "width": 750,
            },
            {
              "height": 75,
            },
            {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Favorite"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={256}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#8E6300",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontSize": 28,
                },
                [
                  {
                    "lineHeight": 28,
                  },
                  undefined,
                ],
                {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          [
            {
              "justifyContent": "center",
              "position": "absolute",
              "top": 0,
            },
            {
              "backgroundColor": "#9EA2A8",
              "left": "100%",
              "width": 1500,
            },
            {
              "height": 75,
            },
            {
              "transform": [
                {
                  "translateX": 80,
                },
              ],
            },
          ]
        }
      >
        <RNGestureHandlerButton
          accessibilityLabel="Hide"
          accessible={true}
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={257}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#9EA2A8",
                "height": "100%",
                "justifyContent": "center",
                "width": 80,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontSize": 28,
                },
                [
                  {
                    "lineHeight": 28,
                  },
                  undefined,
                ],
                {
                  "fontFamily": "custom",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
      </View>
    </View>
    <View
      style={
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <RNGestureHandlerButton
        activeOpacity={1}
        collapsable={false}
        delayLongPress={600}
        handlerTag={258}
        handlerType="NativeViewGestureHandler"
        innerRef={null}
        onActiveStateChange={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onPress={[Function]}
        rippleColor="#E4E7EA"
        style={
          [
            {
              "backgroundColor": "#FFFFFF",
              "borderRadius": undefined,
              "margin": undefined,
              "marginBottom": undefined,
              "marginEnd": undefined,
              "marginHorizontal": undefined,
              "marginLeft": undefined,
              "marginRight": undefined,
              "marginStart": undefined,
              "marginTop": undefined,
              "marginVertical": undefined,
            },
            {
              "cursor": undefined,
            },
          ]
        }
        underlayColor="#E4E7EA"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#E4E7EA",
              "borderBottomLeftRadius": undefined,
              "borderBottomRightRadius": undefined,
              "borderRadius": undefined,
              "borderTopLeftRadius": undefined,
              "borderTopRightRadius": undefined,
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={{}}
        >
          <View
            accessibilityLabel="rocket.cat. private channel. undefined. "
            accessibilityRole="button"
            accessible={true}
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 14,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <View
              accessibilityLabel="rocket.cat's avatar"
              accessible={true}
              style={
                [
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  },
                  {
                    "marginRight": 10,
                  },
                ]
              }
              testID="avatar"
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={4}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={48}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                priority="high"
                source={
                  [
                    {
                      "headers": {
                        "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                      },
                      "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 4,
                    "height": 48,
                    "width": 48,
                  }
                }
                transition={null}
                width={48}
              />
            </View>
            <View
              style={
                [
                  {
                    "borderBottomWidth": 0.5,
                    "flex": 1,
                    "paddingRight": 14,
                    "paddingVertical": 10,
                  },
                  {
                    "borderColor": "#CBCED1",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "width": "100%",
                    },
                    {
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#1F2329",
                        "fontSize": 22,
                      },
                      [
                        {
                          "lineHeight": 22,
                        },
                        [
                          {
                            "marginRight": 4,
                          },
                          {
                            "marginRight": 8,
                          },
                        ],
                      ],
                      {
                        "fontFamily": "custom",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
                <Text
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "flex": 1,
                        "fontFamily": "Inter",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "textAlign": "left",
                      },
                      undefined,
                      {
                        "color": "#1F2329",
                      },
                    ]
                  }
                >
                  rocket.cat
                </Text>
                <View
                  style={
                    {
                      "alignItems": "flex-end",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "fontFamily": "Inter",
                          "fontSize": 13,
                          "fontWeight": "400",
                          "marginLeft": 4,
                          "textAlign": "left",
                        },
                        {
                          "color": "#2F343D",
                        },
                        undefined,
                      ]
                    }
                  >
                    10:00
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</View>
`;

exports[`Story Snapshots: Type should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={259}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={260}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={261}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={262}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={263}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={264}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Offline. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "height": 22,
                              "textAlignVertical": "center",
                              "width": 22,
                            },
                            [
                              {
                                "marginRight": 4,
                              },
                              {
                                "marginRight": 8,
                              },
                            ],
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={265}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={266}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={267}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={268}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={269}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={270}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. public channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={271}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={272}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={273}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={274}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={275}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={276}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={277}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={278}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={279}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={280}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={281}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={282}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Omnichannel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={283}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={284}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={285}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={286}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={287}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={288}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Discussion. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={289}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={290}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={291}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={292}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={293}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={294}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. Message. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={295}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={296}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={297}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={298}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={299}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={300}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="rocket.cat. private channel. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/@rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#1F2329",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "marginRight": 4,
                            },
                            {
                              "marginRight": 8,
                            },
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    rocket.cat
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;

exports[`Story Snapshots: User should match snapshot 1`] = `
[
  <View
    collapsable={false}
    handlerTag={301}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={302}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={303}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={304}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={305}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={306}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="diego.mello. Offline. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="diego.mello's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/diego.mello?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "height": 22,
                              "textAlignVertical": "center",
                              "width": 22,
                            },
                            [
                              {
                                "marginRight": 4,
                              },
                              {
                                "marginRight": 8,
                              },
                            ],
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    diego.mello
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    handlerTag={307}
    handlerType="LongPressGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View
      collapsable={false}
      enabled={true}
      handlerTag={308}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
    >
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "backgroundColor": "#1D74F5",
                "right": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": 75,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              accessibilityLabel="Mark read"
              accessible={true}
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              handlerTag={309}
              handlerType="NativeViewGestureHandler"
              innerRef={null}
              onActiveStateChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 80,
                  },
                  {
                    "cursor": undefined,
                  },
                ]
              }
              underlayColor="black"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": undefined,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontSize": 28,
                    },
                    [
                      {
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                    {
                      "fontFamily": "custom",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            {
              "height": 75,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#8E6300",
                "left": "100%",
                "width": 750,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Favorite"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={310}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#8E6300",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            [
              {
                "justifyContent": "center",
                "position": "absolute",
                "top": 0,
              },
              {
                "backgroundColor": "#9EA2A8",
                "left": "100%",
                "width": 1500,
              },
              {
                "height": 75,
              },
              {
                "transform": [
                  {
                    "translateX": 80,
                  },
                ],
              },
            ]
          }
        >
          <RNGestureHandlerButton
            accessibilityLabel="Hide"
            accessible={true}
            activeOpacity={0.105}
            collapsable={false}
            delayLongPress={600}
            handlerTag={311}
            handlerType="NativeViewGestureHandler"
            innerRef={null}
            onActiveStateChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onPress={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#9EA2A8",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": 80,
                },
                {
                  "cursor": undefined,
                },
              ]
            }
            underlayColor="black"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "black",
                  "borderBottomLeftRadius": undefined,
                  "borderBottomRightRadius": undefined,
                  "borderRadius": undefined,
                  "borderTopLeftRadius": undefined,
                  "borderTopRightRadius": undefined,
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontSize": 28,
                  },
                  [
                    {
                      "lineHeight": 28,
                    },
                    undefined,
                  ],
                  {
                    "fontFamily": "custom",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          {
            "transform": [
              {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <RNGestureHandlerButton
          activeOpacity={1}
          collapsable={false}
          delayLongPress={600}
          handlerTag={312}
          handlerType="NativeViewGestureHandler"
          innerRef={null}
          onActiveStateChange={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onPress={[Function]}
          rippleColor="#E4E7EA"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": undefined,
                "margin": undefined,
                "marginBottom": undefined,
                "marginEnd": undefined,
                "marginHorizontal": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginStart": undefined,
                "marginTop": undefined,
                "marginVertical": undefined,
              },
              {
                "cursor": undefined,
              },
            ]
          }
          underlayColor="#E4E7EA"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#E4E7EA",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": undefined,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={{}}
          >
            <View
              accessibilityLabel="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries. Offline. undefined. "
              accessibilityRole="button"
              accessible={true}
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 14,
                  },
                  {
                    "height": 75,
                  },
                ]
              }
            >
              <View
                accessibilityLabel="rocket.cat's avatar"
                accessible={true}
                style={
                  [
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    },
                    {
                      "marginRight": 10,
                    },
                  ]
                }
                testID="avatar"
              >
                <ViewManagerAdapter_ExpoImage
                  borderRadius={4}
                  containerViewRef={"[React.ref]"}
                  contentFit="cover"
                  contentPosition={
                    {
                      "left": "50%",
                      "top": "50%",
                    }
                  }
                  height={48}
                  nativeViewRef={"[React.ref]"}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  placeholder={[]}
                  priority="high"
                  source={
                    [
                      {
                        "headers": {
                          "User-Agent": "RC Mobile; ios unknown; vunknown (unknown)",
                        },
                        "uri": "https://open.rocket.chat/avatar/rocket.cat?format=png&size=96",
                      },
                    ]
                  }
                  style={
                    {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  transition={null}
                  width={48}
                />
              </View>
              <View
                style={
                  [
                    {
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "paddingRight": 14,
                      "paddingVertical": 10,
                    },
                    {
                      "borderColor": "#CBCED1",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#6C727A",
                          "fontSize": 22,
                        },
                        [
                          {
                            "lineHeight": 22,
                          },
                          [
                            {
                              "height": 22,
                              "textAlignVertical": "center",
                              "width": 22,
                            },
                            [
                              {
                                "marginRight": 4,
                              },
                              {
                                "marginRight": 8,
                              },
                            ],
                          ],
                        ],
                        {
                          "fontFamily": "custom",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "flex": 1,
                          "fontFamily": "Inter",
                          "fontSize": 17,
                          "fontWeight": "500",
                          "textAlign": "left",
                        },
                        undefined,
                        {
                          "color": "#1F2329",
                        },
                      ]
                    }
                  >
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "flex-end",
                      }
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "fontFamily": "Inter",
                            "fontSize": 13,
                            "fontWeight": "400",
                            "marginLeft": 4,
                            "textAlign": "left",
                          },
                          {
                            "color": "#2F343D",
                          },
                          undefined,
                        ]
                      }
                    >
                      10:00
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>,
]
`;
