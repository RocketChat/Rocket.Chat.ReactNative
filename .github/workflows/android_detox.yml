name: Android Detox

on: [pull_request]

jobs:
  detox-build:
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      JAVA_OPTS: '-Xms512m -Xmx2g'
      GRADLE_OPTS: '-Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"'
      KEYSTORE: ${{ secrets.KEYSTORE }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Detox app cache key
      run: echo $(git rev-parse HEAD:app) > "./app-git-revision.txt"

    - name: Cache Detox app
      uses: actions/cache@v2
      id: detoxappcache
      with:
        path: |
          android/app/build/outputs/apk/e2ePlay/release
          android/app/build/outputs/apk/androidTest/e2ePlay/release
        key: AndroidDetoxReleaseAndTest-v4-${{ hashFiles('yarn.lock') }}-${{ hashFiles('./app-git-revision.txt') }}

    - name: Node
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Cache node modules
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      id: npmcache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Rebuild detox
      if: steps.detoxappcache.outputs.cache-hit != 'true' && steps.npmcache.outputs.cache-hit == 'true'
      run: yarn detox clean-framework-cache && yarn detox build-framework-cache

    - name: Install Dependencies
      if: steps.detoxappcache.outputs.cache-hit != 'true' && steps.npmcache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Gradle config
      working-directory: android
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      run: |
        echo -e "" > ./gradle.properties
        # echo -e "android.enableAapt2=false" >> ./gradle.properties
        echo -e "android.useAndroidX=true" >> ./gradle.properties
        echo -e "android.enableJetifier=true" >> ./gradle.properties
        echo -e "FLIPPER_VERSION=0.51.0" >> ./gradle.properties
        echo -e "VERSIONCODE=900" >> ./gradle.properties
        echo -e "APPLICATION_ID=chat.rocket.reactnative" >> ./gradle.properties
        echo -e "BugsnagAPIKey=\"\"" >> ./gradle.properties
        echo $KEYSTORE_BASE64 | base64 --decode > ./app/$KEYSTORE
        echo -e "KEYSTORE=$KEYSTORE" >> ./gradle.properties
        echo -e "KEYSTORE_PASSWORD=$KEYSTORE_PASSWORD" >> ./gradle.properties
        echo -e "KEY_ALIAS=$KEY_ALIAS" >> ./gradle.properties
        echo -e "KEY_PASSWORD=$KEYSTORE_PASSWORD" >> ./gradle.properties
        ./gradlew clean

    - run: ./gradlew app:assembleE2ePlayRelease app:assembleE2ePlayReleaseAndroidTest -DtestBuildType=release
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      working-directory: android

  detox-test-rooms:
    needs: detox-build
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      JAVA_OPTS: '-Xms512m -Xmx2g'
      GRADLE_OPTS: '-Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"'

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Detox app cache key
      run: echo $(git rev-parse HEAD:app) > "./app-git-revision.txt"

    - name: Cache Detox app
      uses: actions/cache@v2
      id: detoxappcache
      with:
        path: |
          android/app/build/outputs/apk/e2ePlay/release
          android/app/build/outputs/apk/androidTest/e2ePlay/release
        key: AndroidDetoxReleaseAndTest-v4-${{ hashFiles('yarn.lock') }}-${{ hashFiles('./app-git-revision.txt') }}

    - name: Check for Detox app
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      run: exit 1

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Cache node modules
      uses: actions/cache@v2
      id: npmcache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Rebuild detox
      if: steps.npmcache.outputs.cache-hit == 'true'
      run: yarn detox clean-framework-cache && yarn detox build-framework-cache

    - name: Install Dependencies
      if: steps.npmcache.outputs.cache-hit != 'true'
      run: yarn install

    - run: brew tap wix/brew

    - name: Run tests
      uses: ReactiveCircus/android-emulator-runner@v2.19.1
      with:
        api-level: 28
        arch: x86_64
        profile: pixel
        ram-size: 2048M
        avd-name: Pixel_API_28_AOSP
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          n=0
          until [ "$n" -ge 2 ]
          do
          yarn detox test e2e/tests/room --configuration and.emu.release --cleanup && break
          n=$((n+1)) 
          if [ "$n" -ge 2 ] do
          exit 1
          done
          sleep 15
          done
  
    - name: Upload test artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts

  detox-test-assorted:
    needs: detox-build
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      JAVA_OPTS: '-Xms512m -Xmx2g'
      GRADLE_OPTS: '-Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"'

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Detox app cache key
      run: echo $(git rev-parse HEAD:app) > "./app-git-revision.txt"

    - name: Cache Detox app
      uses: actions/cache@v2
      id: detoxappcache
      with:
        path: |
          android/app/build/outputs/apk/e2ePlay/release
          android/app/build/outputs/apk/androidTest/e2ePlay/release
        key: AndroidDetoxReleaseAndTest-v4-${{ hashFiles('yarn.lock') }}-${{ hashFiles('./app-git-revision.txt') }}

    - name: Check for Detox app
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      run: exit 1

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Cache node modules
      uses: actions/cache@v2
      id: npmcache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Rebuild detox
      if: steps.npmcache.outputs.cache-hit == 'true'
      run: yarn detox clean-framework-cache && yarn detox build-framework-cache

    - name: Install Dependencies
      if: steps.npmcache.outputs.cache-hit != 'true'
      run: yarn install

    - run: brew tap wix/brew

    - name: Run tests
      uses: ReactiveCircus/android-emulator-runner@v2.19.1
      with:
        api-level: 28
        arch: x86_64
        profile: pixel
        ram-size: 2048M
        avd-name: Pixel_API_28_AOSP
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          n=0
          until [ "$n" -ge 2 ]
          do
          yarn detox test e2e/tests/assorted --configuration and.emu.release --cleanup && break
          n=$((n+1)) 
          if [ "$n" -ge 2 ]
          do
          exit 1
          done
          sleep 15
          done

    - name: Upload test artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts

  detox-test-onboarding:
    needs: detox-build
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      JAVA_OPTS: '-Xms512m -Xmx2g'
      GRADLE_OPTS: '-Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"'

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Detox app cache key
      run: echo $(git rev-parse HEAD:app) > "./app-git-revision.txt"

    - name: Cache Detox app
      uses: actions/cache@v2
      id: detoxappcache
      with:
        path: |
          android/app/build/outputs/apk/e2ePlay/release
          android/app/build/outputs/apk/androidTest/e2ePlay/release
        key: AndroidDetoxReleaseAndTest-v4-${{ hashFiles('yarn.lock') }}-${{ hashFiles('./app-git-revision.txt') }}

    - name: Check for Detox app
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      run: exit 1

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Cache node modules
      uses: actions/cache@v2
      id: npmcache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Rebuild detox
      if: steps.npmcache.outputs.cache-hit == 'true'
      run: yarn detox clean-framework-cache && yarn detox build-framework-cache

    - name: Install Dependencies
      if: steps.npmcache.outputs.cache-hit != 'true'
      run: yarn install

    - run: brew tap wix/brew

    - name: Run tests
      uses: ReactiveCircus/android-emulator-runner@v2.19.1
      with:
        api-level: 28
        arch: x86_64
        profile: pixel
        ram-size: 2048M
        avd-name: Pixel_API_28_AOSP
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          n=0
          until [ "$n" -ge 2 ]
          do
          yarn detox test e2e/tests/onboarding --configuration and.emu.release --cleanup && break
          n=$((n+1)) 
          if [ "$n" -ge 2 ]
          do
          exit 1
          done
          sleep 15
          done
  
    - name: Upload test artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts

  detox-test-team:
    needs: detox-build
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      JAVA_OPTS: '-Xms512m -Xmx2g'
      GRADLE_OPTS: '-Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"'

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Detox app cache key
      run: echo $(git rev-parse HEAD:app) > "./app-git-revision.txt"

    - name: Cache Detox app
      uses: actions/cache@v2
      id: detoxappcache
      with:
        path: |
          android/app/build/outputs/apk/e2ePlay/release
          android/app/build/outputs/apk/androidTest/e2ePlay/release
        key: AndroidDetoxReleaseAndTest-v4-${{ hashFiles('yarn.lock') }}-${{ hashFiles('./app-git-revision.txt') }}

    - name: Check for Detox app
      if: steps.detoxappcache.outputs.cache-hit != 'true'
      run: exit 1

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Cache node modules
      uses: actions/cache@v2
      id: npmcache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Rebuild detox
      if: steps.npmcache.outputs.cache-hit == 'true'
      run: yarn detox clean-framework-cache && yarn detox build-framework-cache

    - name: Install Dependencies
      if: steps.npmcache.outputs.cache-hit != 'true'
      run: yarn install

    - run: brew tap wix/brew

    - name: Ruun tests
      uses: ReactiveCircus/android-emulator-runner@v2.19.1
      with:
        api-level: 28
        arch: x86_64
        profile: pixel
        ram-size: 2048M
        avd-name: Pixel_API_28_AOSP
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          n=0
          until [ "$n" -ge 2 ]
          do
          yarn detox test e2e/tests/team --configuration and.emu.release --cleanup && break
          n=$((n+1)) 
          if [ "$n" -ge 2 ]
          do
          exit 1
          done
          sleep 15
          done
  
    - name: Upload test artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts
