name: E2E Build Android

on:
  workflow_call:
    secrets:
      EXPERIMENTAL_KEYSTORE_BASE64:
        required: true
      EXPERIMENTAL_KEYSTORE_PASSWORD:
        required: true
      EXPERIMENTAL_KEY_ALIAS:
        required: true
      EXPERIMENTAL_KEY_PASSWORD:
        required: true
      BUGSNAG_KEY:
        required: true

jobs:
  android-build:
    runs-on: ubuntu-latest

    outputs:
      artifact_name: android-apk-${{ steps.hash.outputs.android_hash }}-${{ steps.hash.outputs.yarn_hash }}

    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v4

      - name: Checkout and Setup Node
        uses: ./.github/actions/setup-node

      - name: Setup E2E Account
        uses: ./.github/actions/e2e-account
        with:
          E2E_ACCOUNT: ${{ secrets.E2E_ACCOUNT }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Restore Gradle Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            android/.gradle
            android/app/build
            android/build
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: android-build-${{ runner.os }}-${{ hashFiles('android/**/*.gradle*', 'android/gradle.properties', 'android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            android-build-${{ runner.os }}-

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          cache-read-only: false

      - name: Decode Keystore
        run: |
          echo "${{ secrets.EXPERIMENTAL_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: Set gradle.properties
        run: |
          echo " " >> android/gradle.properties
          echo "KEYSTORE=release.keystore" >> android/gradle.properties
          echo "KEYSTORE_PASSWORD=${{ secrets.EXPERIMENTAL_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "KEY_ALIAS=${{ secrets.EXPERIMENTAL_KEY_ALIAS }}" >> android/gradle.properties
          echo "KEY_PASSWORD=${{ secrets.EXPERIMENTAL_KEY_PASSWORD }}" >> android/gradle.properties
          echo "BugsnagAPIKey=${{ secrets.BUGSNAG_KEY }}" >> android/gradle.properties

      - name: Compute hashes
        id: hash
        run: |
          ANDROID_HASH=$(find android -type f \( -name "*.gradle*" -o -name "gradle.properties" -o -name "gradle-wrapper.properties" \) -exec shasum -a 256 {} + | shasum -a 256 | awk '{print $1}')
          YARN_HASH=$(shasum -a 256 yarn.lock | awk '{print $1}')
          echo "android_hash=$ANDROID_HASH" >> $GITHUB_OUTPUT
          echo "yarn_hash=$YARN_HASH" >> $GITHUB_OUTPUT
        
      - name: Download APK artifact if exists
        id: download-apk
        uses: actions/download-artifact@v4
        with:
          name: android-apk-${{ env.ANDROID_HASH }}-${{ env.YARN_HASH }}
        continue-on-error: true

      - name: Check if APK exists
        id: apk-check
        run: |
          if [ -f android/app/build/outputs/apk/experimental/release/app-experimental-release.apk ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Build Android Release APK
        if: steps.apk-check.outputs.exists == 'false'
        working-directory: android
        run: ./gradlew assembleExperimentalRelease --build-cache --parallel --max-workers=4 --no-daemon --stacktrace

      - name: Bundle Android Assets
        if: steps.apk-check.outputs.exists == 'true'
        run: |
          npx react-native bundle \    
          --platform android \
          --dev false \
          --entry-file index.js \
          --bundle-output android/app/src/main/assets/index.android.bundle \
          --assets-dest android/app/src/main/res

      - name: Update APK with new bundle and assets
        env:
          KEYSTORE_PASSWORD: ${{ secrets.EXPERIMENTAL_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.EXPERIMENTAL_KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.EXPERIMENTAL_KEY_ALIAS }}
        if: steps.apk-check.outputs.exists == 'true'
        working-directory: android/app/build/outputs/apk/experimental/release
        run: |
          zip -u app-experimental-release.apk src/main/assets/index.android.bundle
          zip -ur app-experimental-release.apk src/main/res/
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
            -keystore ../../../../app/release.keystore \
            -storepass $KEYSTORE_PASSWORD \
            -keypass $KEY_PASSWORD \
            app-experimental-release.apk \
            $KEY_ALIAS
      
      - name: Save Gradle Cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            android/.gradle
            android/app/build
            android/build
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: android-build-${{ runner.os }}-${{ env.ANDROID_HASH }}-${{ env.YARN_HASH }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ env.ANDROID_HASH }}-${{ env.YARN_HASH }}
          path: android/app/build/outputs/apk/experimental/release/app-experimental-release.apk
        