name: 'Build Android'
description: 'Builds Android app AAB and uploads manifest and AAB'
inputs:
  type:
    description: 'Build type: official or experimental'
    required: true
  BUGSNAG_KEY:
    description: 'Bugsnag API key for build'
    required: true
  KEYSTORE_EXPERIMENTAL_BASE64:
    description: 'Base64 encoded keystore for experimental build'
    required: true
  KEYSTORE_EXPERIMENTAL:
    description: 'Keystore file name for experimental build'
    required: true
  KEYSTORE_EXPERIMENTAL_PASSWORD:
    description: 'Keystore password for experimental build'
    required: true
  KEYSTORE_EXPERIMENTAL_ALIAS:
    description: 'Keystore alias for experimental build'
    required: true
  GOOGLE_SERVICES_ANDROID:
    description: 'Google services JSON for experimental build'
    required: true
  BUGSNAG_KEY_OFFICIAL:
    description: 'Bugsnag API key for official build'
    required: true
  KEYSTORE_OFFICIAL_BASE64:
    description: 'Base64 encoded keystore for official build'
    required: true
  KEYSTORE_OFFICIAL:
    description: 'Keystore file name for official build'
    required: true
  KEYSTORE_OFFICIAL_PASSWORD:
    description: 'Keystore password for official build'
    required: true
  KEYSTORE_OFFICIAL_ALIAS:
    description: 'Keystore alias for official build'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Ruby and Bundler
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.7
        bundler-cache: true

    - name: Install Fastlane
      working-directory: android
      run: |
        bundle install --path gems
      shell: bash

    - name: Set up Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle
          android/.gradle
        key: gradle-${{ hashFiles('android/**.gradle*', 'android/**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-
    
    - name: Decode Keystore
      working-directory: android/app
      run: |
        if [[ "${{ inputs.type }}" == "experimental" ]]; then
          echo "${{ inputs.KEYSTORE_EXPERIMENTAL_BASE64 }}" | base64 -d > ${{ inputs.KEYSTORE_EXPERIMENTAL }}
        fi
        if [[ "${{ inputs.type }}" == "official" ]]; then
          echo "${{ inputs.KEYSTORE_OFFICIAL_BASE64 }}" | base64 -d > ${{ inputs.KEYSTORE_OFFICIAL }}
        fi
      shell: bash

    - name: Generate Version Code
      id: generate-version-code
      run: |
        CIRCLE_CI_OFFSET=68000
        VERSIONCODE=$((CIRCLE_CI_OFFSET + GITHUB_RUN_NUMBER))
        echo "VERSIONCODE=$VERSIONCODE" >> $GITHUB_OUTPUT
      env:
        GITHUB_RUN_NUMBER: ${{ github.run_number }}

    - name: Set gradle.properties
      working-directory: android
      run: |
        echo " " >> ./gradle.properties
        echo -e "android.useAndroidX=true" >> ./gradle.properties
        echo -e "android.enableJetifier=true" >> ./gradle.properties
        echo -e "reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64" >> ./gradle.properties
        echo -e "newArchEnabled=false" >> ./gradle.properties
        echo -e "hermesEnabled=true" >> ./gradle.properties
        echo -e "VERSIONCODE=${{ steps.generate-version-code.outputs.VERSIONCODE }}" >> ./gradle.properties

        if [[ "${{ inputs.type }}" == "experimental" ]]; then
          echo -e "APPLICATION_ID=chat.rocket.reactnative" >> ./gradle.properties
          echo -e "BugsnagAPIKey=${{ inputs.BUGSNAG_KEY }}" >> ./gradle.properties
          echo -e "KEYSTORE=${{ inputs.KEYSTORE_EXPERIMENTAL }}" >> ./gradle.properties
          echo -e "KEYSTORE_PASSWORD=${{ inputs.KEYSTORE_EXPERIMENTAL_PASSWORD }}" >> ./gradle.properties
          echo -e "KEY_ALIAS=${{ inputs.KEYSTORE_EXPERIMENTAL_ALIAS }}" >> ./gradle.properties
          echo -e "KEY_PASSWORD=${{ inputs.KEYSTORE_EXPERIMENTAL_PASSWORD }}" >> ./gradle.properties
        fi

        if [[ "${{ inputs.type }}" == "official" ]]; then
          echo -e "APPLICATION_ID=chat.rocket.android" >> ./gradle.properties
          echo -e "BugsnagAPIKey=${{ inputs.BUGSNAG_KEY_OFFICIAL }}" >> ./gradle.properties
          echo -e "KEYSTORE=${{ inputs.KEYSTORE_OFFICIAL }}" >> ./gradle.properties
          echo -e "KEYSTORE_PASSWORD=${{ inputs.KEYSTORE_OFFICIAL_PASSWORD }}" >> ./gradle.properties
          echo -e "KEY_ALIAS=${{ inputs.KEYSTORE_OFFICIAL_ALIAS }}" >> ./gradle.properties
          echo -e "KEY_PASSWORD=${{ inputs.KEYSTORE_OFFICIAL_PASSWORD }}" >> ./gradle.properties
        fi
      shell: bash

    - name: Set Google Services JSON
      working-directory: android/app
      run: |
        if [[ "${{ inputs.GOOGLE_SERVICES_ANDROID }}" ]]; then
          echo "${{ inputs.GOOGLE_SERVICES_ANDROID }}" | base64 --decode > google-services.json
        fi
      shell: bash

    - name: Build Android Release AAB
      working-directory: android
      run: |
        if [[ "${{ inputs.type }}" == "experimental" ]]; then
          ./gradlew bundleExperimentalRelease
        elif [[ "${{ inputs.type }}" == "official" ]]; then
          ./gradlew bundleOfficialRelease
        fi
      shell: bash

    - name: Upload sourcemaps/NDK symbols to Bugsnag
      run: |
        if [[ "${{ inputs.type }}" == "official" ]]; then
          yarn bugsnag:upload-android --variant officialRelease --app-manifest android/app/build/intermediates/merged_manifests/officialRelease/processOfficialReleaseManifest/AndroidManifest.xml
          yarn bugsnag-cli upload android-aab android/app/build/outputs/bundle/officialRelease/app-official-release.aab
        fi
        if [[ "${{ inputs.type }}" == "experimental" ]]; then
          yarn bugsnag:upload-android --variant experimentalRelease --app-manifest android/app/build/intermediates/merged_manifests/experimentalRelease/processExperimentalReleaseManifest/AndroidManifest.xml
          yarn bugsnag-cli upload android-aab android/app/build/outputs/bundle/experimentalRelease/app-experimental-release.aab
        fi
      shell: bash

    - name: Upload Experimental AAB
      if: ${{ inputs.type == 'experimental' }}
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: android/app/build/outputs/bundle/experimentalRelease/app-experimental-release.aab

    - name: Upload Official AAB
      if: ${{ inputs.type == 'official' }}
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: android/app/build/outputs/bundle/officialRelease/app-official-release.aab